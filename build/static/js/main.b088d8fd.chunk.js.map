{"version":3,"sources":["components/Card.js","components/Login.js","components/Navbar.js","components/Home.js","components/CarouselDemo.js","components/GifModal.js","components/MeditateModal.js","components/TakeABreak.js","components/TodoList.js","components/AddTodo.js","components/Timer.js","components/Work.js","components/ChatBox.js","components/Chat.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","bg","py","px","base","md","shadow","rounded","sm","Login","useHistory","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","signInSuccessUrl","minH","lg","bgGradient","maxW","mx","textAlign","size","fontWeight","color","bgClip","fontSize","mt","columns","spacing","firebaseAuth","Navbar","useColorModeValue","mobileNav","useDisclosure","history","Fragment","header","w","alignItems","justifyContent","a","href","title","display","htmlColor","h1","ml","mr","variant","colorScheme","name","currentUser","displayName","src","photoURL","onClick","push","boxSize","aria-label","icon","onOpen","pos","top","left","right","isOpen","flexDirection","p","pb","m","onClose","Home","user","require","token","getIdToken","email","signOut","useEffect","axios","post","then","res","console","log","data","as","style","background","width","height","cursor","align","_hover","boxShadow","gap","alignContent","CarouselDemo","apiKey","theme","Components","useContext","SearchContext","fetchGifs","searchKey","GifModal","borderRadius","h","motionPreset","scrollBehavior","MeditateModal","fontFamily","controls","TakeABreak","GiphyFetch","params","particles","number","value","interactivity","events","onhover","enable","mode","locale","audioLists","singer","cover","musicSrc","TodoList","todos","deleteTodo","editTodo","useState","modalValue","setModalValue","setIsOpen","handleEditInputChange","e","id","text","target","handleEditSubmit","preventDefault","length","map","todo","Delete","Edit","handleEditClick","onSubmit","type","placeholder","onChange","AddTodo","addTodo","toast","useToast","setValue","nanoid","status","duration","isClosable","Label","styled","form","LabelText","label","LabelInput","input","OutputLabel","handleTimerLabelInput","OutputDisplay","total","timeTotal","isLabel","handleTimerLabel","s","time","timeValues","Object","entries","Text","entry","index","position","x","y","fill","alignmentBaseline","textAnchor","perimeter","progress","transform","viewBox","d","stroke","strokeWidth","shapeRendering","strokeDasharray","strokeDashoffset","r","cx","cy","TimerButton","button","OutputContainer","div","OutputControls","TimerOutput","isPlaying","handleTimerToggle","handleTimerNew","handleTimerAdd","handleTimerReset","from","opacity","to","Input","isInput","InputTime","h2","InputSpan","span","suffix","InputButton","formatTime","InputDisplay","handleDialBack","InputSpans","pair","Dial","Digit","InputDial","handleDial","Digits","i","InputContainer","TimerInput","handleTimerStart","Timer","state","isTimer","bind","inputTime","padStart","parseInt","substring","this","setState","textContent","updateTime","intervalID","setInterval","clearInterval","startTimer","querySelector","className","Component","Work","bottomBg","useToken","setTodos","bgColor","textColor","newTodos","filter","item","updatedTodo","updatedItem","newTodo","ChatBox","humanMessages","aiMessages","allMessages","StreamChat","getInstance","message","class","Chat","setHumanMessages","setMessage","setAiMessages","messageText","response","Landing","isSignedIn","Feature","shrink","fillRule","clipRule","dt","lineHeight","dd","children","overflow","xl","border","letterSpacing","mb","direction","spacingY","spacingX","alignSelf","colSpan","gridTemplateColumns","gridColumnGap","gridRowGap","initializeApp","authDomain","App","setIsSignedIn","onAuthStateChanged","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAIaA,EAAO,SAACC,GAAD,OAClB,cAAC,IAAD,aACEC,GAAI,QACJC,GAAG,IACHC,GAAI,CACFC,KAAM,IACNC,GAAI,MAENC,OAAO,OACPC,QAAS,CACPC,GAAI,OAEFR,K,oCCTKS,EAAQ,WACLC,cAAd,IACMC,EAAW,CACfC,WAAY,QACZC,cAAe,CACbC,IAASC,KAAKC,mBAAmBC,YACjCH,IAASC,KAAKG,qBAAqBD,YACnCH,IAASC,KAAKI,kBAAkBF,aAElCG,UAAW,CACTC,4BAA6B,kBAAM,IAErCC,iBAAkB,SAGpB,OACE,8BACE,eAAC,IAAD,CACEC,KAAK,QACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCAPb,UASE,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,eAAC,IAAD,CAAKC,KAAK,KAAKC,GAAG,OAAlB,UACE,cAAC,IAAD,CACEC,UAAU,SACVC,KAAK,MACLC,WAAW,YACXC,MAAM,cAJR,kBAQA,uBACA,eAAC,EAAD,CAAMxB,QAAQ,KAAd,UACE,cAAC,IAAD,CACEqB,UAAU,SACVH,WAAW,iCACXO,OAAO,OACPF,WAAW,OACXG,SAAS,KALX,qCASA,cAAC,IAAD,CAAYC,GAAG,IAAIC,QAAS,EAAGC,QAAQ,IAAvC,SACE,cAAC,IAAD,CACEzB,SAAUA,EACV0B,aAAcvB,IAASC,uB,wJC1C1BuB,EAAS,WACpB,IAAMrC,EAAKsC,YAAkB,QAAS,YAChCC,EAAYC,cACdC,EAAUhC,cAId,OACE,cAAC,IAAMiC,SAAP,UACE,cAAC,IAAOC,OAAR,CACE3C,GAAIA,EACJ4C,EAAE,OACF1C,GAAI,CAAEC,KAAM,EAAGI,GAAI,GACnBN,GAAI,EACJI,OAAO,KALT,SAOE,eAAC,IAAD,CAAMwC,WAAW,SAASC,eAAe,gBAAgBpB,GAAG,OAA5D,UACE,eAAC,IAAD,WACE,cAAC,IAAOqB,EAAR,CAAUC,KAAK,IAAIC,MAAM,OAAOC,QAAQ,OAAOL,WAAW,SAA1D,SACE,cAAC,IAAD,CAAiBb,SAAS,QAAQmB,UAAU,cAE9C,cAAC,IAAOC,GAAR,CAAWpB,SAAS,MAAMH,WAAW,OAAOwB,GAAG,IAA/C,qBAIF,eAAC,IAAD,CAAQH,QAAQ,OAAOL,WAAW,SAASV,QAAS,EAApD,UACE,eAAC,IAAD,CACEA,QAAS,EACTmB,GAAI,EACJxB,MAAM,YACNoB,QAAS,CAAE/C,KAAM,OAAQC,GAAI,eAJ/B,UAME,cAAC,IAAD,CAAM4C,KAAK,QAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,oBAIF,cAAC,IAAD,CAAMR,KAAK,QAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,0BAIF,cAAC,IAAD,CAAMR,KAAK,QAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,oBAIF,cAAC,IAAD,CAAMR,KAAK,SAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,wBAKJ,cAAC,IAAD,CACE5B,KAAK,KACL6B,KAAM5C,IAASC,OAAO4C,YAAYC,YAClCC,IAAK/C,IAASC,OAAO4C,YAAYG,SACjCC,QArDG,WACbrB,EAAQsB,KAAK,UAgDL,SAME,cAAC,IAAD,CAAaC,QAAQ,SAAShE,GAAG,gBAEnC,eAAC,IAAD,CAAKkD,QAAS,CAAE/C,KAAM,cAAeC,GAAI,QAAzC,UACE,cAAC,IAAD,CACE8C,QAAS,CAAE/C,KAAM,OAAQC,GAAI,QAC7B6D,aAAW,YACXjC,SAAS,OACTF,MAAOQ,YAAkB,WAAY,WACrCiB,QAAQ,QACRW,KAAM,cAAC,IAAD,IACNJ,QAASvB,EAAU4B,SAGrB,eAAC,IAAD,CACEC,IAAI,WACJC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPrB,QAASX,EAAUiC,OAAS,OAAS,OACrCC,cAAc,SACdC,EAAG,EACHC,GAAI,EACJC,EAAG,EACH5E,GAAIA,EACJmC,QAAS,EACT7B,QAAQ,KACRD,OAAO,KAbT,UAeE,cAAC,IAAD,CACE4D,aAAW,aACXH,QAASvB,EAAUsC,UAGrB,cAAC,IAAD,CAAM7B,KAAK,QAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,oBAIF,cAAC,IAAD,CAAMR,KAAK,QAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,0BAIF,cAAC,IAAD,CAAMR,KAAK,QAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,oBAIF,cAAC,IAAD,CAAMR,KAAK,SAAX,SACE,cAAC,IAAD,CAAQO,QAAQ,QAAQC,YAAY,YAApC,sCCxGLsB,EAAO,WAClB,IAAIrC,EAAUhC,cAIVsE,GAHgBC,EAAQ,KAGjB,CACTrC,OAAQ,8BACRsC,MAJepE,IAASC,OAAO4C,YAAYwB,aAK3CC,MAAOtE,IAASC,OAAO4C,YAAYyB,QAGjCC,EAAU,WACZvE,IAASC,OAAOsE,UAChB3C,EAAQsB,KAAK,MAqBf,OANAsB,qBAAU,WACRC,IAAMC,KAAK,oCAAqCR,GAAMS,MAAK,SAACC,GAC1DC,QAAQC,IAAIF,EAAIG,WAEjB,IAGD,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEtE,KAAK,QACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCAPb,SAUE,eAAC,IAAD,CAAKC,KAAK,KAAKC,GAAG,OAAlB,UACE,uBACA,uBACA,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAASI,MAAM,QAAQE,SAAS,MAAMH,WAAW,YAAjD,yBAIF,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAKgE,GAAG,SAAS/B,QAASsB,EAA1B,SACE,eAAC,IAAD,CACEU,MAAO,CACLC,WAAY,QACZC,MAAO,QACPC,OAAQ,QACRC,OAAQ,WALZ,UAQE,uBACA,eAAC,IAAD,CAAMvE,UAAU,SAASK,SAAS,KAAKH,WAAW,OAAlD,oBAEE,cAAC,IAAD,CACEL,WAAW,iCACXO,OAAO,OACPF,WAAW,OAHb,SAKGhB,IAASC,OAAO4C,YAAYC,iBAGjC,uBACA,qBAAKwC,MAAM,SAAX,SACE,qBAAKvC,IAAK/C,IAASC,OAAO4C,YAAYG,aAExC,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEsC,MAAM,SACNrE,MAAO,QACPgC,QAASsB,EACT5D,WAAW,iCACX4E,OAAQ,CACN5E,WAAY,iCACZ6E,UAAW,MAPf,+BAgBR,uBACA,uBACA,uBACA,uBACA,eAAC,IAAD,CAAYnE,QAAS,CAAC,EAAG,GAAIoE,IAAI,QAAjC,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKT,GAAG,SAAS/B,QAtFZ,WACfrB,EAAQsB,KAAK,UAqFiCwC,aAAa,SAAjD,SACE,eAAC,IAAD,CACET,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,OAAQ,QACRC,OAAQ,WALZ,UAQE,uBACA,uBACA,uBACA,cAAC,IAAD,CACEvE,UAAU,SACVK,SAAS,MACTH,WAAW,OAHb,yBAUN,cAAC,IAAD,UACE,cAAC,IAAD,CAAKgE,GAAG,SAAS/B,QAjHZ,WACfrB,EAAQsB,KAAK,UAgHiCwC,aAAa,SAAjD,SACE,eAAC,IAAD,CACET,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,OAAQ,QACRC,OAAQ,WALZ,UAQE,uBACA,uBACA,uBACA,cAAC,IAAD,CACEvE,UAAU,SACVK,SAAS,MACTH,WAAW,OAHb,+BAUN,cAAC,IAAD,UACE,cAAC,IAAD,CAAKgE,GAAG,SAAS/B,QAhIX,WAChBrB,EAAQsB,KAAK,WA+HkCwC,aAAa,SAAlD,SACE,eAAC,IAAD,CACET,MAAO,CACLC,WAAY,UACZC,MAAO,QACPC,OAAQ,QACRC,OAAQ,WALZ,UAQE,uBACA,uBACA,uBACA,cAAC,IAAD,CACEvE,UAAU,SACVK,SAAS,MACTH,WAAW,OAHb,6C,SCpLL2E,EAAe,kBACxB,cAAC,uBAAD,CAAsBC,OAAQ,mCAAoCC,MAAO,OAAzE,SACI,cAAC,EAAD,OAMFC,EAAa,WAAO,IAAD,EACYC,qBAAWC,iBAApCC,EADa,EACbA,UAAWC,EADE,EACFA,UACnB,OACI,qCACI,cAAC,YAAD,IACA,uBACA,cAAC,gBAAD,IACA,uBACA,cAAC,OAAD,CAAsB7E,QAAS,EAAG8D,MAAO,IAAKc,UAAWA,GAA9CC,O,oCCTVC,EAAW,WAAO,IAAD,EACQxE,cAA5BgC,EADoB,EACpBA,OAAQL,EADY,EACZA,OAAQU,EADI,EACJA,QACxB,OACE,gCACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEgB,GAAG,SACHoB,aAAa,KACbjH,GAAG,cACH8B,MAAM,QACN5B,GAAI,IACJgH,EAAG,IACHpD,QAASK,EAPX,SASE,cAAC,IAAD,CAAMnC,SAAS,KAAKH,WAAW,YAA/B,8BAGJ,eAAC,IAAD,CACE2C,OAAQA,EACRK,QAASA,EACTsC,aAAa,gBACbvF,KAAM,KACNwF,eAAgB,SALlB,UAOE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,iCACA,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAQ5D,YAAY,OAAOF,GAAI,EAAGQ,QAASe,EAA3C,+B,2BC7BCwC,EAAgB,WAAO,IAAD,EACG7E,cAA5BgC,EADyB,EACzBA,OAAQL,EADiB,EACjBA,OAAQU,EADS,EACTA,QACxB,OACE,gCACE,cAAC,IAAD,UACA,cAAC,IAAD,CACIgB,GAAG,SACHoB,aAAa,KACbjH,GAAG,cACH8B,MAAM,QACN5B,GAAI,IACJgH,EAAG,IACHpD,QAASK,EAPb,SASI,cAAC,IAAD,CAAMnC,SAAS,KAAKH,WAAW,YAA/B,0BAGJ,eAAC,IAAD,CACE2C,OAAQA,EACRK,QAASA,EACTsC,aAAa,gBACbvF,KAAM,KACNwF,eAAgB,SALlB,UAOE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,2CACA,cAAC,IAAD,IACA,eAAC,IAAD,WACE,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAME,WAAW,UAAUtF,SAAS,KAAKH,WAAW,OAApD,uCAEJ,uBACA,cAAC,IAAD,UACA,cAAC,IAAD,CACE+B,IAAI,mDAIN,uBACA,uBACA,cAAC,IAAD,UACA,cAAC,IAAD,CACEA,IAAI,+DACJ2D,UAAQ,MAGV,uBACA,uBACA,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMD,WAAW,UAAUtF,SAAS,KAAKH,WAAW,OAApD,oCAEJ,uBACA,cAAC,IAAD,UACA,cAAC,IAAD,CACE+B,IAAI,+CAIN,uBACA,uBACA,cAAC,IAAD,UACA,cAAC,IAAD,CACEA,IAAI,gHACJ2D,UAAQ,SAIZ,cAAC,IAAD,UACE,cAAC,IAAD,CAAQ/D,YAAY,OAAOF,GAAI,EAAGQ,QAASe,EAA3C,+BC5EC2C,IAFM,IAAIC,aAAW,oCAER,WAuBxB,OACE,gCACI,cAAC,EAAD,IACF,cAAC,IAAD,CACEnG,KAAK,QACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCAPb,SASE,eAAC,IAAD,CAAKC,KAAK,KAAKC,GAAG,OAAlB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASI,MAAM,QAAQE,SAAS,MAAMH,WAAW,YAAjD,4BAIF,uBACA,uBACA,eAAC,IAAD,CAAYK,QAAS,CAAC,EAAG,GAAIoE,IAAI,QAAjC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,uBACA,uBACA,uBACA,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEN,MAAO,IACPC,OAAQ,IACRyB,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNC,MAAO,KAETjG,KAAM,CACJiG,MAAO,GAET9B,WAAY,CACVjE,MAAO,CACL+F,MAAO,aAIbC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,kBAOlB,uBACA,uBACA,uBACA,uBACA,cAAC,IAAD,CACExB,MAAO,OACPyB,OAAQ,QACRD,KAAM,OACNE,WAvFS,CACjB,CACE3E,KAAM,eACN4E,OAAQ,cACRC,MACE,0HACFC,SACE,qIAMJ,CACE9E,KAAM,4BACN4E,OAAQ,uBACRC,MACE,0HACFC,SACE,8I,qHCfD,SAASC,GAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAAY,EAChCC,mBAAS,IADuB,gCAEpBA,mBAAS,KAFW,mBAEjDC,EAFiD,KAErCC,EAFqC,OAG5BF,oBAAS,GAHmB,mBAGjDpE,EAHiD,KAGzCuE,EAHyC,KAKxD,SAASlE,IACPkE,GAAU,GAUZ,SAASC,EAAsBC,EAAGC,GAChCJ,EAAc,2BAAKD,GAAN,IAAkBM,KAAMF,EAAEG,OAAOvB,SAC9CnC,QAAQC,IAAIkD,EAAYK,GAG1B,SAASG,EAAiBJ,GACxBA,EAAEK,iBAEFX,EAASE,EAAWK,GAAIL,GACxBC,EAAc,IACdC,GAAU,GAGZ,OAAQN,EAAMc,OAKZ,cAAC,IAAD,UACGd,EAAMe,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CAAQtH,QAAQ,OAAOS,EAAE,QAAzB,SACE,eAAC,IAAD,CAAM8B,EAAG,EAAG9B,EAAE,QAAQsE,EAAE,OAAOpE,eAAe,gBAA9C,UAEE,cAAC,IAAD,UAAO2G,EAAKN,OACZ,eAAC,IAAD,CAAMvG,EAAE,OAAR,UACE,cAAC8G,GAAA,EAAD,CACE5H,MAAM,UACNwB,GAAG,IACHQ,QAAS,kBAAM4E,EAAWe,EAAKP,OAEjC,cAACS,GAAA,EAAD,CAAU7F,QAAS,kBArC/B,SAAyB2F,GACvBV,GAAU,GAEVD,EAAcW,GACd/D,QAAQC,IAAI8D,GAiCuBG,CAAgBH,SAG3C,eAAC,IAAD,CAAOjF,OAAQA,EAAQK,QAASA,EAAhC,UACE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,6BACA,cAAC,IAAD,IACA,uBAAMgF,SAAUR,EAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACExB,MAAOgB,EAAWM,KAElB5F,QAAQ,UACRuG,KAAK,OACLC,YAAY,sBACZC,SAAUhB,GAJLH,EAAWK,MAOpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ1F,YAAY,WAAWF,GAAI,EAAGQ,QAASe,EAA/C,mBAGA,cAAC,IAAD,CAAQiF,KAAK,SAAStG,YAAY,WAAWF,GAAI,EAAjD,0CAvChB,cAAC,KAAD,CAAOE,YAAY,SAASD,QAAQ,UAAU0D,aAAa,IAAIvC,EAAE,IAAIE,EAAE,IAAvE,kC,wBC7CG,SAASqF,GAAT,GAA+B,IAAZC,EAAW,EAAXA,QACpBC,EAAQC,eADuB,EAEXxB,mBAAS,IAFE,mBAE9Bf,EAF8B,KAEvBwC,EAFuB,KAyBjC,OACI,sBAAMR,SAtBd,SAAsBZ,GAGtB,GAFIA,EAAEK,iBAEO,KAAVzB,EAAH,CASA,IAAM4B,EAAO,CACTP,GAAIoB,eACJnB,KAAMtB,GAGVqC,EAAQT,GACRY,EAAS,SAdLF,EAAM,CACFlH,MAAO,yBACPsH,OAAQ,UACRC,SAAU,IACVC,YAAY,KAcZ,SACA,eAAC,IAAD,CAAOtI,QAAS,EAAhB,UACI,cAAC,KAAD,CACAF,GAAI,EACJ4F,MAAOA,EACPtE,QAAQ,UACRuG,KAAK,OACLC,YAAY,qBACZC,SAAU,SAACf,GAAD,OAAKoB,EAASpB,EAAEG,OAAOvB,UACjC,cAAC,IAAD,CAAQrE,YAAY,WAAWsG,KAAK,SAApC,2B,oHChCNY,GAAQC,KAAOC,KAAV,uSAaLC,GAAYF,KAAOG,MAAV,2FAMTC,GAAaJ,KAAOK,MAAV,gPAWVC,GAAc,SAAC,GAAsC,IAApCH,EAAmC,EAAnCA,MAAOI,EAA4B,EAA5BA,sBAC5B,OACE,eAACR,GAAD,CAAOb,SAAUqB,EAAjB,UACE,cAACL,GAAD,4BACA,cAACE,GAAD,CAAYjB,KAAK,OAAOC,YAAae,QAOrCK,GAAgB,SAAC,GAYrB,IALK,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,UACAP,EAII,EAJJA,MACAQ,EAGI,EAHJA,QACAC,EAEI,EAFJA,iBACAL,EACI,EADJA,sBAGIM,EAAIH,EACJzG,EAAI,EACJsC,EAAI,EACDsE,GAAK,IACVA,GAAK,GACL5G,GAAK,EAGP,KAAOA,GAAK,IACVA,GAAK,GACLsC,GAAK,EAKP,IAAMuE,EAAO,GACTL,GAAS,OACXK,EAAKvE,EAAIA,GAEPkE,GAAS,KACXK,EAAK7G,EAAIA,GAEX6G,EAAKD,EAAIA,EAET,IAAME,EAAaC,OAAOC,QAAQH,GAE5BI,EAAOH,EAAWlC,KAAI,SAACsC,EAAOC,GAGlC,IAAMC,EAAY,IAAMN,EAAWnC,OAAS,IAAOwC,EAAQ,GAC3D,OACE,uBACEE,EAAGD,EACHE,EAAE,KACFC,KAAK,UACLC,kBAAkB,SAClBC,WAAW,SAEXxK,WAAW,OACXG,SAAS,OARX,UAUG8J,EAAM,GACP,uBAAO9J,SAAS,UAAUoK,kBAAkB,UAA5C,SACGN,EAAM,OANJA,EAAM,OAcXQ,EAAY,OAIZC,EAAW,EAAIlB,EAAYD,EAG3BoB,EAAS,kBAAyB,IAAXD,EAAd,qCACF,IAAXA,EADa,KAIf,OACE,eAAC,IAAM7J,SAAP,WAIG4I,GACC,cAAC,GAAD,CACER,MAAOA,EACPI,sBAAuBA,IAG3B,qBAAKuB,QAAQ,cAAczG,MAAM,MAAjC,SAEE,oBAAGwG,UAAU,iBAAb,UAEE,sBACEE,EAAE,gDACFC,OAAO,OACPC,YAAY,IACZT,KAAK,OACLU,eAAe,uBAGjB,sBACEH,EAAE,gDACFC,OAAO,UACPC,YAAY,IACZE,gBAAiBR,EACjBS,iBAAkBT,EAAYA,EAAYC,EAC1CJ,KAAK,OACLU,eAAe,uBAIjB,wBACEG,EAAE,MACFC,GAAG,KACHC,GAAG,KACHf,KAAK,UACLK,UAAWA,IAGb,sBACEP,EAAE,KACFC,EAAE,KACFC,KAAK,OACLC,kBAAkB,SAClBC,WAAW,SACXrK,SAAS,UACT8B,QAASyH,EAPX,SASGT,IAEFe,WAQLsB,GAAcxC,KAAOyC,OAAV,kSAkBXC,GAAkB1C,KAAO2C,IAAV,iLAUfC,GAAiB5C,KAAO2C,IAAV,6LASdE,GAAc,SAAC,GAYd,IAXLpC,EAWI,EAXJA,MACAC,EAUI,EAVJA,UACAP,EASI,EATJA,MACAQ,EAQI,EARJA,QACAmC,EAOI,EAPJA,UACAC,EAMI,EANJA,kBACAC,EAKI,EALJA,eACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,iBACAtC,EAEI,EAFJA,iBACAL,EACI,EADJA,sBAGA,OACE,cAAC,UAAD,CACE4C,KAAM,CAAEC,QAAS,EAAGvB,UAAW,sBAC/BwB,GAAI,CAAED,QAAS,EAAGvB,UAAW,iBAF/B,SAIG,gBAAGuB,EAAH,EAAGA,QAASvB,EAAZ,EAAYA,UAAZ,OACC,eAACa,GAAD,CAAiBvH,MAAO,CAAEiI,UAASvB,aAAnC,UAEE,cAAC,GAAD,CACEpB,MAAOA,EACPC,UAAWA,EACXP,MAAOA,EACPQ,QAASA,EACTC,iBAAkBA,EAClBL,sBAAuBA,IAGzB,eAACqC,GAAD,WAEE,wBAAQzJ,QAAS6J,EAAjB,SAAiC,cAAC,IAAD,CAAM7L,MAAM,QAAZ,yBAGjC,cAACqL,GAAD,CAAarJ,QAAS4J,EAAtB,SACGD,EACC,sBAAKhB,QAAQ,cAAb,UACE,sBACER,EAAE,KACFC,EAAE,KACFlG,MAAM,KACNC,OAAO,KACP0G,OAAO,OACPC,YAAY,MACZT,KAAK,iBAEP,sBACEF,EAAE,KACFC,EAAE,KACFlG,MAAM,KACNC,OAAO,KACP0G,OAAO,OACPC,YAAY,MACZT,KAAK,oBAIT,qBAAKM,QAAQ,cAAb,SACE,sBACEC,EAAE,6BACFC,OAAO,OACPC,YAAY,MACZT,KAAK,qBAOZsB,EACC,wBAAQ3J,QAAS8J,EAAjB,SAAiC,cAAC,IAAD,CAAM9L,MAAM,QAAZ,yBAEjC,wBAAQgC,QAAS+J,EAAjB,SAAmC,cAAC,IAAD,CAAM/L,MAAM,QAAZ,qCAU3CmM,GAAQtD,KAAO2C,IAAV,4VASA,SAACvN,GAAD,OAAYA,EAAMmO,QAAU,UAAY,eAI7CC,GAAYxD,KAAOyD,GAAV,2GAMTC,GAAY1D,KAAO2D,KAAV,kTAQC,SAACvO,GAAD,OAAWA,EAAMwO,UAM3BC,GAAc7D,KAAOyC,OAAV,oFAOjB,SAASqB,GAAWhD,GAClB,OAAOA,GAAQ,GAAKA,EAAb,WAAwBA,GAGjC,IAAMiD,GAAe,SAAC,GAAuC,IAArCR,EAAoC,EAApCA,QAASzC,EAA2B,EAA3BA,KAAMkD,EAAqB,EAArBA,eAU/BC,EADYjD,OAAOC,QAAQH,GACJjC,KAAI,SAACqF,GAAD,OAC/B,cAACR,GAAD,CAAyBE,OAAQM,EAAK,GAAtC,SACGJ,GAAWI,EAAK,KADHA,EAAK,OAKvB,OACE,eAACZ,GAAD,CAAOC,QAASA,EAAhB,UACE,cAACC,GAAD,UAAYS,IAGZ,cAACJ,GAAD,CAAa1K,QAAS6K,EAAtB,SACE,sBAAKlC,QAAQ,cAAb,UACE,sBACEC,EAAE,oBACFE,YAAY,MACZD,OAAO,eACPR,KAAK,SAGP,sBACEO,EAAE,qBACFE,YAAY,MACZD,OAAO,eACPR,KAAK,SAGP,sBACEO,EAAE,sCACFE,YAAY,MACZD,OAAO,eACPR,KAAK,kBASX2C,GAAOnE,KAAO2C,IAAV,+JASJyB,GAAQpE,KAAOyC,OAAV,i8BAsCL4B,GAAY,SAAC,GAGjB,IAHqC,IAAlBC,EAAiB,EAAjBA,WAEbC,EAAS,GACNC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BD,EAAOnL,KACL,cAACgL,GAAD,CAAejL,QAASmL,EAAxB,SACGE,GADSA,IAKhB,OAAO,cAACL,GAAD,UAAOI,KAOVE,GAAiBzE,KAAO2C,IAAV,iLAUd+B,GAAa,SAAC,GAMb,IALLrE,EAKI,EALJA,MACAS,EAII,EAJJA,KACAwD,EAGI,EAHJA,WACAN,EAEI,EAFJA,eACAW,EACI,EADJA,iBAGA,OACE,cAAC,UAAD,CACExB,KAAM,CAAEC,QAAS,EAAGvB,UAAW,uBAC/BwB,GAAI,CAAED,QAAS,EAAGvB,UAAW,iBAF/B,SAIG,gBAAGuB,EAAH,EAAGA,QAASvB,EAAZ,EAAYA,UAAZ,OACC,eAAC4C,GAAD,CAAgBtJ,MAAO,CAAEiI,UAASvB,aAAlC,UAKE,cAAC,GAAD,CACE0B,QAA0B,IAAjBlD,EAAMzB,OACfkC,KAAMA,EACNkD,eAAgBA,IAIlB,cAAC,GAAD,CAAWM,WAAYA,IAGtBjE,GAEC,cAACmC,GAAD,CAAarJ,QAASwL,EAAtB,SACE,qBAAK7C,QAAQ,cAAb,SACE,sBACEC,EAAE,6BACFC,OAAO,OACPC,YAAY,MACZT,KAAK,4BAiBVoD,GAAb,oDACE,WAAYxP,GAAQ,IAAD,+BACjB,cAAMA,IAWDyP,MAAQ,CACXxE,MAAO,GACPS,KAAM,CACJvE,EAAG,EACHtC,EAAG,EACH4G,EAAG,GAELH,UAAW,EACXD,MAAO,EACPN,MAAO,QACP2E,SAAS,EACThC,WAAW,EACXnC,SAAS,GAIX,EAAK2D,WAAa,EAAKA,WAAWS,KAAhB,iBAClB,EAAKf,eAAiB,EAAKA,eAAee,KAApB,iBACtB,EAAKJ,iBAAmB,EAAKA,iBAAiBI,KAAtB,iBACxB,EAAKhC,kBAAoB,EAAKA,kBAAkBgC,KAAvB,iBACzB,EAAK9B,eAAiB,EAAKA,eAAe8B,KAApB,iBACtB,EAAK/B,eAAiB,EAAKA,eAAe+B,KAApB,iBACtB,EAAK7B,iBAAmB,EAAKA,iBAAiB6B,KAAtB,iBACxB,EAAKnE,iBAAmB,EAAKA,iBAAiBmE,KAAtB,iBACxB,EAAKxE,sBAAwB,EAAKA,sBAAsBwE,KAA3B,iBApCZ,EADrB,+CAyCE,SAAW1E,GAET,IAAM2E,EAAY3E,EAAM4E,SAAS,EAAG,GAEhC1I,EAAI2I,SAASF,EAAUG,UAAU,EAAG,GAAI,IACxClL,EAAIiL,SAASF,EAAUG,UAAU,EAAG,GAAI,IACxCtE,EAAIqE,SAASF,EAAUG,UAAU,IAE/BzE,EAAgB,GAAJnE,EAAS,GAAS,GAAJtC,EAAS4G,EAEnCC,EAAO,CACXvE,IACAtC,IACA4G,KAIFuE,KAAKC,SAAS,CACZvE,OACAJ,YACAD,MAAOC,MA7Db,wBAkEE,SAAWpC,GAAG,IAEJgH,EAAgBhH,EAAEG,OAAlB6G,YAEFjF,EAAU+E,KAAKP,MAAfxE,MACEzB,EAAWyB,EAAXzB,OAEY,MAAhB0G,GAAkC,IAAX1G,GAIvBA,EAAS,IACXyB,GAASiF,EACTF,KAAKC,SAAS,CACZhF,UAGF+E,KAAKG,WAAWlF,MAnFtB,4BAwFE,SAAe/B,GAAG,IAEV+B,EAAU+E,KAAKP,MAAfxE,MACEzB,EAAWyB,EAAXzB,OAEJA,EAAS,IACXyB,EAAQA,EAAM8E,UAAU,EAAGvG,EAAS,GAEpCwG,KAAKC,SAAS,CACZhF,WAIJ+E,KAAKG,WAAWlF,KArGpB,wBAyGE,WAAc,IAAD,OAEX+E,KAAKI,WAAaC,aAAY,WAAO,IAC7B/E,EAAc,EAAKmE,MAAnBnE,UACNA,GAAa,EACb,EAAK2E,SAAS,CACZ3E,UAAWA,IAGK,IAAdA,GACFgF,cAAc,EAAKF,cAEpB,OArHP,8BAyHE,WAEEJ,KAAKC,SAAS,CACZP,SAAS,EACThC,WAAW,IAGbsC,KAAKO,eAhIT,+BAoIE,WAEwBP,KAAKP,MAAnB/B,UAEN4C,cAAcN,KAAKI,YAEnBJ,KAAKO,aAGPP,KAAKC,SAAS,CACZvC,WAAYsC,KAAKP,MAAM/B,cA9I7B,4BAmJE,WAAiB,MAEcsC,KAAKP,MAA1BnE,EAFO,EAEPA,UAAWD,EAFJ,EAEIA,MACnB2E,KAAKC,SAAS,CACZ3E,UAAWA,EAAY,GACvBD,MAAOA,EAAQ,OAxJrB,4BA6JE,WAEEiF,cAAcN,KAAKI,YAGnBJ,KAAKC,SAAS,CACZP,SAAS,EACTzE,MAHY,KAMd+E,KAAKG,WANS,MAjKlB,8BA2KE,WAEEG,cAAcN,KAAKI,YAFF,IAITnF,EAAU+E,KAAKP,MAAfxE,MAGR+E,KAAKG,WAAWlF,GAChB+E,KAAKT,qBAnLT,8BAuLE,WACES,KAAKC,SAAS,CACZ1E,SAAS,MAzLf,mCA6LE,SAAsBrC,GACpBA,EAAEK,iBADqB,IAGRwB,EAAU7B,EAAEG,OAAOmH,cAAc,SAAxC1I,MACJiD,GACFiF,KAAKC,SAAS,CACZlF,QACAQ,SAAS,MApMjB,oBAyME,WAAS,MAWHyE,KAAKP,MARPxE,EAHK,EAGLA,MACAS,EAJK,EAILA,KACAgE,EALK,EAKLA,QACAhC,EANK,EAMLA,UACApC,EAPK,EAOLA,UACAD,EARK,EAQLA,MACAN,EATK,EASLA,MACAQ,EAVK,EAULA,QAIF,OACE,8BACGmE,EAKC,qBAAKe,UAAU,OAAf,SACE,cAAC,GAAD,CACEpF,MAAOA,EACPC,UAAWA,EACXP,MAAOA,EACP2C,UAAWA,EACXnC,QAASA,EACToC,kBAAmBqC,KAAKrC,kBACxBC,eAAgBoC,KAAKpC,eACrBC,eAAgBmC,KAAKnC,eACrBC,iBAAkBkC,KAAKlC,iBACvBtC,iBAAkBwE,KAAKxE,iBACvBL,sBAAuB6E,KAAK7E,0BAQhC,qBAAKsF,UAAU,OAAf,SACE,cAAC,GAAD,CACExF,MAAOA,EACPS,KAAMA,EACNwD,WAAYc,KAAKd,WACjBN,eAAgBoB,KAAKpB,eACrBW,iBAAkBS,KAAKT,2BAxPrC,GAA2BmB,aC9edC,GAAO,WAClB,IAAIjO,EAAUhC,cAERkQ,GADQrO,YAAkB,WAAY,YAC3BA,YAAkB,QAAS,aAHpB,EAIFsO,aAAS,SAAU,CAACD,IAJlB,uBAKE/H,mBAAS,KALX,mBAKjBH,EALiB,KAKVoI,EALU,KAiDxB,OACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,CACEvP,KAAK,QACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCAPb,UASE,eAAC,IAAD,CAAMoB,EAAE,OAAO8B,EAAG,GAAI7B,WAAW,SAASC,eAAe,SAAzD,UACE,uBACA,eAAC,IAAD,CACEZ,QAAS,CAAC,EAAG,GACboE,IAAI,QACJ5E,GAAG,OACHC,UAAW,CAAC,OAAQ,UAJtB,UAME,eAAC,EAAD,CAAMmP,QAAQ,QAAd,UACE,cAAC,IAAD,CAASC,UAAU,QAAnB,mBACA,cAAC,GAAD,OAEF,cAAC,EAAD,UACE,eAAC,IAAD,CAAQrM,EAAG,EAAX,UACE,cAAC,IAAD,CACElD,WAAW,gCACXO,OAAO,OACPC,SAAS,MACTH,WAAW,OAJb,uBAQA,uBACA,cAAC2G,GAAD,CACEC,MAAOA,EACPC,WA7EhB,SAAoBQ,GAClB,IAAM8H,EAAWvI,EAAMwI,QAAO,SAACC,GAC7B,OAAOA,EAAKhI,KAAOA,KAErB2H,EAASG,GACTtL,QAAQC,IAAIqL,IAyEErI,SAlEhB,SAAkBO,EAAIiI,GACpB,IAAMC,EAAc3I,EAAMe,KAAI,SAACC,GAC7B,OAAOA,EAAKP,KAAOA,EAAKiI,EAAc1H,KAExCoH,EAASO,MAgEG,cAACnH,GAAD,CAASC,QAxEvB,SAAiBmH,GACfR,EAAS,GAAD,oBAAKpI,GAAL,CAAY4I,gBA2Ed,uBACA,cAAC,IAAD,CACE3K,MAAO,OACPyB,OAAQ,QACRD,KAAM,OACNE,WAvES,CACjB,CACE3E,KAAM,eACN4E,OAAQ,cACRC,MACE,0HACFC,SACE,qIAMJ,CACE9E,KAAM,4BACN4E,OAAQ,uBACRC,MACE,0HACFC,SACE,uIAuDA,cAAC,IAAD,UACI,cAAC,IAAD,CAAQ/E,YAAY,WAAWM,QAhGzB,WACdrB,EAAQsB,KAAK,WA+F8CnC,KAAK,KAAxD,mC,UC7HC0P,I,cAAU,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAEnCC,GADWC,KAAWC,YAAY,gBACpB,IAClB,GAAIJ,EAAchI,OAAS,EACzB,IAAK,IAAI4F,EAAI,EAAGA,EAAIoC,EAAchI,OAAQ4F,IACxCsC,EAAY1N,KAAK,CAACwN,EAAcpC,GAAIqC,EAAWrC,KAGnD,OACE,gCACI,cAAC,IAAD,UACE,cAAC,IAAD,qBAGCsC,EAAYjI,KAAI,SAACoI,GAAD,OACf,gCACE,qBAAKC,MAAM,gBAAX,SACE,sBAAKA,MAAM,eAAX,UAA2BhR,IAASC,OAAO4C,YAAYC,YAAvD,KAAsEiO,EAAQ,QAEhF,qBAAKC,MAAM,iBAAX,SACE,qBAAKA,MAAM,UAAX,SAAsBD,EAAQ,kBCpBjCE,GAAO,WAAO,IAAD,EACgBlJ,mBAAS,IADzB,mBACnB2I,EADmB,KACJQ,EADI,OAEInJ,mBAAS,IAFb,mBAEnBgJ,EAFmB,KAEVI,EAFU,OAGUpJ,mBAAS,IAHnB,mBAGnB4I,EAHmB,KAGPS,EAHO,KAIpBlN,EAAO,CACTpC,OAAQ,8BACRsC,MAAOpE,IAASC,OAAO4C,YAAYwB,aACnCC,MAAOtE,IAASC,OAAO4C,YAAYyB,OAmBrC,OACE,gCACI,cAAC,EAAD,IACF,cAAC,IAAD,CACE7D,KAAK,QACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCAPb,SASE,eAAC,IAAD,CAAKC,KAAK,KAAKC,GAAG,OAAlB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASI,MAAM,QAAQE,SAAS,MAAMH,WAAW,YAAjD,+BAIF,uBACA,uBACA,eAAC,EAAD,WACA,cAAC,GAAD,CAAS0P,cAAeA,EAAeC,WAAYA,IACnD,uBACA,uBACA,uBACA,uBACA,cAAC,KAAD,CACE3J,MAAO+J,EACP5H,SA7CU,SAACf,GACnB+I,EAAW/I,EAAEG,OAAOvB,QA6CZtE,QAAQ,SACRwG,YAAY,wCAEd,uBACA,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAQjG,QAjDA,SAACmF,GACjB,IAAIiJ,EAAc,CAChBvP,OAAQ,8BACRwG,KAAMyI,GAERG,EAAiB,GAAD,oBAAKR,GAAL,CAAoBK,KACpCtM,IAAMC,KAAK,oCAAqCR,GAAMS,MAAK,SAAC2M,GAC1D7M,IAAMC,KAAK,oCAAqC2M,GAAa1M,MAAK,SAACC,GACjEwM,EAAc,GAAD,oBAAKT,GAAL,CAAiB/L,EAAIG,KAAKA,cAG3CoM,EAAW,KAsC2BxO,YAAa,WAA3C,oBAEF,uBACA,mC,mBCrDG4O,GAAU,SAAC,GAAoB,IAyCjB,EAkLlB,EA3NiBC,EAAiB,EAAjBA,WACpB5P,EAAUhC,cAYR6R,GAHMhQ,YAAkB,WAAY,SAC9BA,YAAkB,YAAa,aAE3B,SAACvC,GACf,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMwS,OAAQ,EAAd,SACE,cAAC,KAAD,CACEvO,QAAS,EACT/B,GAAI,EACJqB,GAAI,EACJmJ,QAAQ,YACRN,KAAK,eALP,SAOE,sBACEqG,SAAS,UACT9F,EAAE,qHACF+F,SAAS,gBAIf,eAAC,IAAD,CAAKpP,GAAI,EAAT,UACE,cAAC,IAAOqP,GAAR,CAAW1Q,SAAS,KAAKH,WAAW,OAAO8Q,WAAW,IAAtD,SACG5S,EAAMkD,QAET,cAAC,IAAO2P,GAAR,CAAW3Q,GAAI,EAAf,SAAmBlC,EAAM8S,mBAMjC,OAAmB,IAAfR,EAEA,gCACE,eAAC,IAAD,CACE/Q,KAAK,MACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCACX+E,aAAa,SARf,UAUE,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,cAAC,IAAD,CAAKnC,IAAI,WAAW0O,SAAS,SAA7B,SACE,cAAC,IAAD,CAAKrR,KAAK,MAAMC,GAAG,OAAnB,SACE,cAAC,IAAD,CACE0C,IAAI,WACJO,GAAI,CAAExE,KAAM,EAAGI,GAAI,GAAIH,GAAI,GAAImB,GAAI,GAAIwR,GAAI,IAC3CnQ,EAAE,OACFoQ,OAAO,wBAJT,SAME,cAAC,KAAD,GACE/Q,GAAI,GACJP,GAAG,OACHD,KAAM,CAAEtB,KAAM,OACdD,GAAI,CAAEC,KAAM,EAAGI,GAAI,EAAGgB,GAAI,IAJ5B,oBAKM,CAAEpB,KAAM,GAAIC,GAAI,GAAImB,GAAI,GAAIwR,GAAI,KALtC,0BAOE,eAAC,IAAD,CACEpR,UAAU,SACViB,EAAG,CAAEzC,KAAM,OAAQC,GAAI,GAAK,GAAI2S,GAAI,EAAI,IACxCrR,GAAG,OAHL,UAKE,eAAC,IAAO0B,GAAR,CACEpB,SAAU,CAAE7B,KAAM,MAAOI,GAAI,MAAOH,GAAI,OACxC6S,cAAc,QACdN,WAAW,QACX9Q,WAAW,YACXC,MAAM,QALR,UAOE,eAAC,IAAOwM,KAAR,CAAapL,QAAS,CAAE/C,KAAM,QAAS4S,GAAI,UAA3C,4DACkD,OAElD,cAAC,IAAOzE,KAAR,CACEpL,QAAS,CAAE/C,KAAM,QAAS4S,GAAI,UAC9BjR,MAAM,cAFR,qBAOF,cAAC,IAAO4C,EAAR,CACEzC,GAAI,CAAE9B,KAAM,EAAGI,GAAI,EAAGH,GAAI,GAC1BsB,GAAI,GACJwR,GAAI,GACJlR,SAAU,CAAE7B,KAAM,KAAMC,GAAI,MAC5B0B,MAAM,eACN6Q,WAAW,OANb,8FAWA,cAAC,IAAD,CACEQ,UAAW,CAAEhT,KAAM,SAAUI,GAAI,SAAUH,GAAI,OAC/C8S,GAAI,CAAE/S,KAAM,EAAGC,GAAI,GACnB+B,QAAS,CAAEhC,KAAM,EAAGC,GAAI,GACxB0C,eAAe,SAJjB,SAME,eAAC,IAAD,CACElB,KAAK,KACL2B,QAAQ,QACR/B,WAAW,mCACXsC,QAjHL,WACfrB,EAAQsB,KAAK,UA4GK,UAMGlD,IAASC,OAAO4C,YAAYC,YAN/B,mBA9CN,aA6DR,uBACA,uBACA,cAAC,IAAD,CACEnC,WAAW,gCACXO,OAAO,OACPC,SAAS,MACTH,WAAW,YACXF,UAAU,SALZ,sBASA,cAAC,IAAD,CAAM+C,EAAG,GAAI9B,EAAE,OAAOE,eAAe,SAASD,WAAW,SAAzD,SACE,cAAC,IAAD,CACExC,OAAO,MACPH,GAAI,EACJD,GAAI,GACJyB,GAAG,OACHF,WAAW,iCACXlB,QAAQ,KANV,SAQE,eAAC,IAAD,CACEuC,WAAW,SACXX,QAAS,CAAE/B,KAAM,EAAGoB,GAAI,GACxB6R,SAAU,CAAEjT,KAAM,GAAIoB,GAAI,IAC1B8R,SAAU,CAAElT,KAAM,GAAIoB,GAAI,IAJ5B,UAME,eAAC,IAAD,CAAK+R,UAAU,QAAQxR,MAAM,QAA7B,UACE,cAAC,IAAOsM,GAAR,CACE8E,GAAI,EACJlR,SAAU,CAAE7B,KAAM,MAAOC,GAAI,OAC7ByB,WAAW,YACXF,UAAW,CAAExB,KAAM,SAAUI,GAAI,QACjCoS,WAAW,UACXM,cAAc,QANhB,wCAUA,cAAC,IAAOvO,EAAR,CACEwO,GAAI,EACJlR,SAAU,CAAE7B,KAAM,KAAMC,GAAI,MAC5BuB,UAAW,CAAExB,KAAM,SAAUI,GAAI,QAHnC,8HASF,cAAC,KAAD,CAAUgT,QAAS,EAAGzR,MAAM,QAA5B,SACE,eAAC,IAAD,CACEK,QAAS,CAAEhC,KAAM,GAAIC,GAAI,GACzB8C,QAAS,CAAE9C,GAAI,QACfoT,oBAAqB,CAAEpT,GAAI,iBAC3BqT,cAAe,CAAErT,GAAI,GACrBsT,WAAY,CAAEtT,GAAI,IALpB,UAOE,eAACkS,EAAD,CAASrP,MAAM,kBAAf,uNAG8D,OAE9D,cAACqP,EAAD,CAASrP,MAAM,cAAf,uMAKA,eAACqP,EAAD,CAASrP,MAAM,eAAf,UACG,IADH,0JAMA,eAACqP,EAAD,CAASrP,MAAM,WAAf,UACG,IADH,kOAYV,uBACA,uBACA,uBACA,uBACA,0BAKF,gCACE,eAAC,IAAD,CACE3B,KAAK,MACLrB,GAAG,KACHC,GAAI,CACFC,KAAM,IACNoB,GAAI,KAENC,WAAW,iCACX+E,aAAa,SARf,UAUE,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,cAAC,IAAD,CAAKnC,IAAI,WAAW0O,SAAS,SAA7B,SACE,cAAC,IAAD,CAAKrR,KAAK,MAAMC,GAAG,OAAnB,SACE,cAAC,IAAD,CACE0C,IAAI,WACJO,GAAI,CAAExE,KAAM,EAAGI,GAAI,GAAIH,GAAI,GAAImB,GAAI,GAAIwR,GAAI,IAC3CnQ,EAAE,OACFoQ,OAAO,wBAJT,SAME,cAAC,KAAD,GACE/Q,GAAI,GACJP,GAAG,OACHD,KAAM,CAAEtB,KAAM,OACdD,GAAI,CAAEC,KAAM,EAAGI,GAAI,EAAGgB,GAAI,IAJ5B,oBAKM,CAAEpB,KAAM,GAAIC,GAAI,GAAImB,GAAI,GAAIwR,GAAI,KALtC,0BAOE,eAAC,IAAD,CACEpR,UAAU,SACViB,EAAG,CAAEzC,KAAM,OAAQC,GAAI,GAAK,GAAI2S,GAAI,EAAI,IACxCrR,GAAG,OAHL,UAKE,eAAC,IAAO0B,GAAR,CACEpB,SAAU,CAAE7B,KAAM,MAAOI,GAAI,MAAOH,GAAI,OACxC6S,cAAc,QACdN,WAAW,QACX9Q,WAAW,YACXC,MAAM,QALR,UAOE,eAAC,IAAOwM,KAAR,CAAapL,QAAS,CAAE/C,KAAM,QAAS4S,GAAI,UAA3C,4DACkD,OAElD,cAAC,IAAOzE,KAAR,CACEpL,QAAS,CAAE/C,KAAM,QAAS4S,GAAI,UAC9BjR,MAAM,cAFR,qBAOF,cAAC,IAAO4C,EAAR,CACEzC,GAAI,CAAE9B,KAAM,EAAGI,GAAI,EAAGH,GAAI,GAC1BsB,GAAI,GACJwR,GAAI,GACJlR,SAAU,CAAE7B,KAAM,KAAMC,GAAI,MAC5B0B,MAAM,eACN6Q,WAAW,OANb,8FAWA,cAAC,IAAD,CACEQ,UAAW,CAAEhT,KAAM,SAAUI,GAAI,SAAUH,GAAI,OAC/C8S,GAAI,CAAE/S,KAAM,EAAGC,GAAI,GACnB+B,QAAS,CAAEhC,KAAM,EAAGC,GAAI,GACxB0C,eAAe,SAJjB,SAME,cAAC,IAAD,CACElB,KAAK,KACL2B,QAAQ,QACR/B,WAAW,mCACXsC,QAtSJ,WAChBrB,EAAQsB,KAAK,WAiSK,iCA9CN,aA6DR,uBACA,uBACA,cAAC,IAAD,CACEvC,WAAW,gCACXO,OAAO,OACPC,SAAS,MACTH,WAAW,YACXF,UAAU,SALZ,sBASA,cAAC,IAAD,CAAM+C,EAAG,GAAI9B,EAAE,OAAOE,eAAe,SAASD,WAAW,SAAzD,SACE,cAAC,IAAD,CACExC,OAAO,MACPH,GAAI,EACJD,GAAI,GACJyB,GAAG,OACHF,WAAW,iCACXlB,QAAQ,KANV,SAQE,eAAC,IAAD,CACEuC,WAAW,SACXX,QAAS,CAAE/B,KAAM,EAAGoB,GAAI,GACxB6R,SAAU,CAAEjT,KAAM,GAAIoB,GAAI,IAC1B8R,SAAU,CAAElT,KAAM,GAAIoB,GAAI,IAJ5B,UAME,eAAC,IAAD,CAAK+R,UAAU,QAAQxR,MAAM,QAA7B,UACE,cAAC,IAAOsM,GAAR,CACE8E,GAAI,EACJlR,SAAU,CAAE7B,KAAM,MAAOC,GAAI,OAC7ByB,WAAW,YACXF,UAAW,CAAExB,KAAM,SAAUI,GAAI,QACjCoS,WAAW,UACXM,cAAc,QANhB,wCAUA,cAAC,IAAOvO,EAAR,CACEwO,GAAI,EACJlR,SAAU,CAAE7B,KAAM,KAAMC,GAAI,MAC5BuB,UAAW,CAAExB,KAAM,SAAUI,GAAI,QAHnC,8HASF,cAAC,KAAD,CAAUgT,QAAS,EAAGzR,MAAM,QAA5B,SACE,eAAC,IAAD,CACEK,QAAS,CAAEhC,KAAM,GAAIC,GAAI,GACzB8C,QAAS,CAAE9C,GAAI,QACfoT,oBAAqB,CAAEpT,GAAI,iBAC3BqT,cAAe,CAAErT,GAAI,GACrBsT,WAAY,CAAEtT,GAAI,IALpB,UAOE,eAACkS,EAAD,CAASrP,MAAM,kBAAf,uNAG8D,OAE9D,cAACqP,EAAD,CAASrP,MAAM,cAAf,uMAKA,eAACqP,EAAD,CAASrP,MAAM,eAAf,UACG,IADH,0JAMA,eAACqP,EAAD,CAASrP,MAAM,WAAf,UACG,IADH,kOAYV,uBACA,uBACA,uBACA,uBACA,2BC3YRpC,IAAS8S,cAAc,CACrBlN,OAAQ,0CACRmN,WAAY,+BAuDCC,OApDf,WAAgB,IAAD,EACuBjL,oBAAS,GADhC,mBACNyJ,EADM,KACMyB,EADN,KAUb,OAPcrT,cACd4E,qBAAU,WACRxE,IAASC,OAAOiT,oBAAmB,SAAChP,GAClC+O,IAAgB/O,UAID,IAAfsN,EAEA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CAAS5B,WAAYA,MAEvB,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,aAQR,cAAC,IAAD,UACE,cAAC,IAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CAAS5B,WAAYA,MAEvB,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,cCrDCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5O,MAAK,YAAkD,IAA/C6O,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.b088d8fd.chunk.js","sourcesContent":["\nimport { Box } from '@chakra-ui/react'\nimport * as React from 'react'\n\nexport const Card = (props) => (\n  <Box\n    bg={\"white\"}\n    py=\"8\"\n    px={{\n      base: '4',\n      md: '10',\n    }}\n    shadow=\"base\"\n    rounded={{\n      sm: 'lg',\n    }}\n    {...props}\n  />\n)","import { Box, Heading, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport firebase from \"firebase\";\nimport { Card } from \"./Card\";\nimport { useHistory } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport Particles from \"react-particles-js\";\n\nexport const Login = () => {\n  let history = useHistory();\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => true,\n    },\n    signInSuccessUrl: \"/home\",\n  };\n\n  return (\n    <div>\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Box maxW=\"md\" mx=\"auto\">\n          <Heading\n            textAlign=\"center\"\n            size=\"3xl\"\n            fontWeight=\"extrabold\"\n            color=\"twitter.100\"\n          >\n            Flow\n          </Heading>\n          <br />\n          <Card rounded=\"xl\">\n            <Text\n              textAlign=\"center\"\n              bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n              bgClip=\"text\"\n              fontWeight=\"bold\"\n              fontSize=\"lg\"\n            >\n              Sign In to Your Account\n            </Text>\n            <SimpleGrid mt=\"6\" columns={1} spacing=\"3\">\n              <StyledFirebaseAuth\n                uiConfig={uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            </SimpleGrid>\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport {\n  chakra,\n  Box,\n  Flex,\n  useColorModeValue,\n  VisuallyHidden,\n  HStack,\n  Button,\n  useDisclosure,\n  VStack,\n  IconButton,\n  CloseButton,\n  Avatar,\n  AvatarBadge,\n  Link,\n} from \"@chakra-ui/react\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport ContactlessIcon from \"@material-ui/icons/Contactless\";\nimport { useHistory } from \"react-router\";\n\nexport const Navbar = () => {\n  const bg = useColorModeValue(\"white\", \"gray.800\");\n  const mobileNav = useDisclosure();\n  let history = useHistory();\n  let goToHome = () => {\n    history.push(\"/home\");\n  };\n  return (\n    <React.Fragment>\n      <chakra.header\n        bg={bg}\n        w=\"full\"\n        px={{ base: 2, sm: 4 }}\n        py={4}\n        shadow=\"md\"\n      >\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mx=\"auto\">\n          <Flex>\n            <chakra.a href=\"/\" title=\"Flow\" display=\"flex\" alignItems=\"center\">\n              <ContactlessIcon fontSize=\"large\" htmlColor=\"#0063d1\" />\n            </chakra.a>\n            <chakra.h1 fontSize=\"2xl\" fontWeight=\"bold\" ml=\"2\">\n              Flow\n            </chakra.h1>\n          </Flex>\n          <HStack display=\"flex\" alignItems=\"center\" spacing={1}>\n            <HStack\n              spacing={1}\n              mr={1}\n              color=\"brand.500\"\n              display={{ base: \"none\", md: \"inline-flex\" }}\n            >\n              <Link href=\"/home\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Home\n                </Button>\n              </Link>\n              <Link href=\"/chat\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  AI Therapy\n                </Button>\n              </Link>\n              <Link href=\"/work\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Work\n                </Button>\n              </Link>\n              <Link href=\"/break\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Break\n                </Button>\n              </Link>\n            </HStack>\n            <Avatar\n              size=\"sm\"\n              name={firebase.auth().currentUser.displayName}\n              src={firebase.auth().currentUser.photoURL}\n              onClick={goToHome}\n            >\n              <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n            </Avatar>\n            <Box display={{ base: \"inline-flex\", md: \"none\" }}>\n              <IconButton\n                display={{ base: \"flex\", md: \"none\" }}\n                aria-label=\"Open menu\"\n                fontSize=\"20px\"\n                color={useColorModeValue(\"gray.800\", \"inherit\")}\n                variant=\"ghost\"\n                icon={<AiOutlineMenu />}\n                onClick={mobileNav.onOpen}\n              />\n\n              <VStack\n                pos=\"absolute\"\n                top={0}\n                left={0}\n                right={0}\n                display={mobileNav.isOpen ? \"flex\" : \"none\"}\n                flexDirection=\"column\"\n                p={2}\n                pb={4}\n                m={2}\n                bg={bg}\n                spacing={3}\n                rounded=\"sm\"\n                shadow=\"sm\"\n              >\n                <CloseButton\n                  aria-label=\"Close menu\"\n                  onClick={mobileNav.onClose}\n                />\n\n                <Link href=\"/home\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Home\n                  </Button>\n                </Link>\n                <Link href=\"/chat\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    AI Therapy\n                  </Button>\n                </Link>\n                <Link href=\"/work\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Work\n                  </Button>\n                </Link>\n                <Link href=\"/break\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Break\n                  </Button>\n                </Link>\n              </VStack>\n            </Box>\n          </HStack>\n        </Flex>\n      </chakra.header>\n    </React.Fragment>\n  );\n};\n","import firebase from \"firebase\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Heading,\n  useColorModeValue,\n  Text,\n  Textarea,\n  Button,\n  Center,\n  Input,\n  Select,\n  Flex,\n  Image,\n  Link,\n  chakra,\n  SimpleGrid,\n  Grid,\n  GridItem,\n} from \"@chakra-ui/react\";\nimport Particles from \"react-particles-js\";\n// import { Card } from \"./Card\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"react-animated-3d-card\";\nimport { Navbar } from \"./Navbar\";\nexport const Home = () => {\n  let history = useHistory();\n  const tsParticles = require(\"tsparticles\");\n  let user_token = firebase.auth().currentUser.getIdToken();\n\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: user_token,\n    email: firebase.auth().currentUser.email,\n  };\n\n  let signOut = () => {\n    firebase.auth().signOut();\n    history.push(\"/\");\n  };\n\n  const goToChat = () => {\n    history.push(\"/chat\");\n  };\n\n  const goToWork = () => {\n    history.push(\"/work\");\n  };\n\n  const goToBreak = () => {\n    history.push(\"/break\");\n  };\n\n  useEffect(() => {\n    axios.post(\"https://flow-0.herokuapp.com/home\", user).then((res) => {\n      console.log(res.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        \n        <Box maxW=\"md\" mx=\"auto\">\n          <br />\n          <br />\n          <br />\n          <Center>\n            <Heading color=\"white\" fontSize=\"6xl\" fontWeight=\"extrabold\">\n              Dashboard\n            </Heading>\n          </Center>\n          <br />\n          <Center>\n            <Box as=\"button\" onClick={signOut}>\n              <Card\n                style={{\n                  background: \"white\",\n                  width: \"300px\",\n                  height: \"300px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                <br />\n                <Text textAlign=\"center\" fontSize=\"xl\" fontWeight=\"bold\">\n                  Welcome\n                  <Text\n                    bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n                    bgClip=\"text\"\n                    fontWeight=\"bold\"\n                  >\n                    {firebase.auth().currentUser.displayName}\n                  </Text>\n                </Text>\n                <br />\n                <div align=\"center\">\n                  <img src={firebase.auth().currentUser.photoURL}></img>\n                </div>\n                <br />\n                <Center>\n                  <Button\n                    align=\"center\"\n                    color={\"white\"}\n                    onClick={signOut}\n                    bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n                    _hover={{\n                      bgGradient: \"linear(to-r, red.400,pink.400)\",\n                      boxShadow: \"xl\",\n                    }}\n                  >\n                    Sign Out\n                  </Button>\n                </Center>\n              </Card>\n            </Box>\n          </Center>\n          <br />\n          <br />\n          <br />\n          <br />\n          <SimpleGrid columns={[1, 3]} gap=\"200px\">\n            <Center>\n              <Box as=\"button\" onClick={goToWork} alignContent=\"center\">\n                <Card\n                  style={{\n                    background: \"#34c9eb\",\n                    width: \"200px\",\n                    height: \"200px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <br />\n                  <br />\n                  <br />\n                  <Text\n                    textAlign=\"center\"\n                    fontSize=\"3xl\"\n                    fontWeight=\"bold\"\n                  >\n                    Work\n                  </Text>\n                </Card>\n              </Box>\n            </Center>\n            <Center>\n              <Box as=\"button\" onClick={goToChat} alignContent=\"center\">\n                <Card\n                  style={{\n                    background: \"#34c9eb\",\n                    width: \"200px\",\n                    height: \"200px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <br />\n                  <br />\n                  <br />\n                  <Text\n                    textAlign=\"center\"\n                    fontSize=\"3xl\"\n                    fontWeight=\"bold\"\n                  >\n                    AI Therapy\n                  </Text>\n                </Card>\n              </Box>\n            </Center>\n            <Center>\n              <Box as=\"button\" onClick={goToBreak} alignContent=\"center\">\n                <Card\n                  style={{\n                    background: \"#34c9eb\",\n                    width: \"200px\",\n                    height: \"200px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <br />\n                  <br />\n                  <br />\n                  <Text\n                    textAlign=\"center\"\n                    fontSize=\"3xl\"\n                    fontWeight=\"bold\"\n\n                  >\n                    Take a Break\n                  </Text>\n                </Card>\n              </Box>\n            </Center>\n          </SimpleGrid>\n        </Box>\n      </Box>\n    </div>\n  );\n};","import {\n    Grid, // our UI Component to display the results\n    SearchBar, // the search bar the user will type into\n    SearchContext, // the context that wraps and connects our components\n    SearchContextManager, // the context manager, includes the Context.Provider\n    SuggestionBar, // an optional UI component that displays trending searches and channel / username results\n    SearchTheme,\n} from '@giphy/react-components'\nimport { useContext } from 'react'\n// the search experience consists of the manager and its child components that use SearchContext\nexport const CarouselDemo = () => (\n    <SearchContextManager apiKey={\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\"} theme={\"dark\"}>\n        <Components />\n    </SearchContextManager>\n)\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n    const { fetchGifs, searchKey } = useContext(SearchContext)\n    return (\n        <>\n            <SearchBar />\n            <br />\n            <SuggestionBar />\n            <br />\n            <Grid key={searchKey} columns={2} width={525} fetchGifs={fetchGifs} />\n        </>\n    )\n}","import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Center,\n  Button,\n  Box,\n  Text\n} from \"@chakra-ui/react\";\nimport { CarouselDemo } from \"./CarouselDemo\";\n\nexport const GifModal = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <div>\n      <Center>\n        <Box\n          as=\"button\"\n          borderRadius=\"xl\"\n          bg=\"twitter.400\"\n          color=\"white\"\n          px={100}\n          h={100}\n          onClick={onOpen}\n        >\n          <Text fontSize=\"xl\" fontWeight=\"extrabold\">Explore GIFs</Text>\n        </Box>\n      </Center>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        motionPreset=\"slideInBottom\"\n        size={\"xl\"}\n        scrollBehavior={\"inside\"}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Find Awesome GIFs!</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <CarouselDemo />\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Center,\n  Button,\n  Image,\n  Grid,\n  GridItem,\n  Text,\n  Box\n} from \"@chakra-ui/react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nexport const MeditateModal = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <div>\n      <Center>\n      <Box\n          as=\"button\"\n          borderRadius=\"xl\"\n          bg=\"twitter.400\"\n          color=\"white\"\n          px={116}\n          h={100}\n          onClick={onOpen}\n        >\n          <Text fontSize=\"xl\" fontWeight=\"extrabold\">Meditate</Text>\n        </Box>\n      </Center>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        motionPreset=\"slideInBottom\"\n        size={\"xl\"}\n        scrollBehavior={\"inside\"}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Curated Medidation Tutorials</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <br />\n            <Center>\n                <Text fontFamily=\"fantasy\" fontSize=\"xl\" fontWeight=\"bold\">Tutorial 1: The Present</Text>\n            </Center>\n            <br />\n            <Center>\n            <Image\n              src=\"https://wallpaperaccess.com/full/1933087.jpg\"\n            //   boxSize=\"200px\"\n            />\n            </Center>\n            <br />\n            <br />\n            <Center>\n            <ReactAudioPlayer\n              src=\"https://assets.calm.com/1f2a60e567945384b84a7aa3c6949b42.m4a\"\n              controls\n            />\n            </Center>\n            <br />\n            <br />\n            <br />\n            <Center>\n                <Text fontFamily=\"fantasy\" fontSize=\"xl\" fontWeight=\"bold\">Tutorial 2: The Mind</Text>\n            </Center>\n            <br />\n            <Center>\n            <Image\n              src=\"https://wallpapercave.com/wp/qtzZvul.jpg\"\n            //   boxSize=\"200px\"\n            />\n            </Center>\n            <br />\n            <br />\n            <Center>\n            <ReactAudioPlayer\n              src=\"https://res.cloudinary.com/flow019/video/upload/v1624742508/flow_audios/10-Minute_Daily_Meditation_elrygn.mp3\"\n              controls\n            />\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Input, Box, Center, Heading, Button, Text } from \"@chakra-ui/react\";\nimport { CarouselDemo } from \"./CarouselDemo\";\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { SimpleGrid } from \"@chakra-ui/react\";\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\";\nimport { GifModal } from \"./GifModal\";\nimport { MeditateModal } from \"./MeditateModal\";\nimport { Navbar } from \"./Navbar\";\nimport Particles from \"react-particles-js\";\n\nconst giphyFetch = new GiphyFetch(\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\");\n\nexport const TakeABreak = () => {\n  const audioList1 = [\n    {\n      name: \"LoFi Hip Hop\",\n      singer: \"Chilled Cow\",\n      cover:\n        \"https://res.cloudinary.com/flow019/image/upload/v1624739457/flow_audios/Screen_Shot_2021-06-26_at_1.20.59_PM_sus7up.png\",\n      musicSrc:\n        \"https://res.cloudinary.com/flow019/video/upload/v1624739207/flow_audios/1_A.M_Study_Session_-_lofi_hip_hop_chill_beats_fajusr.mp3\",\n      // support async fetch music src. eg.\n      // musicSrc: async () => {\n      //   return await fetch('/api')\n      // },\n    },\n    {\n      name: \"Midnight City - LoFi Jazz\",\n      singer: \"The Jazz Hop Café\",\n      cover:\n        \"https://res.cloudinary.com/flow019/image/upload/v1624739975/flow_audios/Screen_Shot_2021-06-26_at_1.39.15_PM_wlgqdr.png\",\n      musicSrc:\n        \"https://res.cloudinary.com/flow019/video/upload/v1624739970/flow_audios/midnight_city._lofi___jazz_hop___chill_mix_dvroe0.mp3\",\n    },\n  ];\n  return (\n    <div>\n        <Navbar />\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Box maxW=\"md\" mx=\"auto\">\n          <Center>\n            <Heading color=\"white\" fontSize=\"6xl\" fontWeight=\"extrabold\">\n              Take a Break\n            </Heading>\n          </Center>\n          <br />\n          <br />\n          <SimpleGrid columns={[1, 2]} gap=\"200px\">\n            <GifModal />\n            <MeditateModal />\n          </SimpleGrid>\n          <br />\n          <br />\n          <br />\n          <br />\n          <Center>\n            <Particles\n              width={1000}\n              height={500}\n              params={{\n                particles: {\n                  number: {\n                    value: 200,\n                  },\n                  size: {\n                    value: 5,\n                  },\n                  background: {\n                    color: {\n                      value: \"#0d47a1\",\n                    },\n                  },\n                },\n                interactivity: {\n                  events: {\n                    onhover: {\n                      enable: true,\n                      mode: \"repulse\",\n                    },\n                  },\n                },\n              }}\n            />\n          </Center>\n          <br />\n          <br />\n          <br />\n          <br />\n          <ReactJkMusicPlayer\n            theme={\"dark\"}\n            locale={\"en_US\"}\n            mode={\"full\"}\n            audioLists={audioList1}\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n};","import {\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  Badge,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Input,\n  Divider,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React, { useState } from \"react\";\n\nexport function TodoList({ todos, deleteTodo, editTodo }) {\n  const [todo, setTodo] = useState(\"\");\n  const [modalValue, setModalValue] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  function onClose() {\n    setIsOpen(false);\n  }\n\n  function handleEditClick(todo) {\n    setIsOpen(true);\n    // we've set the passed todo to modal value\n    setModalValue(todo);\n    console.log(todo);\n  }\n\n  function handleEditInputChange(e, id) {\n    setModalValue({ ...modalValue, text: e.target.value });\n    console.log(modalValue, id);\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n\n    editTodo(modalValue.id, modalValue);\n    setModalValue(\"\");\n    setIsOpen(false);\n  }\n\n  return !todos.length ? (\n    <Badge colorScheme=\"purple\" variant=\"outline\" borderRadius=\"4\" p=\"4\" m=\"5\">\n      No tasks for Today!!\n    </Badge>\n  ) : (\n    <VStack>\n      {todos.map((todo) => (\n        <HStack spacing=\"24px\" w=\"320px\">\n          <Flex p={6} w=\"300px\" h=\"50px\" justifyContent=\"space-between\">\n\n            <Text>{todo.text}</Text>\n            <Flex w=\"10px\">\n              <DeleteIcon\n                color=\"red.500\"\n                mr=\"2\"\n                onClick={() => deleteTodo(todo.id)}\n              />\n              <EditIcon onClick={() => handleEditClick(todo)} />\n            </Flex>\n            {/* modal for editing a todo */}\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Edit Your Task</ModalHeader>\n                <ModalCloseButton />\n                <form onSubmit={handleEditSubmit}>\n                  <ModalBody>\n                    <Input\n                      value={modalValue.text}\n                      key={modalValue.id}\n                      variant=\"outline\"\n                      type=\"text\"\n                      placeholder=\"Update your todo...\"\n                      onChange={handleEditInputChange}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button colorScheme=\"facebook\" mr={3} onClick={onClose}>\n                      Close\n                    </Button>\n                    <Button type=\"submit\" colorScheme=\"facebook\" mr={3}>\n                      Update\n                    </Button>\n                  </ModalFooter>\n                </form>\n              </ModalContent>\n            </Modal>\n          </Flex>\n        </HStack>\n      ))}\n    </VStack>\n  );\n}\n","import { Stack, Input,Button,useToast } from '@chakra-ui/react'\nimport React, {useState} from 'react'\nimport { nanoid } from 'nanoid';\n\n\nexport function AddTodo({ addTodo }) {\nconst toast = useToast()\nconst [value, setValue] = useState(\"\")\n\nfunction handleSubmit(e){\n    e.preventDefault();\n\nif(value === ''){\n    toast({\n        title: \"Please enter the text.\",\n        status: \"warning\",\n        duration: 2000,\n        isClosable: true,\n      })\n      return;\n    }\nconst todo = {\n    id: nanoid(),\n    text: value\n}\n\naddTodo(todo)\nsetValue('')\n\n}\n    return (\n        <form onSubmit={handleSubmit}>\n        <Stack spacing={5}>\n            <Input\n            mt={5} \n            value={value} \n            variant=\"outline\" \n            type=\"text\" \n            placeholder=\"Enter your todo...\"\n            onChange={(e)=>setValue(e.target.value)} />\n            <Button colorScheme=\"facebook\" type=\"submit\">Add Task</Button>\n        </Stack>\n        </form>\n        \n    )\n}\n","import \"./timer.css\";\nimport { Component } from \"react\";\nimport { Spring } from \"react-spring\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { Text } from \"@chakra-ui/react\"\n// create a form with a simple structure\n// absolute positioned in the center of the screen\nconst Label = styled.form`\n  position: absolute;\n  left: 50%;\n  top: 25%;\n  transform: translate(-50%, -50%);\n  padding: 1.2rem 0.8rem;\n  box-shadow: 0 0 0 2px #0088ff;\n  background: #03031b;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  line-height: 2;\n`;\nconst LabelText = styled.label`\n  color: #fff;\n  font-size: 0.7rem;\n  margin: 0.25rem 0;\n`;\n\nconst LabelInput = styled.input`\n  background: none;\n  border: none;\n  border-left: 2px solid #0088ff;\n  border-radius: 1px;\n  font-family: inherit;\n  font-size: 0.9rem;\n  font-weight: 300;\n  padding: 0.25rem 0.75rem;\n  color: #fff;\n`;\nconst OutputLabel = ({ label, handleTimerLabelInput }) => {\n  return (\n    <Label onSubmit={handleTimerLabelInput}>\n      <LabelText>Timer's Label</LabelText>\n      <LabelInput type=\"text\" placeholder={label} />\n    </Label>\n  );\n};\n\n// show the countdown timer through an SVG element, displaying the countdown in a text element\n// wrap the text in a path element, animated to display the theme color as the timer progresses\nconst OutputDisplay = ({\n  total,\n  timeTotal,\n  label,\n  isLabel,\n  handleTimerLabel,\n  handleTimerLabelInput,\n}) => {\n  // create the number of seconds, minutes and hours from timeTotal\n  let s = timeTotal;\n  let m = 0;\n  let h = 0;\n  while (s >= 60) {\n    s -= 60;\n    m += 1;\n  }\n\n  while (m >= 60) {\n    m -= 60;\n    h += 1;\n  }\n  // show the hours, minutes, seconds one after the other\n  // using the unchanged value representing the total time, describe the amount of time only necessary\n  // meaning, if the total is less than an hout, don't show the hour's label\n  const time = {};\n  if (total >= 3600) {\n    time.h = h;\n  }\n  if (total >= 60) {\n    time.m = m;\n  }\n  time.s = s;\n  // detail the entries of the time object\n  const timeValues = Object.entries(time);\n  // create a text element for each array displaying the label and amount of time\n  const Text = timeValues.map((entry, index) => {\n    // with 3 items, show them at 25, 50, 75%\n    // with 2, at 33, 66%\n    const position = (90 / (timeValues.length + 1)) * (index + 1);\n    return (\n      <text\n        x={position}\n        y=\"50\"\n        fill=\"#0088ff\"\n        alignmentBaseline=\"middle\"\n        textAnchor=\"middle\"\n        key={entry[0]}\n        fontWeight=\"bold\"\n        fontSize=\"1rem\"\n      >\n        {entry[1]}\n        <tspan fontSize=\"0.35rem\" alignmentBaseline=\"hanging\">\n          {entry[0]}\n        </tspan>\n      </text>\n    );\n  });\n\n  // to animate the path, its length is necessary to animate it into view\n  // as the path describes a circle, the length is equal to the perimeter of the circle\n  const perimeter = 43 * 2 * 3.14;\n\n  // use a variable ranging between 0-1 to show the colored circle atop the white one\n  // animating the strokeDashoffset property until it is equal to strokeDasharray\n  const progress = 1 - timeTotal / total;\n  // use the same value for the circle element, to rotate it as the path is animated\n  // 0-1 range --> 0-360 range\n  const transform = `rotate(-${progress * 360}) translate(0 -43) rotate(${\n    progress * 360\n  })`;\n\n  return (\n    <React.Fragment>\n      {/* aside from the output, display an additional element to change the label in the display\n        component toggled and absolute positioned atop the display\n      */}\n      {isLabel && (\n        <OutputLabel\n          label={label}\n          handleTimerLabelInput={handleTimerLabelInput}\n        />\n      )}\n      <svg viewBox=\"0 0 100 100\" width=\"70%\">\n        {/* group to center the elements in the svg, and avoid the circle from being cropped out */}\n        <g transform=\"translate(5 5)\">\n          {/* two overlapping path elements, showing the colored one atop the white one (the later an element is created, the higher its elevation, so to speak) */}\n          <path\n            d=\"M 45 2 a 43 43 0 0 0 0 86 a 43 43 0 0 0 0 -86\"\n            stroke=\"#fff\"\n            strokeWidth=\"2\"\n            fill=\"none\"\n            shapeRendering=\"geometricPrecision\"\n          />\n\n          <path\n            d=\"M 45 2 a 43 43 0 0 0 0 86 a 43 43 0 0 0 0 -86\"\n            stroke=\"#0088ff\"\n            strokeWidth=\"2\"\n            strokeDasharray={perimeter}\n            strokeDashoffset={perimeter - perimeter * progress}\n            fill=\"none\"\n            shapeRendering=\"geometricPrecision\"\n          />\n\n          {/* circle showing the progress */}\n          <circle\n            r=\"3.2\"\n            cx=\"45\"\n            cy=\"45\"\n            fill=\"#0088ff\"\n            transform={transform}\n          />\n\n          <text\n            x=\"45\"\n            y=\"30\"\n            fill=\"#fff\"\n            alignmentBaseline=\"middle\"\n            textAnchor=\"middle\"\n            fontSize=\"0.35rem\"\n            onClick={handleTimerLabel}\n          >\n            {label}\n          </text>\n          {Text}\n        </g>\n      </svg>\n    </React.Fragment>\n  );\n};\n\n// fabricate the round button nesting the SVG for the start of the timer\nconst TimerButton = styled.button`\n  width: 52px;\n  height: 52px;\n  border-radius: 50%;\n  padding: 0.6rem;\n  color: #0088ff;\n  background: #0088ff;\n  box-shadow: 0 1px 5px -2px #0088ff;\n  &:hover {\n    transition: box-shadow 0.2s ease-out;\n    box-shadow: 0 1px 5px 0px #0088ff;\n  }\n`;\n\n/*\ndiv displaying the contents of the two interfaces in a single column layout\nhorizontally centered\n*/\nconst OutputContainer = styled.div`\n  max-width: 380px;\n  width: 90vw;\n  margin: 2rem auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n`;\n\nconst OutputControls = styled.div`\n  margin-top: 3rem;\n  display: grid;\n  grid-column-gap: 2rem;\n  grid-template-columns: repeat(3, 80px);\n  align-items: center;\n  justify-items: center;\n`;\n\nconst TimerOutput = ({\n  total,\n  timeTotal,\n  label,\n  isLabel,\n  isPlaying,\n  handleTimerToggle,\n  handleTimerNew,\n  handleTimerAdd,\n  handleTimerReset,\n  handleTimerLabel,\n  handleTimerLabelInput,\n}) => {\n  // render the display atop a series of buttons enabling the project's functionalities\n  return (\n    <Spring\n      from={{ opacity: 0, transform: \"translateY(2.5rem)\" }}\n      to={{ opacity: 1, transform: \"translateY(0)\" }}\n    >\n      {({ opacity, transform }) => (\n        <OutputContainer style={{ opacity, transform }}>\n          {/* display component using timeTotal, describing the time being counted down, and total, the unchanged total (to compute the relative progress) */}\n          <OutputDisplay\n            total={total}\n            timeTotal={timeTotal}\n            label={label}\n            isLabel={isLabel}\n            handleTimerLabel={handleTimerLabel}\n            handleTimerLabelInput={handleTimerLabelInput}\n          />\n\n          <OutputControls>\n            {/* button to go back to the input UI */}\n            <button onClick={handleTimerNew}><Text color=\"white\">New Timer</Text></button>\n\n            {/* button to toggle the timer  */}\n            <TimerButton onClick={handleTimerToggle}>\n              {isPlaying ? (\n                <svg viewBox=\"0 0 100 100\">\n                  <rect\n                    x=\"30\"\n                    y=\"30\"\n                    width=\"10\"\n                    height=\"40\"\n                    stroke=\"#eee\"\n                    strokeWidth=\"6px\"\n                    fill=\"currentColor\"\n                  />\n                  <rect\n                    x=\"60\"\n                    y=\"30\"\n                    width=\"10\"\n                    height=\"40\"\n                    stroke=\"#eee\"\n                    strokeWidth=\"6px\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              ) : (\n                <svg viewBox=\"0 0 100 100\">\n                  <path\n                    d=\"M 40 30 l 30 20 l -30 20 Z\"\n                    stroke=\"#eee\"\n                    strokeWidth=\"7px\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              )}\n            </TimerButton>\n\n            {/* button to either add 1 minute or reset the timer, based on whether the timer is paused */}\n            {isPlaying ? (\n              <button onClick={handleTimerAdd}><Text color=\"white\">Add +1:00</Text></button>\n            ) : (\n              <button onClick={handleTimerReset}><Text color=\"white\">Reset Timer</Text></button>\n            )}\n          </OutputControls>\n        </OutputContainer>\n      )}\n    </Spring>\n  );\n};\n\n// display the time and the button removing the last digit side by side\nconst Input = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.75rem;\n  margin-bottom: 1rem;\n  border-bottom: 2px solid #ffffff11;\n  transition: color 0.2s ease-out;\n  // style the color of the text (and the svg element through the currentColor property) based on the props boolean\n  color: ${(props) => (props.isInput ? \"#ffffff\" : \"#ffffff55\")};\n`;\n\n// display the span elements side by side, in a heading stretching to occupy as much space as available\nconst InputTime = styled.h2`\n  flex-grow: 1;\n  display: flex;\n  font-size: 2rem;\n  font-weight: 500;\n`;\nconst InputSpan = styled.span`\n  flex-grow: 1;\n  width: 0;\n  margin: 0 0.75rem;\n  position: relative;\n\n  // add the short label for hours, minutes, seconds by accessing the suffix argument passed through props\n  &:after {\n    content: \"${(props) => props.suffix}\";\n    font-size: 0.8rem;\n    margin-left: 0.15rem;\n  }\n`;\n\nconst InputButton = styled.button`\n  width: 70px;\n  height: 50px;\n  padding: 0.3rem;\n`;\n\n// function formatting the time, to always show two digits (zero-padded values)\nfunction formatTime(time) {\n  return time >= 10 ? time : `0${time}`;\n}\n\nconst InputDisplay = ({ isInput, time, handleDialBack }) => {\n  // create three span elements out of the hours, minutes and seconds depicted in the time object\n  /* structured as follows\n  {\n    h,\n    m,\n    s\n  }\n  */\n  const InputPair = Object.entries(time);\n  const InputSpans = InputPair.map((pair) => (\n    <InputSpan key={pair[0]} suffix={pair[0]}>\n      {formatTime(pair[1])}\n    </InputSpan>\n  ));\n\n  return (\n    <Input isInput={isInput}>\n      <InputTime>{InputSpans}</InputTime>\n\n      {/* draw the style button with path elements */}\n      <InputButton onClick={handleDialBack}>\n        <svg viewBox=\"0 0 100 100\">\n          <path\n            d=\"M 50 37.5 l 25 25\"\n            strokeWidth=\"5px\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n          />\n\n          <path\n            d=\"M 50 62.5 l 25 -25\"\n            strokeWidth=\"5px\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n          />\n\n          <path\n            d=\"M 40 20 h 50 v 60 h -50 l -20 -30 Z\"\n            strokeWidth=\"5px\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n          />\n        </svg>\n      </InputButton>\n    </Input>\n  );\n};\n\n// in the dial show the digits from 0 to 9, in a grid\nconst Dial = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 85%;\n  grid-gap: 1.8rem 1rem;\n  margin-bottom: 1.25rem;\n`;\n\n// for the digits, these are included through buttons styled to change their appearance on hover/focus\nconst Digit = styled.button`\n  font-size: 2rem;\n  transition: all 0.2s ease-out;\n  font-weight: 600;\n  position: relative;\n  color: #ffffff55;\n  // for the focus and active state substitute the default outline highlighting the button through a fully opaque color and a pseudo element\n  outline: none;\n  // push the first digit, 0, to the very bottom of the timer\n  &:nth-of-type(1) {\n    grid-row: 4/5;\n    grid-column: 1/-1;\n  }\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 50px;\n    height: 50px;\n    transform: translate(-50%, -50%) scale(0);\n    background: #fff;\n    border-radius: 50%;\n  }\n  &:hover,\n  &:focus {\n    color: #fff;\n  }\n  &:hover:before,\n  &:focus:before {\n    transition: all 0.2s ease-out;\n    // transition occurring only as the mouse hovers in the element\n    transition-delay: 0.1s;\n    transform: translate(-50%, -50%) scale(1);\n    opacity: 0;\n  }\n`;\n\nconst InputDial = ({ handleDial }) => {\n  // create an array of ten items, including the digits from 0 to 9 in the styled button\n  const Digits = [];\n  for (let i = 0; i < 10; i += 1) {\n    Digits.push(\n      <Digit key={i} onClick={handleDial}>\n        {i}\n      </Digit>\n    );\n  }\n  return <Dial>{Digits}</Dial>;\n};\n\n/*\ndiv displaying the contents of the two interfaces in a single column layout\nhorizontally centered\n*/\nconst InputContainer = styled.div`\n  max-width: 380px;\n  width: 90vw;\n  margin: 2rem auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n`;\n\nconst TimerInput = ({\n  input,\n  time,\n  handleDial,\n  handleDialBack,\n  handleTimerStart,\n}) => {\n  // render the display atop the dial and the button\n  return (\n    <Spring\n      from={{ opacity: 0, transform: \"translateY(-2.5rem)\" }}\n      to={{ opacity: 1, transform: \"translateY(0)\" }}\n    >\n      {({ opacity, transform }) => (\n        <InputContainer style={{ opacity, transform }}>\n          {/* InputDisplay styled according to a boolea, which keeps track of the input's length\n      displaying the value described in the time object\n      removing the last included digit through the handleDialBack function\n       */}\n          <InputDisplay\n            isInput={input.length !== 0}\n            time={time}\n            handleDialBack={handleDialBack}\n          />\n\n          {/* InputDial simply collecting the value of the button pressed, through the handleDial function */}\n          <InputDial handleDial={handleDial} />\n\n          {/* show the button only if there is at least one digit in the display */}\n          {input && (\n            // start the timer when clicking the button\n            <TimerButton onClick={handleTimerStart}>\n              <svg viewBox=\"0 0 100 100\">\n                <path\n                  d=\"M 40 30 l 30 20 l -30 20 Z\"\n                  stroke=\"#eee\"\n                  strokeWidth=\"7px\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </TimerButton>\n          )}\n        </InputContainer>\n      )}\n    </Spring>\n  );\n};\n\n/*\ndiv displaying the contents of the two interfaces in a single column layout\nhorizontally centered\n*/\n\n// main component rendered through index.js\nexport class Timer extends Component {\n  constructor(props) {\n    super(props);\n    /* in the state specify the following\n    - input, keeping track of the digits included through the dial in a string\n    - time, keeping track of the number of hours, minutes and seconds in an object\n    - timeTotal, keeping track of the number of seconds specified through the time object\n    - total, to save the total number of seconds and use it to reset the timer to this value\n    - label, a string describing the text shown in the output\n    - isTimer, to show the input or output interface\n    - isPlaying, to toggle between play and pause in the output interface\n    - isLabel, to toggle the label component\n    */\n    this.state = {\n      input: \"\",\n      time: {\n        h: 0,\n        m: 0,\n        s: 0,\n      },\n      timeTotal: 0,\n      total: 0,\n      label: \"Label\",\n      isTimer: false,\n      isPlaying: false,\n      isLabel: false,\n    };\n\n    // bind the functions to update the state and enable the timer's functionalities\n    this.handleDial = this.handleDial.bind(this);\n    this.handleDialBack = this.handleDialBack.bind(this);\n    this.handleTimerStart = this.handleTimerStart.bind(this);\n    this.handleTimerToggle = this.handleTimerToggle.bind(this);\n    this.handleTimerAdd = this.handleTimerAdd.bind(this);\n    this.handleTimerNew = this.handleTimerNew.bind(this);\n    this.handleTimerReset = this.handleTimerReset.bind(this);\n    this.handleTimerLabel = this.handleTimerLabel.bind(this);\n    this.handleTimerLabelInput = this.handleTimerLabelInput.bind(this);\n  }\n\n  // function updating time and TimeTotal, on the basis of the 6 letters top string\n  updateTime(input) {\n    // based on the input string, create a six-letter long string (adding 0 at the beginning)\n    const inputTime = input.padStart(6, 0);\n    // separate the hours, minutes and seconds\n    let h = parseInt(inputTime.substring(0, 2), 10);\n    let m = parseInt(inputTime.substring(2, 4), 10);\n    let s = parseInt(inputTime.substring(4));\n    // compute the total\n    const timeTotal = h * 60 * 60 + m * 60 + s;\n\n    const time = {\n      h,\n      m,\n      s,\n    };\n\n    // update the object and the integer\n    this.setState({\n      time,\n      timeTotal,\n      total: timeTotal,\n    });\n  }\n\n  // function handling a press on the dial's buttons\n  handleDial(e) {\n    // retrieve the button's text element (0-9 value)\n    const { textContent } = e.target;\n    // retrieve the input from the state\n    let { input } = this.state;\n    const { length } = input;\n    // if the button pressed is 0 and the input doesn't already have a value, preemptively exit the function\n    if (textContent === \"0\" && length === 0) {\n      return;\n    }\n    // if the input is less than 6 characters long (hhmmss), add the digit to the input string and update the state\n    if (length < 6) {\n      input += textContent;\n      this.setState({\n        input,\n      });\n      // update the time and timeTotal\n      this.updateTime(input);\n    }\n  }\n\n  // function handling a press on the dial's back button\n  handleDialBack(e) {\n    // retrieve the input from the state\n    let { input } = this.state;\n    const { length } = input;\n    // if input has at least a character, remove the last digit\n    if (length > 0) {\n      input = input.substring(0, length - 1);\n      // update the state\n      this.setState({\n        input,\n      });\n    }\n    // update the time and timeToal\n    this.updateTime(input);\n  }\n\n  // function starting the timer\n  startTimer() {\n    // start a timer from timeTotal, decreasing its value one second at a time\n    this.intervalID = setInterval(() => {\n      let { timeTotal } = this.state;\n      timeTotal -= 1;\n      this.setState({\n        timeTotal: timeTotal,\n      });\n      // when reaching 0, clear the interval\n      if (timeTotal === 0) {\n        clearInterval(this.intervalID);\n      }\n    }, 1000);\n  }\n\n  // function handling a press on the button starting the timer\n  handleTimerStart() {\n    // update the UI showing the output interface and the pause button\n    this.setState({\n      isTimer: true,\n      isPlaying: true,\n    });\n    // start the timer\n    this.startTimer();\n  }\n\n  // function handling a press on the button pausing/starting the timer\n  handleTimerToggle() {\n    // based on the isPlaying boolean stop the interval or start it anew\n    const { isPlaying } = this.state;\n    if (isPlaying) {\n      clearInterval(this.intervalID);\n    } else {\n      this.startTimer();\n    }\n    // update the UI of the button\n    this.setState({\n      isPlaying: !this.state.isPlaying,\n    });\n  }\n\n  // function handling a press on the +1:00 button\n  handleTimerAdd() {\n    // add a minute to the total\n    const { timeTotal, total } = this.state;\n    this.setState({\n      timeTotal: timeTotal + 60,\n      total: total + 60,\n    });\n  }\n\n  // function handling a press on the new timer button\n  handleTimerNew() {\n    // stop the ongoing interval, if there's one\n    clearInterval(this.intervalID);\n    // reset the input and update the state showing the input UI\n    const input = \"\";\n    this.setState({\n      isTimer: false,\n      input,\n    });\n    // update the time with the now empty input\n    this.updateTime(input);\n  }\n\n  // function handling a press on the reset button\n  handleTimerReset() {\n    // stop the ongoing interval\n    clearInterval(this.intervalID);\n    // retrieve the input value\n    const { input } = this.state;\n\n    // update the timer with the old existing value and start the timer\n    this.updateTime(input);\n    this.handleTimerStart();\n  }\n\n  // function handling a press on the label text\n  handleTimerLabel() {\n    this.setState({\n      isLabel: true,\n    });\n  }\n  // function handling input in the label component\n  handleTimerLabelInput(e) {\n    e.preventDefault();\n    // update the label with the input value\n    const { value: label } = e.target.querySelector(\"input\");\n    if (label) {\n      this.setState({\n        label,\n        isLabel: false,\n      });\n    }\n  }\n\n  render() {\n    // destructure the necessary information from the state\n    const {\n      input,\n      time,\n      isTimer,\n      isPlaying,\n      timeTotal,\n      total,\n      label,\n      isLabel,\n    } = this.state;\n\n    // based on the boolean show the input or output component\n    return (\n      <div>\n        {isTimer ? (\n          /* TimerOutput\n            displaying the countdown timer through **timeTotal**\n            showing the pause/play button according to **isPlaying**\n            handling functionalities such as pausing/starting the timer, adding a minute, resetting and finally removing the timer */\n          <div className=\"body\">\n            <TimerOutput\n              total={total}\n              timeTotal={timeTotal}\n              label={label}\n              isPlaying={isPlaying}\n              isLabel={isLabel}\n              handleTimerToggle={this.handleTimerToggle}\n              handleTimerNew={this.handleTimerNew}\n              handleTimerAdd={this.handleTimerAdd}\n              handleTimerReset={this.handleTimerReset}\n              handleTimerLabel={this.handleTimerLabel}\n              handleTimerLabelInput={this.handleTimerLabelInput}\n            />\n          </div>\n        ) : (\n          /* TimerInput\n            adding the digits to **input**\n            displaying the digits as per **time**\n            handling functionalities such as adding digits, removing them, starting the timer */\n          <div className=\"body\">\n            <TimerInput\n              input={input}\n              time={time}\n              handleDial={this.handleDial}\n              handleDialBack={this.handleDialBack}\n              handleTimerStart={this.handleTimerStart}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CountdownTimer } from \"./CountdownTimer\";\nimport { Tasks } from \"./Tasks\";\nimport { Card } from \"./Card\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  chakra,\n  Box,\n  Flex,\n  useColorModeValue,\n  Text,\n  useToken,\n  Stack,\n  SimpleGrid,\n  Icon,\n  Link,\n  Badge,\n  VStack,\n  Heading,\n  Center,\n  Button\n} from \"@chakra-ui/react\";\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\";\nimport { TodoList } from \"./TodoList\";\nimport { AddTodo } from \"./AddTodo\";\nimport { Navbar } from \"./Navbar\";\nimport { Timer } from \"./Timer\";\n\nexport const Work = () => {\n  let history = useHistory();\n  const topBg = useColorModeValue(\"gray.800\", \"gray.700\");\n  const bottomBg = useColorModeValue(\"white\", \"gray.800\");\n  const [bottomBgHex] = useToken(\"colors\", [bottomBg]);\n  const [todos, setTodos] = useState([]);\n  let goToBreak = () => {\n    history.push(\"/break\")\n  }\n  function deleteTodo(id) {\n    const newTodos = todos.filter((item) => {\n      return item.id !== id;\n    });\n    setTodos(newTodos);\n    console.log(newTodos);\n  }\n\n  function addTodo(newTodo) {\n    setTodos([...todos, newTodo]);\n  }\n\n  function editTodo(id, updatedTodo) {\n    const updatedItem = todos.map((todo) => {\n      return todo.id === id ? updatedTodo : todo;\n    });\n    setTodos(updatedItem);\n  }\n  const audioList1 = [\n    {\n      name: \"LoFi Hip Hop\",\n      singer: \"Chilled Cow\",\n      cover:\n        \"https://res.cloudinary.com/flow019/image/upload/v1624739457/flow_audios/Screen_Shot_2021-06-26_at_1.20.59_PM_sus7up.png\",\n      musicSrc:\n        \"https://res.cloudinary.com/flow019/video/upload/v1624739207/flow_audios/1_A.M_Study_Session_-_lofi_hip_hop_chill_beats_fajusr.mp3\",\n      // support async fetch music src. eg.\n      // musicSrc: async () => {\n      //   return await fetch('/api')\n      // },\n    },\n    {\n      name: \"Midnight City - LoFi Jazz\",\n      singer: \"The Jazz Hop Café\",\n      cover:\n        \"https://res.cloudinary.com/flow019/image/upload/v1624739975/flow_audios/Screen_Shot_2021-06-26_at_1.39.15_PM_wlgqdr.png\",\n      musicSrc:\n        \"https://res.cloudinary.com/flow019/video/upload/v1624739970/flow_audios/midnight_city._lofi___jazz_hop___chill_mix_dvroe0.mp3\",\n    },\n  ];\n  return (\n    <div>\n      <Navbar />\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Flex w=\"full\" p={50} alignItems=\"center\" justifyContent=\"center\">\n          <br />\n          <SimpleGrid\n            columns={[1, 2]}\n            gap=\"200px\"\n            mx=\"auto\"\n            textAlign={[\"left\", \"center\"]}\n          >\n            <Card bgColor=\"black\">\n              <Heading textColor=\"white\">Timer</Heading>\n              <Timer />\n            </Card>\n            <Card>\n              <VStack p={5}>\n                <Text\n                  bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n                  bgClip=\"text\"\n                  fontSize=\"2xl\"\n                  fontWeight=\"bold\"\n                >\n                  Task List\n                </Text>\n                <br />\n                <TodoList\n                  todos={todos}\n                  deleteTodo={deleteTodo}\n                  editTodo={editTodo}\n                />\n                <AddTodo addTodo={addTodo} />\n              </VStack>\n            </Card>\n          </SimpleGrid>\n          <br />\n          <ReactJkMusicPlayer\n            theme={\"dark\"}\n            locale={\"en_US\"}\n            mode={\"full\"}\n            audioLists={audioList1}\n          />\n        </Flex>\n        <Center>\n            <Button colorScheme=\"facebook\" onClick={goToBreak} size=\"lg\">Take a Break</Button>\n          </Center>\n      </Box>\n    </div>\n  );\n};\n","import { Card } from \"./Card\";\nimport { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { StreamChat } from \"stream-chat\";\nimport { ChatBubble, Message } from \"react-chat-ui\";\nimport \"./chat.css\";\nimport firebase from \"firebase\";\n\nexport const ChatBox = ({ humanMessages, aiMessages }) => {\n  const client = StreamChat.getInstance(\"2mfepnmrh4rw\");\n  let allMessages = [];\n  if (humanMessages.length > 0) {\n    for (let i = 0; i < humanMessages.length; i++) {\n      allMessages.push([humanMessages[i], aiMessages[i]]);\n    }\n  }\n  return (\n    <div>\n        <Center>\n          <Heading>Chat</Heading>\n        </Center>\n        {/* <div class=\"chat\"> */}\n          {allMessages.map((message) => (\n            <div>\n              <div class=\"mine messages\">\n                <div class=\"message last\">{firebase.auth().currentUser.displayName}: {message[0]}</div>\n              </div>\n              <div class=\"yours messages\">\n                <div class=\"message\">{message[1]}</div>\n              </div>\n              {/* <Text>Human: {message[0]}</Text> */}\n              {/* <Text>{message[1]}</Text> */}\n            </div>\n          ))}\n        {/* </div> */}\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport { Box, Heading, Center, Input, Button, Text } from \"@chakra-ui/react\";\nimport { Card } from \"./Card\";\nimport { ChatBox } from \"./ChatBox\";\nimport { Navbar } from \"./Navbar\";\nexport const Chat = () => {\n  let [humanMessages, setHumanMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [aiMessages, setAiMessages] = useState([]);\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: firebase.auth().currentUser.getIdToken(),\n    email: firebase.auth().currentUser.email,\n  };\n  let handleMessage = (e) => {\n    setMessage(e.target.value);\n  };\n  let sendMessage = (e) => {\n    let messageText = {\n      header: \"Access-Control-Allow-Origin\",\n      text: message,\n    };\n    setHumanMessages([...humanMessages, message]);\n    axios.post(\"https://flow-0.herokuapp.com/home\", user).then((response) => {\n      axios.post(\"https://flow-0.herokuapp.com/chat\", messageText).then((res) => {\n        setAiMessages([...aiMessages, res.data.data]);\n      });\n    });\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n        <Navbar />\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Box maxW=\"md\" mx=\"auto\">\n          <Center>\n            <Heading color=\"white\" fontSize=\"5xl\" fontWeight=\"extrabold\">\n              AI Chat Therapy\n            </Heading>\n          </Center>\n          <br />\n          <br />\n          <Card>\n          <ChatBox humanMessages={humanMessages} aiMessages={aiMessages}/>\n          <br />\n          <br />\n          <br />\n          <br />\n          <Input\n            value={message}\n            onChange={handleMessage}\n            variant=\"filled\"\n            placeholder=\"Write a message to our AI Therapist\"\n          />\n          <br />\n          <br />\n          <Center>\n            <Button onClick={sendMessage} colorScheme={\"facebook\"}>Send</Button>\n          </Center>\n          <br />\n          <br />\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  chakra,\n  Box,\n  useColorModeValue,\n  Icon,\n  Image,\n  HStack,\n  Stack,\n  Button,\n  Flex,\n  SimpleGrid,\n  GridItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nexport const Landing = ({ isSignedIn }) => {\n  let history = useHistory();\n\n  const goToLogin = () => {\n    history.push(\"/login\");\n  };\n  const goToFeed = () => {\n    history.push(\"/home\");\n  };\n\n  const bg1 = useColorModeValue(\"gray.900\", \"white\");\n  const bg2 = useColorModeValue(\"brand.600\", \"brand.400\");\n\n  const Feature = (props) => {\n    return (\n      <Flex>\n        <Flex shrink={0}>\n          <Icon\n            boxSize={5}\n            mt={1}\n            mr={2}\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </Icon>\n        </Flex>\n        <Box ml={6}>\n          <chakra.dt fontSize=\"lg\" fontWeight=\"bold\" lineHeight=\"6\">\n            {props.title}\n          </chakra.dt>\n          <chakra.dd mt={2}>{props.children}</chakra.dd>\n        </Box>\n      </Flex>\n    );\n  };\n\n  if (isSignedIn === true) {\n    return (\n      <div>\n        <Box\n          minH=\"5xl\"\n          py=\"12\"\n          px={{\n            base: \"4\",\n            lg: \"8\",\n          }}\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n          alignContent=\"center\"\n        >\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Box pos=\"relative\" overflow=\"hidden\">\n            <Box maxW=\"7xl\" mx=\"auto\">\n              <Box\n                pos=\"relative\"\n                pb={{ base: 8, sm: 16, md: 20, lg: 28, xl: 32 }}\n                w=\"full\"\n                border=\"solid 1px transparent\"\n              >\n                <Box\n                  mt={10}\n                  mx=\"auto\"\n                  maxW={{ base: \"7xl\" }}\n                  px={{ base: 4, sm: 6, lg: 8 }}\n                  mt={{ base: 12, md: 16, lg: 20, xl: 28 }}\n                >\n                  <Box\n                    textAlign=\"center\"\n                    w={{ base: \"full\", md: 11 / 12, xl: 8 / 12 }}\n                    mx=\"auto\"\n                  >\n                    <chakra.h1\n                      fontSize={{ base: \"4xl\", sm: \"5xl\", md: \"6xl\" }}\n                      letterSpacing=\"tight\"\n                      lineHeight=\"short\"\n                      fontWeight=\"extrabold\"\n                      color=\"white\"\n                    >\n                      <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        Manage Your Time, Productivity, and Stress with{\" \"}\n                      </chakra.span>\n                      <chakra.span\n                        display={{ base: \"block\", xl: \"inline\" }}\n                        color=\"twitter.100\"\n                      >\n                        Flow\n                      </chakra.span>\n                    </chakra.h1>\n                    <chakra.p\n                      mt={{ base: 3, sm: 5, md: 8 }}\n                      mx={12}\n                      mb={10}\n                      fontSize={{ base: \"lg\", md: \"xl\" }}\n                      color=\"facebook.100\"\n                      lineHeight=\"base\"\n                    >\n                      A platform designed to help alleviate stress while maximizing \n                      your productivity.\n                    </chakra.p>\n                    <Stack\n                      direction={{ base: \"column\", sm: \"column\", md: \"row\" }}\n                      mb={{ base: 4, md: 8 }}\n                      spacing={{ base: 4, md: 2 }}\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        size=\"md\"\n                        variant=\"ghost\"\n                        bgGradient=\"linear(to-r, blue.100, blue.300)\"\n                        onClick={goToFeed}\n                      >\n                        {firebase.auth().currentUser.displayName}'s Flow\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <br />\n        <br />\n        <Text\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n        >\n          Features\n        </Text>\n        <Flex p={20} w=\"auto\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            shadow=\"3xl\"\n            px={8}\n            py={20}\n            mx=\"auto\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            rounded=\"lg\"\n          >\n            <SimpleGrid\n              alignItems=\"center\"\n              columns={{ base: 1, lg: 3 }}\n              spacingY={{ base: 10, lg: 32 }}\n              spacingX={{ base: 10, lg: 24 }}\n            >\n              <Box alignSelf=\"start\" color=\"white\">\n                <chakra.h2\n                  mb={3}\n                  fontSize={{ base: \"3xl\", md: \"4xl\" }}\n                  fontWeight=\"extrabold\"\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                  lineHeight=\"shorter\"\n                  letterSpacing=\"tight\"\n                >\n                  Improve Your Mental Health\n                </chakra.h2>\n                <chakra.p\n                  mb={6}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                >\n                  Flow improves your mental health by boosting your productivity \n                  and providing outlets to reduce mental stress.\n                </chakra.p>\n              </Box>\n              <GridItem colSpan={2} color=\"white\">\n                <Stack\n                  spacing={{ base: 10, md: 0 }}\n                  display={{ md: \"grid\" }}\n                  gridTemplateColumns={{ md: \"repeat(2,1fr)\" }}\n                  gridColumnGap={{ md: 8 }}\n                  gridRowGap={{ md: 10 }}\n                >\n                  <Feature title=\"AI Chat Therapy\">\n                    Talk to our AI therapist that is powered by GPT-3 whenever you're\n                    in need of emotional or mental support. Or just drop into the chat\n                    if you're bored; our therapist can be a great friend too 🤖{\" \"}\n                  </Feature>\n                  <Feature title=\"Study Space\">\n                    Dive into our simple dashboard that includes a pomodoro timer,\n                    a customizable task list, and some chill LoFi music. We designed\n                    this study space to streamline your workflow ✍️ \n                  </Feature>\n                  <Feature title=\"Take a Break\">\n                    {\" \"}\n                    Relaxing is a key part of everyone's workflow. Flow provides\n                    various outlets for alleviating stress such as meditation, music,\n                    and more 😌\n                  </Feature>\n                  <Feature title=\"Security\">\n                    {\" \"}\n                    Login instantaneously using Google, Facebook, or\n                    your email. We will never share your data with\n                    third-party services. Additionally, your therapist\n                    chat history is not saved to maintain anonymity. 🔒\n                  </Feature>\n                </Stack>\n              </GridItem>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Box\n          minH=\"5xl\"\n          py=\"12\"\n          px={{\n            base: \"4\",\n            lg: \"8\",\n          }}\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n          alignContent=\"center\"\n        >\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Box pos=\"relative\" overflow=\"hidden\">\n            <Box maxW=\"7xl\" mx=\"auto\">\n              <Box\n                pos=\"relative\"\n                pb={{ base: 8, sm: 16, md: 20, lg: 28, xl: 32 }}\n                w=\"full\"\n                border=\"solid 1px transparent\"\n              >\n                <Box\n                  mt={10}\n                  mx=\"auto\"\n                  maxW={{ base: \"7xl\" }}\n                  px={{ base: 4, sm: 6, lg: 8 }}\n                  mt={{ base: 12, md: 16, lg: 20, xl: 28 }}\n                >\n                  <Box\n                    textAlign=\"center\"\n                    w={{ base: \"full\", md: 11 / 12, xl: 8 / 12 }}\n                    mx=\"auto\"\n                  >\n                    <chakra.h1\n                      fontSize={{ base: \"4xl\", sm: \"5xl\", md: \"6xl\" }}\n                      letterSpacing=\"tight\"\n                      lineHeight=\"short\"\n                      fontWeight=\"extrabold\"\n                      color=\"white\"\n                    >\n                      <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        Manage Your Time, Productivity, and Stress with{\" \"}\n                      </chakra.span>\n                      <chakra.span\n                        display={{ base: \"block\", xl: \"inline\" }}\n                        color=\"twitter.100\"\n                      >\n                        Flow\n                      </chakra.span>\n                    </chakra.h1>\n                    <chakra.p\n                      mt={{ base: 3, sm: 5, md: 8 }}\n                      mx={12}\n                      mb={10}\n                      fontSize={{ base: \"lg\", md: \"xl\" }}\n                      color=\"facebook.100\"\n                      lineHeight=\"base\"\n                    >\n                      A platform designed to help alleviate stress while maximizing \n                      your productivity.\n                    </chakra.p>\n                    <Stack\n                      direction={{ base: \"column\", sm: \"column\", md: \"row\" }}\n                      mb={{ base: 4, md: 8 }}\n                      spacing={{ base: 4, md: 2 }}\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        size=\"md\"\n                        variant=\"ghost\"\n                        bgGradient=\"linear(to-r, blue.100, blue.300)\"\n                        onClick={goToLogin}\n                      >\n                        Login to Flow\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <br />\n        <br />\n        <Text\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n        >\n          Features\n        </Text>\n        <Flex p={20} w=\"auto\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            shadow=\"3xl\"\n            px={8}\n            py={20}\n            mx=\"auto\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            rounded=\"lg\"\n          >\n            <SimpleGrid\n              alignItems=\"center\"\n              columns={{ base: 1, lg: 3 }}\n              spacingY={{ base: 10, lg: 32 }}\n              spacingX={{ base: 10, lg: 24 }}\n            >\n              <Box alignSelf=\"start\" color=\"white\">\n                <chakra.h2\n                  mb={3}\n                  fontSize={{ base: \"3xl\", md: \"4xl\" }}\n                  fontWeight=\"extrabold\"\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                  lineHeight=\"shorter\"\n                  letterSpacing=\"tight\"\n                >\n                  Improve Your Mental Health\n                </chakra.h2>\n                <chakra.p\n                  mb={6}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                >\n                  Flow improves your mental health by boosting your productivity \n                  and providing outlets to reduce mental stress.\n                </chakra.p>\n              </Box>\n              <GridItem colSpan={2} color=\"white\">\n                <Stack\n                  spacing={{ base: 10, md: 0 }}\n                  display={{ md: \"grid\" }}\n                  gridTemplateColumns={{ md: \"repeat(2,1fr)\" }}\n                  gridColumnGap={{ md: 8 }}\n                  gridRowGap={{ md: 10 }}\n                >\n                  <Feature title=\"AI Chat Therapy\">\n                    Talk to our AI therapist that is powered by GPT-3 whenever you're\n                    in need of emotional or mental support. Or just drop into the chat\n                    if you're bored; our therapist can be a great friend too 🤖{\" \"}\n                  </Feature>\n                  <Feature title=\"Study Space\">\n                    Dive into our simple dashboard that includes a pomodoro timer,\n                    a customizable task list, and some chill LoFi music. We designed\n                    this study space to streamline your workflow ✍️ \n                  </Feature>\n                  <Feature title=\"Take a Break\">\n                    {\" \"}\n                    Relaxing is a key part of everyone's workflow. Flow provides\n                    various outlets for alleviating stress such as meditation, music,\n                    and more 😌\n                  </Feature>\n                  <Feature title=\"Security\">\n                    {\" \"}\n                    Login instantaneously using Google, Facebook, or\n                    your email. We will never share your data with\n                    third-party services. Additionally, your therapist\n                    chat history is not saved to maintain anonymity. 🔒\n                  </Feature>\n                </Stack>\n              </GridItem>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n};","import firebase from \"firebase\";\nimport { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { ChakraProvider, useFocusOnHide } from \"@chakra-ui/react\";\nimport { Login } from \"./components/Login\";\nimport { Home } from \"./components/Home\";\nimport { TakeABreak } from \"./components/TakeABreak\";\nimport { Work } from \"./components/Work.js\";\nimport { Chat } from \"./components/Chat\";\nimport { Landing } from \"./components/Landing\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB-TI-_gxPoEM-Pa3sEeEJDSUhEe4rzKMg\",\n  authDomain: \"flow-f03b7.firebaseapp.com\",\n});\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  let history = useHistory();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setIsSignedIn(!!user);\n    });\n  });\n\n  if (isSignedIn === true) {\n    return (\n      <ChakraProvider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n            <Route exact path=\"/\">\n              <Landing isSignedIn={isSignedIn}/>\n            </Route>\n            <Route exact path=\"/chat\">\n              <Chat />\n            </Route>\n            <Route exact path=\"/break\">\n              <TakeABreak />\n            </Route>\n            <Route exact path=\"/work\">\n              <Work />\n            </Route>\n          </Switch>\n        </Router>\n      </ChakraProvider>\n    );\n  } else {\n    return (\n      <ChakraProvider>\n        <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Landing isSignedIn={isSignedIn}/>\n          </Route>\n          <Route exact path=\"/login\">\n              <Login />\n          </Route>\n        </Switch>\n      </Router>\n      </ChakraProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}