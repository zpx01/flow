[{"/Users/zeeshanpatel/flow/src/index.js":"1","/Users/zeeshanpatel/flow/src/reportWebVitals.js":"2","/Users/zeeshanpatel/flow/src/App.js":"3","/Users/zeeshanpatel/flow/src/components/Home.js":"4","/Users/zeeshanpatel/flow/src/components/Login.js":"5","/Users/zeeshanpatel/flow/src/components/Card.js":"6","/Users/zeeshanpatel/flow/src/components/TakeABreak.js":"7","/Users/zeeshanpatel/flow/src/components/CarouselDemo.js":"8","/Users/zeeshanpatel/flow/src/components/GifModal.js":"9","/Users/zeeshanpatel/flow/src/components/MeditateModal.js":"10","/Users/zeeshanpatel/flow/src/components/Chat.js":"11","/Users/zeeshanpatel/flow/src/components/ChatBox.js":"12","/Users/zeeshanpatel/flow/src/components/Work.js":"13","/Users/zeeshanpatel/flow/src/components/CountdownTimer.js":"14","/Users/zeeshanpatel/flow/src/components/Tasks.js":"15","/Users/zeeshanpatel/flow/src/components/Alert.js":"16","/Users/zeeshanpatel/flow/src/components/CheckList.js":"17","/Users/zeeshanpatel/flow/src/components/Landing.js":"18","/Users/zeeshanpatel/flow/src/components/Navbar.js":"19","/Users/zeeshanpatel/flow/src/components/SliderInput.js":"20","/Users/zeeshanpatel/flow/src/components/AddTodo.js":"21","/Users/zeeshanpatel/flow/src/components/TodoList.js":"22","/Users/zeeshanpatel/flow/src/components/Timer.js":"23"},{"size":500,"mtime":1624646857329,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1624646857329,"results":"26","hashOfConfig":"25"},{"size":1841,"mtime":1624781308909,"results":"27","hashOfConfig":"25"},{"size":5361,"mtime":1624821776901,"results":"28","hashOfConfig":"25"},{"size":1826,"mtime":1624781543889,"results":"29","hashOfConfig":"25"},{"size":267,"mtime":1624659823691,"results":"30","hashOfConfig":"25"},{"size":3209,"mtime":1624815439267,"results":"31","hashOfConfig":"25"},{"size":1177,"mtime":1624789482576,"results":"32","hashOfConfig":"25"},{"size":1266,"mtime":1624779571060,"results":"33","hashOfConfig":"25"},{"size":2543,"mtime":1624779635558,"results":"34","hashOfConfig":"25"},{"size":2110,"mtime":1624819656342,"results":"35","hashOfConfig":"25"},{"size":1117,"mtime":1624815439266,"results":"36","hashOfConfig":"25"},{"size":3566,"mtime":1624821587531,"results":"37","hashOfConfig":"25"},{"size":2593,"mtime":1624818083934,"results":"38","hashOfConfig":"25"},{"size":1452,"mtime":1624819614094,"results":"39","hashOfConfig":"25"},{"size":998,"mtime":1624777643863,"results":"40","hashOfConfig":"25"},{"size":329,"mtime":1624818016825,"results":"41","hashOfConfig":"25"},{"size":14302,"mtime":1624814611697,"results":"42","hashOfConfig":"25"},{"size":4259,"mtime":1624815264015,"results":"43","hashOfConfig":"25"},{"size":1091,"mtime":1624815439267,"results":"44","hashOfConfig":"25"},{"size":979,"mtime":1624819586399,"results":"45","hashOfConfig":"25"},{"size":2786,"mtime":1624819820173,"results":"46","hashOfConfig":"25"},{"size":22329,"mtime":1624821537572,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ycgiur",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zeeshanpatel/flow/src/index.js",[],["108","109"],"/Users/zeeshanpatel/flow/src/reportWebVitals.js",[],"/Users/zeeshanpatel/flow/src/App.js",["110","111","112"],"import firebase from \"firebase\";\nimport { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { ChakraProvider, useFocusOnHide } from \"@chakra-ui/react\";\nimport { Login } from \"./components/Login\";\nimport { Home } from \"./components/Home\";\nimport { TakeABreak } from \"./components/TakeABreak\";\nimport { Work } from \"./components/Work.js\";\nimport { Chat } from \"./components/Chat\";\nimport { Landing } from \"./components/Landing\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB-TI-_gxPoEM-Pa3sEeEJDSUhEe4rzKMg\",\n  authDomain: \"flow-f03b7.firebaseapp.com\",\n});\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  let history = useHistory();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setIsSignedIn(!!user);\n    });\n  });\n\n  if (isSignedIn === true) {\n    return (\n      <ChakraProvider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n            <Route exact path=\"/\">\n              <Landing isSignedIn={isSignedIn}/>\n            </Route>\n            <Route exact path=\"/chat\">\n              <Chat />\n            </Route>\n            <Route exact path=\"/break\">\n              <TakeABreak />\n            </Route>\n            <Route exact path=\"/work\">\n              <Work />\n            </Route>\n          </Switch>\n        </Router>\n      </ChakraProvider>\n    );\n  } else {\n    return (\n      <ChakraProvider>\n        <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Landing isSignedIn={isSignedIn}/>\n          </Route>\n          <Route exact path=\"/login\">\n              <Login />\n          </Route>\n        </Switch>\n      </Router>\n      </ChakraProvider>\n    );\n  }\n}\n\nexport default App;\n","/Users/zeeshanpatel/flow/src/components/Home.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"/Users/zeeshanpatel/flow/src/components/Login.js",["128","129"],"import { Box, Heading, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport firebase from \"firebase\";\nimport { Card } from \"./Card\";\nimport { useHistory } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport Particles from \"react-particles-js\";\n\nexport const Login = () => {\n  let history = useHistory();\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => true,\n    },\n    signInSuccessUrl: \"/home\",\n  };\n\n  return (\n    <div>\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Box maxW=\"md\" mx=\"auto\">\n          <Heading\n            textAlign=\"center\"\n            size=\"3xl\"\n            fontWeight=\"extrabold\"\n            color=\"twitter.100\"\n          >\n            Flow\n          </Heading>\n          <br />\n          <Card rounded=\"xl\">\n            <Text\n              textAlign=\"center\"\n              bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n              bgClip=\"text\"\n              fontWeight=\"bold\"\n              fontSize=\"lg\"\n            >\n              Sign In to Your Account\n            </Text>\n            <SimpleGrid mt=\"6\" columns={1} spacing=\"3\">\n              <StyledFirebaseAuth\n                uiConfig={uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            </SimpleGrid>\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n","/Users/zeeshanpatel/flow/src/components/Card.js",[],"/Users/zeeshanpatel/flow/src/components/TakeABreak.js",["130","131","132","133","134","135","136","137"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Input, Box, Center, Heading, Button, Text } from \"@chakra-ui/react\";\nimport { CarouselDemo } from \"./CarouselDemo\";\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { SimpleGrid } from \"@chakra-ui/react\";\nimport ReactJkMusicPlayer from \"react-jinke-music-player\";\nimport \"react-jinke-music-player/assets/index.css\";\nimport { GifModal } from \"./GifModal\";\nimport { MeditateModal } from \"./MeditateModal\";\nimport Particles from \"react-particles-js\";\n\nconst giphyFetch = new GiphyFetch(\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\");\n\nexport const TakeABreak = () => {\n  const audioList1 = [\n    {\n      name: \"LoFi Hip Hop\",\n      singer: \"Chilled Cow\",\n      cover:\n        \"https://res.cloudinary.com/flow019/image/upload/v1624739457/flow_audios/Screen_Shot_2021-06-26_at_1.20.59_PM_sus7up.png\",\n      musicSrc:\n        \"https://res.cloudinary.com/flow019/video/upload/v1624739207/flow_audios/1_A.M_Study_Session_-_lofi_hip_hop_chill_beats_fajusr.mp3\",\n      // support async fetch music src. eg.\n      // musicSrc: async () => {\n      //   return await fetch('/api')\n      // },\n    },\n    {\n      name: \"Midnight City - LoFi Jazz\",\n      singer: \"The Jazz Hop Café\",\n      cover:\n        \"https://res.cloudinary.com/flow019/image/upload/v1624739975/flow_audios/Screen_Shot_2021-06-26_at_1.39.15_PM_wlgqdr.png\",\n      musicSrc:\n        \"https://res.cloudinary.com/flow019/video/upload/v1624739970/flow_audios/midnight_city._lofi___jazz_hop___chill_mix_dvroe0.mp3\",\n    },\n  ];\n  return (\n    <div>\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Box maxW=\"md\" mx=\"auto\">\n          <Center>\n            <Heading color=\"white\" fontSize=\"6xl\" fontWeight=\"extrabold\">\n              Take a Break\n            </Heading>\n          </Center>\n          <br />\n          <br />\n          <SimpleGrid columns={[1, 2]} gap=\"200px\">\n            <GifModal />\n            <MeditateModal />\n          </SimpleGrid>\n          <br />\n          <br />\n          <br />\n          <br />\n          <Center>\n            <Particles\n              width={1000}\n              height={500}\n              params={{\n                particles: {\n                  number: {\n                    value: 200,\n                  },\n                  size: {\n                    value: 5,\n                  },\n                  background: {\n                    color: {\n                      value: \"#0d47a1\",\n                    },\n                  },\n                },\n                interactivity: {\n                  events: {\n                    onhover: {\n                      enable: true,\n                      mode: \"repulse\",\n                    },\n                  },\n                },\n              }}\n            />\n          </Center>\n          <br />\n          <br />\n          <br />\n          <br />\n          <ReactJkMusicPlayer\n            theme={\"dark\"}\n            locale={\"en_US\"}\n            mode={\"full\"}\n            audioLists={audioList1}\n          />\n        </Box>\n      </Box>\n    </div>\n  );\n};","/Users/zeeshanpatel/flow/src/components/CarouselDemo.js",["138"],"import {\n    Grid, // our UI Component to display the results\n    SearchBar, // the search bar the user will type into\n    SearchContext, // the context that wraps and connects our components\n    SearchContextManager, // the context manager, includes the Context.Provider\n    SuggestionBar, // an optional UI component that displays trending searches and channel / username results\n    SearchTheme,\n} from '@giphy/react-components'\nimport { useContext } from 'react'\n// the search experience consists of the manager and its child components that use SearchContext\nexport const CarouselDemo = () => (\n    <SearchContextManager apiKey={\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\"} theme={\"dark\"}>\n        <Components />\n    </SearchContextManager>\n)\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n    const { fetchGifs, searchKey } = useContext(SearchContext)\n    return (\n        <>\n            <SearchBar />\n            <br />\n            <SuggestionBar />\n            <br />\n            <Grid key={searchKey} columns={2} width={525} fetchGifs={fetchGifs} />\n        </>\n    )\n}","/Users/zeeshanpatel/flow/src/components/GifModal.js",[],"/Users/zeeshanpatel/flow/src/components/MeditateModal.js",["139","140"],"import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Center,\n  Button,\n  Image,\n  Grid,\n  GridItem,\n  Text,\n  Box\n} from \"@chakra-ui/react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nexport const MeditateModal = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <div>\n      <Center>\n      <Box\n          as=\"button\"\n          borderRadius=\"xl\"\n          bg=\"twitter.400\"\n          color=\"white\"\n          px={116}\n          h={100}\n          onClick={onOpen}\n        >\n          <Text fontSize=\"xl\" fontWeight=\"extrabold\">Meditate</Text>\n        </Box>\n      </Center>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        motionPreset=\"slideInBottom\"\n        size={\"xl\"}\n        scrollBehavior={\"inside\"}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Curated Medidation Tutorials</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <br />\n            <Center>\n                <Text fontFamily=\"fantasy\" fontSize=\"xl\" fontWeight=\"bold\">Tutorial 1: The Present</Text>\n            </Center>\n            <br />\n            <Center>\n            <Image\n              src=\"https://wallpaperaccess.com/full/1933087.jpg\"\n            //   boxSize=\"200px\"\n            />\n            </Center>\n            <br />\n            <br />\n            <Center>\n            <ReactAudioPlayer\n              src=\"https://assets.calm.com/1f2a60e567945384b84a7aa3c6949b42.m4a\"\n              controls\n            />\n            </Center>\n            <br />\n            <br />\n            <br />\n            <Center>\n                <Text fontFamily=\"fantasy\" fontSize=\"xl\" fontWeight=\"bold\">Tutorial 2: The Mind</Text>\n            </Center>\n            <br />\n            <Center>\n            <Image\n              src=\"https://wallpapercave.com/wp/qtzZvul.jpg\"\n            //   boxSize=\"200px\"\n            />\n            </Center>\n            <br />\n            <br />\n            <Center>\n            <ReactAudioPlayer\n              src=\"https://res.cloudinary.com/flow019/video/upload/v1624742508/flow_audios/10-Minute_Daily_Meditation_elrygn.mp3\"\n              controls\n            />\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n","/Users/zeeshanpatel/flow/src/components/Chat.js",["141","142"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport { Box, Heading, Center, Input, Button, Text } from \"@chakra-ui/react\";\nimport { Card } from \"./Card\";\nimport { ChatBox } from \"./ChatBox\";\nexport const Chat = () => {\n  let [humanMessages, setHumanMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [aiMessages, setAiMessages] = useState([]);\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: firebase.auth().currentUser.getIdToken(),\n    email: firebase.auth().currentUser.email,\n  };\n  let handleMessage = (e) => {\n    setMessage(e.target.value);\n  };\n  let sendMessage = (e) => {\n    let messageText = {\n      header: \"Access-Control-Allow-Origin\",\n      text: message,\n    };\n    setHumanMessages([...humanMessages, message]);\n    axios.post(\"http://localhost:5000/home\", user).then((response) => {\n      axios.post(\"http://localhost:5000/chat\", messageText).then((res) => {\n        setAiMessages([...aiMessages, res.data.data]);\n      });\n    });\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Box maxW=\"md\" mx=\"auto\">\n          <Center>\n            <Heading color=\"white\" fontSize=\"5xl\" fontWeight=\"extrabold\">\n              AI Chat Therapy\n            </Heading>\n          </Center>\n          <br />\n          <br />\n          <Card>\n          <ChatBox humanMessages={humanMessages} aiMessages={aiMessages}/>\n          <br />\n          <br />\n          <br />\n          <br />\n          <Input\n            value={message}\n            onChange={handleMessage}\n            variant=\"filled\"\n            placeholder=\"Write a message to our AI Therapist\"\n          />\n          <br />\n          <br />\n          <Center>\n            <Button onClick={sendMessage} colorScheme={\"facebook\"}>Send</Button>\n          </Center>\n          <br />\n          <br />\n          </Card>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n","/Users/zeeshanpatel/flow/src/components/ChatBox.js",["143","144","145","146","147"],"import { Card } from \"./Card\";\nimport { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { StreamChat } from \"stream-chat\";\nimport { ChatBubble, Message } from \"react-chat-ui\";\nimport \"./chat.css\";\n\nexport const ChatBox = ({ humanMessages, aiMessages }) => {\n  const client = StreamChat.getInstance(\"2mfepnmrh4rw\");\n  let allMessages = [];\n  if (humanMessages.length > 0) {\n    for (let i = 0; i < humanMessages.length; i++) {\n      allMessages.push([humanMessages[i], aiMessages[i]]);\n    }\n  }\n  return (\n    <div>\n        <Center>\n          <Heading>Chat</Heading>\n        </Center>\n        {/* <div class=\"chat\"> */}\n          {allMessages.map((message) => (\n            <div>\n              <div class=\"mine messages\">\n                <div class=\"message last\">Human: {message[0]}</div>\n              </div>\n              <div class=\"yours messages\">\n                <div class=\"message\">{message[1]}</div>\n              </div>\n              {/* <Text>Human: {message[0]}</Text> */}\n              {/* <Text>{message[1]}</Text> */}\n            </div>\n          ))}\n        {/* </div> */}\n    </div>\n  );\n};\n","/Users/zeeshanpatel/flow/src/components/Work.js",["148","149","150","151","152","153","154","155","156"],"/Users/zeeshanpatel/flow/src/components/CountdownTimer.js",["157","158"],"import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./timer.css\";\nimport { Alert } from \"./Alert.js\";\nimport { SliderInput } from \"./SliderInput.js\";\nimport { Card } from \"./Card\";\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\nlet timerSecs;\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6,\n};\n\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\n\nexport function CountdownTimer() {\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + 1000;\n\n  const remainingTime = endTime - stratTime;\n\n  return (\n    <Card>\n      <div className=\"CountdownTimer\">\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#D14081\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\n          }\n        </CountdownCircleTimer>\n        {/* <Alert /> */}\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#EF798A\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n      <br />\n      <br />\n\n      <SliderInput></SliderInput>\n\n      <br />\n      <SliderInput></SliderInput>\n      <br />\n      <SliderInput></SliderInput>\n    </Card>\n  );\n}\n","/Users/zeeshanpatel/flow/src/components/Tasks.js",["159","160","161","162","163","164","165","166","167"],"import React from \"react\";\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\";\nimport { Input, Button, Box, Heading, Progress } from \"@chakra-ui/react\";\nimport { CheckList } from \"./CheckList\";\n\nexport const Tasks = () => {\n\n\n\n\n\n\n\n  \n  // let handleChange = (event) => setTask(event.target.value);\n  // let [task, setTask] = React.useState(\"\");\n  // let [tasks, setTasks] = React.useState([]);\n  // let count = 0\n  // let progress = (count/tasks.length) * 100\n  // let addTask = (e) => {\n  //   setTask(task);\n  //   setTasks([...tasks, task]);\n  // };\n  \n  // let handleCheckbox = (e) => {\n  //   let val = e.target.value\n  //   if (val === true){\n  //     count = count + 1\n  //   }\n  // }\n\n  // return (\n  //   <div>\n  //     <Heading>Task List</Heading>\n  //     <br />\n  //     <Progress value={progress} />\n  //     <br />\n  //     <Input\n  //       placeholder=\"Enter a task\"\n  //       variant=\"filled\"\n  //       value={task}\n  //       onChange={handleChange}\n  //     />\n  //     <br />\n  //     <br />\n  //     <Button colorScheme=\"facebook\" onClick={addTask}>\n  //       Submit\n  //     </Button>\n  //     <br />\n  //     <br />\n  //     <div>\n  //       {tasks.map((task) => (\n  //         <div>\n  //           <Checkbox value={true} default IsUnchecked onChange={handleCheckbox}>\n  //             {task}\n  //           </Checkbox>\n  //           <br />\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n};\n","/Users/zeeshanpatel/flow/src/components/Alert.js",[],"/Users/zeeshanpatel/flow/src/components/CheckList.js",["168"],"import React from \"react\";\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\";\n\nexport const CheckList = ({ tasks }) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <div>\n        <Checkbox default IsUnchecked>\n          {task}\n        </Checkbox>\n        <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n","/Users/zeeshanpatel/flow/src/components/Landing.js",["169","170","171","172","173","174"],"import React from \"react\";\nimport {\n  chakra,\n  Box,\n  useColorModeValue,\n  Icon,\n  Image,\n  HStack,\n  Stack,\n  Button,\n  Flex,\n  SimpleGrid,\n  GridItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nexport const Landing = ({ isSignedIn }) => {\n  let history = useHistory();\n\n  const goToLogin = () => {\n    history.push(\"/login\");\n  };\n  const goToFeed = () => {\n    history.push(\"/home\");\n  };\n\n  const bg1 = useColorModeValue(\"gray.900\", \"white\");\n  const bg2 = useColorModeValue(\"brand.600\", \"brand.400\");\n\n  const Feature = (props) => {\n    return (\n      <Flex>\n        <Flex shrink={0}>\n          <Icon\n            boxSize={5}\n            mt={1}\n            mr={2}\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </Icon>\n        </Flex>\n        <Box ml={6}>\n          <chakra.dt fontSize=\"lg\" fontWeight=\"bold\" lineHeight=\"6\">\n            {props.title}\n          </chakra.dt>\n          <chakra.dd mt={2}>{props.children}</chakra.dd>\n        </Box>\n      </Flex>\n    );\n  };\n\n  if (isSignedIn === true) {\n    return (\n      <div>\n        <Box\n          minH=\"5xl\"\n          py=\"12\"\n          px={{\n            base: \"4\",\n            lg: \"8\",\n          }}\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n          alignContent=\"center\"\n        >\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Box pos=\"relative\" overflow=\"hidden\">\n            <Box maxW=\"7xl\" mx=\"auto\">\n              <Box\n                pos=\"relative\"\n                pb={{ base: 8, sm: 16, md: 20, lg: 28, xl: 32 }}\n                w=\"full\"\n                border=\"solid 1px transparent\"\n              >\n                <Box\n                  mt={10}\n                  mx=\"auto\"\n                  maxW={{ base: \"7xl\" }}\n                  px={{ base: 4, sm: 6, lg: 8 }}\n                  mt={{ base: 12, md: 16, lg: 20, xl: 28 }}\n                >\n                  <Box\n                    textAlign=\"center\"\n                    w={{ base: \"full\", md: 11 / 12, xl: 8 / 12 }}\n                    mx=\"auto\"\n                  >\n                    <chakra.h1\n                      fontSize={{ base: \"4xl\", sm: \"5xl\", md: \"6xl\" }}\n                      letterSpacing=\"tight\"\n                      lineHeight=\"short\"\n                      fontWeight=\"extrabold\"\n                      color=\"white\"\n                    >\n                      <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        Manage Your Time, Productivity, and Stress with{\" \"}\n                      </chakra.span>\n                      <chakra.span\n                        display={{ base: \"block\", xl: \"inline\" }}\n                        color=\"twitter.100\"\n                      >\n                        Flow\n                      </chakra.span>\n                    </chakra.h1>\n                    <chakra.p\n                      mt={{ base: 3, sm: 5, md: 8 }}\n                      mx={12}\n                      mb={10}\n                      fontSize={{ base: \"lg\", md: \"xl\" }}\n                      color=\"facebook.100\"\n                      lineHeight=\"base\"\n                    >\n                      A platform designed to help alleviate stress while maximizing \n                      your productivity.\n                    </chakra.p>\n                    <Stack\n                      direction={{ base: \"column\", sm: \"column\", md: \"row\" }}\n                      mb={{ base: 4, md: 8 }}\n                      spacing={{ base: 4, md: 2 }}\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        size=\"md\"\n                        variant=\"ghost\"\n                        bgGradient=\"linear(to-r, blue.100, blue.300)\"\n                        onClick={goToFeed}\n                      >\n                        {firebase.auth().currentUser.displayName}'s Flow\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <br />\n        <br />\n        <Text\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n        >\n          Features\n        </Text>\n        <Flex p={20} w=\"auto\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            shadow=\"3xl\"\n            px={8}\n            py={20}\n            mx=\"auto\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            rounded=\"lg\"\n          >\n            <SimpleGrid\n              alignItems=\"center\"\n              columns={{ base: 1, lg: 3 }}\n              spacingY={{ base: 10, lg: 32 }}\n              spacingX={{ base: 10, lg: 24 }}\n            >\n              <Box alignSelf=\"start\" color=\"white\">\n                <chakra.h2\n                  mb={3}\n                  fontSize={{ base: \"3xl\", md: \"4xl\" }}\n                  fontWeight=\"extrabold\"\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                  lineHeight=\"shorter\"\n                  letterSpacing=\"tight\"\n                >\n                  Improve Your Mental Health\n                </chakra.h2>\n                <chakra.p\n                  mb={6}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                >\n                  Flow improves your mental health by boosting your productivity \n                  and providing outlets to reduce mental stress.\n                </chakra.p>\n              </Box>\n              <GridItem colSpan={2} color=\"white\">\n                <Stack\n                  spacing={{ base: 10, md: 0 }}\n                  display={{ md: \"grid\" }}\n                  gridTemplateColumns={{ md: \"repeat(2,1fr)\" }}\n                  gridColumnGap={{ md: 8 }}\n                  gridRowGap={{ md: 10 }}\n                >\n                  <Feature title=\"AI Chat Therapy\">\n                    Talk to our AI therapist that is powered by GPT-3 whenever you're\n                    in need of emotional or mental support. Or just drop into the chat\n                    if you're bored; our therapist can be a great friend too 🤖{\" \"}\n                  </Feature>\n                  <Feature title=\"Study Space\">\n                    Dive into our simple dashboard that includes a pomodoro timer,\n                    a customizable task list, and some chill LoFi music. We designed\n                    this study space to streamline your workflow ✍️ \n                  </Feature>\n                  <Feature title=\"Take a Break\">\n                    {\" \"}\n                    Relaxing is a key part of everyone's workflow. Flow provides\n                    various outlets for alleviating stress such as meditation, music,\n                    and more 😌\n                  </Feature>\n                  <Feature title=\"Security\">\n                    {\" \"}\n                    Login instantaneously using Google, Facebook, or\n                    your email. We will never share your data with\n                    third-party services. Additionally, your therapist\n                    chat history is not saved to maintain anonymity. 🔒\n                  </Feature>\n                </Stack>\n              </GridItem>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Box\n          minH=\"5xl\"\n          py=\"12\"\n          px={{\n            base: \"4\",\n            lg: \"8\",\n          }}\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n          alignContent=\"center\"\n        >\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Box pos=\"relative\" overflow=\"hidden\">\n            <Box maxW=\"7xl\" mx=\"auto\">\n              <Box\n                pos=\"relative\"\n                pb={{ base: 8, sm: 16, md: 20, lg: 28, xl: 32 }}\n                w=\"full\"\n                border=\"solid 1px transparent\"\n              >\n                <Box\n                  mt={10}\n                  mx=\"auto\"\n                  maxW={{ base: \"7xl\" }}\n                  px={{ base: 4, sm: 6, lg: 8 }}\n                  mt={{ base: 12, md: 16, lg: 20, xl: 28 }}\n                >\n                  <Box\n                    textAlign=\"center\"\n                    w={{ base: \"full\", md: 11 / 12, xl: 8 / 12 }}\n                    mx=\"auto\"\n                  >\n                    <chakra.h1\n                      fontSize={{ base: \"4xl\", sm: \"5xl\", md: \"6xl\" }}\n                      letterSpacing=\"tight\"\n                      lineHeight=\"short\"\n                      fontWeight=\"extrabold\"\n                      color=\"white\"\n                    >\n                      <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        Manage Your Time, Productivity, and Stress with{\" \"}\n                      </chakra.span>\n                      <chakra.span\n                        display={{ base: \"block\", xl: \"inline\" }}\n                        color=\"twitter.100\"\n                      >\n                        Flow\n                      </chakra.span>\n                    </chakra.h1>\n                    <chakra.p\n                      mt={{ base: 3, sm: 5, md: 8 }}\n                      mx={12}\n                      mb={10}\n                      fontSize={{ base: \"lg\", md: \"xl\" }}\n                      color=\"facebook.100\"\n                      lineHeight=\"base\"\n                    >\n                      A platform designed to help alleviate stress while maximizing \n                      your productivity.\n                    </chakra.p>\n                    <Stack\n                      direction={{ base: \"column\", sm: \"column\", md: \"row\" }}\n                      mb={{ base: 4, md: 8 }}\n                      spacing={{ base: 4, md: 2 }}\n                      justifyContent=\"center\"\n                    >\n                      <Button\n                        size=\"md\"\n                        variant=\"ghost\"\n                        bgGradient=\"linear(to-r, blue.100, blue.300)\"\n                        onClick={goToLogin}\n                      >\n                        Login to Flow\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <br />\n        <br />\n        <Text\n          bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n          bgClip=\"text\"\n          fontSize=\"6xl\"\n          fontWeight=\"extrabold\"\n          textAlign=\"center\"\n        >\n          Features\n        </Text>\n        <Flex p={20} w=\"auto\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            shadow=\"3xl\"\n            px={8}\n            py={20}\n            mx=\"auto\"\n            bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n            rounded=\"lg\"\n          >\n            <SimpleGrid\n              alignItems=\"center\"\n              columns={{ base: 1, lg: 3 }}\n              spacingY={{ base: 10, lg: 32 }}\n              spacingX={{ base: 10, lg: 24 }}\n            >\n              <Box alignSelf=\"start\" color=\"white\">\n                <chakra.h2\n                  mb={3}\n                  fontSize={{ base: \"3xl\", md: \"4xl\" }}\n                  fontWeight=\"extrabold\"\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                  lineHeight=\"shorter\"\n                  letterSpacing=\"tight\"\n                >\n                  Improve Your Mental Health\n                </chakra.h2>\n                <chakra.p\n                  mb={6}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  textAlign={{ base: \"center\", sm: \"left\" }}\n                >\n                  Flow improves your mental health by boosting your productivity \n                  and providing outlets to reduce mental stress.\n                </chakra.p>\n              </Box>\n              <GridItem colSpan={2} color=\"white\">\n                <Stack\n                  spacing={{ base: 10, md: 0 }}\n                  display={{ md: \"grid\" }}\n                  gridTemplateColumns={{ md: \"repeat(2,1fr)\" }}\n                  gridColumnGap={{ md: 8 }}\n                  gridRowGap={{ md: 10 }}\n                >\n                  <Feature title=\"AI Chat Therapy\">\n                    Talk to our AI therapist that is powered by GPT-3 whenever you're\n                    in need of emotional or mental support. Or just drop into the chat\n                    if you're bored; our therapist can be a great friend too 🤖{\" \"}\n                  </Feature>\n                  <Feature title=\"Study Space\">\n                    Dive into our simple dashboard that includes a pomodoro timer,\n                    a customizable task list, and some chill LoFi music. We designed\n                    this study space to streamline your workflow ✍️ \n                  </Feature>\n                  <Feature title=\"Take a Break\">\n                    {\" \"}\n                    Relaxing is a key part of everyone's workflow. Flow provides\n                    various outlets for alleviating stress such as meditation, music,\n                    and more 😌\n                  </Feature>\n                  <Feature title=\"Security\">\n                    {\" \"}\n                    Login instantaneously using Google, Facebook, or\n                    your email. We will never share your data with\n                    third-party services. Additionally, your therapist\n                    chat history is not saved to maintain anonymity. 🔒\n                  </Feature>\n                </Stack>\n              </GridItem>\n            </SimpleGrid>\n          </Box>\n        </Flex>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n};","/Users/zeeshanpatel/flow/src/components/Navbar.js",["175"],"import React from \"react\";\nimport firebase from \"firebase\";\nimport {\n  chakra,\n  Box,\n  Flex,\n  useColorModeValue,\n  VisuallyHidden,\n  HStack,\n  Button,\n  useDisclosure,\n  VStack,\n  IconButton,\n  CloseButton,\n  Avatar,\n  AvatarBadge,\n  Link,\n} from \"@chakra-ui/react\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport ContactlessIcon from \"@material-ui/icons/Contactless\";\nimport { useHistory } from \"react-router\";\n\nexport const Navbar = () => {\n  const bg = useColorModeValue(\"white\", \"gray.800\");\n  const mobileNav = useDisclosure();\n  let history = useHistory();\n  let goToHome = () => {\n    history.push(\"/home\");\n  };\n  return (\n    <React.Fragment>\n      <chakra.header\n        bg={bg}\n        w=\"full\"\n        px={{ base: 2, sm: 4 }}\n        py={4}\n        shadow=\"md\"\n      >\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mx=\"auto\">\n          <Flex>\n            <chakra.a href=\"/\" title=\"Flow\" display=\"flex\" alignItems=\"center\">\n              <ContactlessIcon fontSize=\"large\" htmlColor=\"#0063d1\" />\n            </chakra.a>\n            <chakra.h1 fontSize=\"2xl\" fontWeight=\"bold\" ml=\"2\">\n              Flow\n            </chakra.h1>\n          </Flex>\n          <HStack display=\"flex\" alignItems=\"center\" spacing={1}>\n            <HStack\n              spacing={1}\n              mr={1}\n              color=\"brand.500\"\n              display={{ base: \"none\", md: \"inline-flex\" }}\n            >\n              <Link href=\"/home\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Home\n                </Button>\n              </Link>\n              <Link href=\"/chat\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  AI Therapy\n                </Button>\n              </Link>\n              <Link href=\"/work\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Work\n                </Button>\n              </Link>\n              <Link href=\"/break\">\n                <Button variant=\"ghost\" colorScheme=\"messenger\">\n                  Break\n                </Button>\n              </Link>\n            </HStack>\n            <Avatar\n              size=\"sm\"\n              name={firebase.auth().currentUser.displayName}\n              src={firebase.auth().currentUser.photoURL}\n              onClick={goToHome}\n            >\n              <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n            </Avatar>\n            <Box display={{ base: \"inline-flex\", md: \"none\" }}>\n              <IconButton\n                display={{ base: \"flex\", md: \"none\" }}\n                aria-label=\"Open menu\"\n                fontSize=\"20px\"\n                color={useColorModeValue(\"gray.800\", \"inherit\")}\n                variant=\"ghost\"\n                icon={<AiOutlineMenu />}\n                onClick={mobileNav.onOpen}\n              />\n\n              <VStack\n                pos=\"absolute\"\n                top={0}\n                left={0}\n                right={0}\n                display={mobileNav.isOpen ? \"flex\" : \"none\"}\n                flexDirection=\"column\"\n                p={2}\n                pb={4}\n                m={2}\n                bg={bg}\n                spacing={3}\n                rounded=\"sm\"\n                shadow=\"sm\"\n              >\n                <CloseButton\n                  aria-label=\"Close menu\"\n                  onClick={mobileNav.onClose}\n                />\n\n                <Link href=\"/home\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Home\n                  </Button>\n                </Link>\n                <Link href=\"/chat\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    AI Therapy\n                  </Button>\n                </Link>\n                <Link href=\"/work\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Work\n                  </Button>\n                </Link>\n                <Link href=\"/break\">\n                  <Button variant=\"ghost\" colorScheme=\"messenger\">\n                    Break\n                  </Button>\n                </Link>\n              </VStack>\n            </Box>\n          </HStack>\n        </Flex>\n      </chakra.header>\n    </React.Fragment>\n  );\n};\n","/Users/zeeshanpatel/flow/src/components/SliderInput.js",[],"/Users/zeeshanpatel/flow/src/components/AddTodo.js",[],"/Users/zeeshanpatel/flow/src/components/TodoList.js",["176","177","178"],"import {\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  Badge,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Input,\n  Divider,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React, { useState } from \"react\";\n\nexport function TodoList({ todos, deleteTodo, editTodo }) {\n  const [todo, setTodo] = useState(\"\");\n  const [modalValue, setModalValue] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  function onClose() {\n    setIsOpen(false);\n  }\n\n  function handleEditClick(todo) {\n    setIsOpen(true);\n    // we've set the passed todo to modal value\n    setModalValue(todo);\n    console.log(todo);\n  }\n\n  function handleEditInputChange(e, id) {\n    setModalValue({ ...modalValue, text: e.target.value });\n    console.log(modalValue, id);\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n\n    editTodo(modalValue.id, modalValue);\n    setModalValue(\"\");\n    setIsOpen(false);\n  }\n\n  return !todos.length ? (\n    <Badge colorScheme=\"purple\" variant=\"outline\" borderRadius=\"4\" p=\"4\" m=\"5\">\n      No tasks for Today!!\n    </Badge>\n  ) : (\n    <VStack>\n      {todos.map((todo) => (\n        <HStack spacing=\"24px\" w=\"320px\">\n          <Flex p={6} w=\"300px\" h=\"50px\" justifyContent=\"space-between\">\n\n            <Text>{todo.text}</Text>\n            <Flex w=\"10px\">\n              <DeleteIcon\n                color=\"red.500\"\n                mr=\"2\"\n                onClick={() => deleteTodo(todo.id)}\n              />\n              <EditIcon onClick={() => handleEditClick(todo)} />\n            </Flex>\n            {/* modal for editing a todo */}\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Edit Your Task</ModalHeader>\n                <ModalCloseButton />\n                <form onSubmit={handleEditSubmit}>\n                  <ModalBody>\n                    <Input\n                      value={modalValue.text}\n                      key={modalValue.id}\n                      variant=\"outline\"\n                      type=\"text\"\n                      placeholder=\"Update your todo...\"\n                      onChange={handleEditInputChange}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button colorScheme=\"facebook\" mr={3} onClick={onClose}>\n                      Close\n                    </Button>\n                    <Button type=\"submit\" colorScheme=\"facebook\" mr={3}>\n                      Update\n                    </Button>\n                  </ModalFooter>\n                </form>\n              </ModalContent>\n            </Modal>\n          </Flex>\n        </HStack>\n      ))}\n    </VStack>\n  );\n}\n","/Users/zeeshanpatel/flow/src/components/Timer.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":11},{"ruleId":"183","severity":1,"message":"187","line":10,"column":26,"nodeType":"185","messageId":"186","endLine":10,"endColumn":40},{"ruleId":"183","severity":1,"message":"188","line":26,"column":7,"nodeType":"185","messageId":"186","endLine":26,"endColumn":14},{"ruleId":"183","severity":1,"message":"189","line":2,"column":21,"nodeType":"185","messageId":"186","endLine":2,"endColumn":29},{"ruleId":"183","severity":1,"message":"190","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":20},{"ruleId":"183","severity":1,"message":"191","line":9,"column":3,"nodeType":"185","messageId":"186","endLine":9,"endColumn":11},{"ruleId":"183","severity":1,"message":"192","line":12,"column":3,"nodeType":"185","messageId":"186","endLine":12,"endColumn":8},{"ruleId":"183","severity":1,"message":"193","line":13,"column":3,"nodeType":"185","messageId":"186","endLine":13,"endColumn":9},{"ruleId":"183","severity":1,"message":"194","line":14,"column":3,"nodeType":"185","messageId":"186","endLine":14,"endColumn":7},{"ruleId":"183","severity":1,"message":"195","line":15,"column":3,"nodeType":"185","messageId":"186","endLine":15,"endColumn":8},{"ruleId":"183","severity":1,"message":"196","line":16,"column":3,"nodeType":"185","messageId":"186","endLine":16,"endColumn":7},{"ruleId":"183","severity":1,"message":"197","line":17,"column":3,"nodeType":"185","messageId":"186","endLine":17,"endColumn":9},{"ruleId":"183","severity":1,"message":"198","line":19,"column":3,"nodeType":"185","messageId":"186","endLine":19,"endColumn":7},{"ruleId":"183","severity":1,"message":"199","line":20,"column":3,"nodeType":"185","messageId":"186","endLine":20,"endColumn":11},{"ruleId":"183","severity":1,"message":"200","line":22,"column":8,"nodeType":"185","messageId":"186","endLine":22,"endColumn":17},{"ruleId":"183","severity":1,"message":"201","line":29,"column":9,"nodeType":"185","messageId":"186","endLine":29,"endColumn":20},{"ruleId":"202","severity":1,"message":"203","line":59,"column":6,"nodeType":"204","endLine":59,"endColumn":8,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":107,"column":19,"nodeType":"208","endLine":107,"endColumn":67},{"ruleId":"183","severity":1,"message":"200","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":9,"column":7,"nodeType":"185","messageId":"186","endLine":9,"endColumn":14},{"ruleId":"183","severity":1,"message":"189","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":18},{"ruleId":"183","severity":1,"message":"209","line":1,"column":20,"nodeType":"185","messageId":"186","endLine":1,"endColumn":29},{"ruleId":"183","severity":1,"message":"210","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":13},{"ruleId":"183","severity":1,"message":"192","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":15},{"ruleId":"183","severity":1,"message":"211","line":3,"column":39,"nodeType":"185","messageId":"186","endLine":3,"endColumn":45},{"ruleId":"183","severity":1,"message":"212","line":3,"column":47,"nodeType":"185","messageId":"186","endLine":3,"endColumn":51},{"ruleId":"183","severity":1,"message":"213","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":22},{"ruleId":"183","severity":1,"message":"214","line":13,"column":7,"nodeType":"185","messageId":"186","endLine":13,"endColumn":17},{"ruleId":"183","severity":1,"message":"215","line":7,"column":5,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"198","line":14,"column":3,"nodeType":"185","messageId":"186","endLine":14,"endColumn":7},{"ruleId":"183","severity":1,"message":"199","line":15,"column":3,"nodeType":"185","messageId":"186","endLine":15,"endColumn":11},{"ruleId":"183","severity":1,"message":"209","line":1,"column":20,"nodeType":"185","messageId":"186","endLine":1,"endColumn":29},{"ruleId":"183","severity":1,"message":"212","line":4,"column":47,"nodeType":"185","messageId":"186","endLine":4,"endColumn":51},{"ruleId":"183","severity":1,"message":"216","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":14},{"ruleId":"183","severity":1,"message":"212","line":2,"column":27,"nodeType":"185","messageId":"186","endLine":2,"endColumn":31},{"ruleId":"183","severity":1,"message":"217","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":20},{"ruleId":"183","severity":1,"message":"218","line":4,"column":22,"nodeType":"185","messageId":"186","endLine":4,"endColumn":29},{"ruleId":"183","severity":1,"message":"219","line":8,"column":9,"nodeType":"185","messageId":"186","endLine":8,"endColumn":15},{"ruleId":"183","severity":1,"message":"220","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":24},{"ruleId":"183","severity":1,"message":"221","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":15},{"ruleId":"183","severity":1,"message":"197","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":9},{"ruleId":"183","severity":1,"message":"222","line":13,"column":3,"nodeType":"185","messageId":"186","endLine":13,"endColumn":8},{"ruleId":"183","severity":1,"message":"223","line":15,"column":3,"nodeType":"185","messageId":"186","endLine":15,"endColumn":7},{"ruleId":"183","severity":1,"message":"196","line":16,"column":3,"nodeType":"185","messageId":"186","endLine":16,"endColumn":7},{"ruleId":"183","severity":1,"message":"224","line":17,"column":3,"nodeType":"185","messageId":"186","endLine":17,"endColumn":8},{"ruleId":"183","severity":1,"message":"225","line":29,"column":9,"nodeType":"185","messageId":"186","endLine":29,"endColumn":14},{"ruleId":"183","severity":1,"message":"226","line":31,"column":10,"nodeType":"185","messageId":"186","endLine":31,"endColumn":21},{"ruleId":"183","severity":1,"message":"227","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":15},{"ruleId":"183","severity":1,"message":"228","line":11,"column":5,"nodeType":"185","messageId":"186","endLine":11,"endColumn":14},{"ruleId":"183","severity":1,"message":"229","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"230","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":18},{"ruleId":"183","severity":1,"message":"231","line":2,"column":20,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"192","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":15},{"ruleId":"183","severity":1,"message":"211","line":3,"column":17,"nodeType":"185","messageId":"186","endLine":3,"endColumn":23},{"ruleId":"183","severity":1,"message":"232","line":3,"column":25,"nodeType":"185","messageId":"186","endLine":3,"endColumn":28},{"ruleId":"183","severity":1,"message":"233","line":3,"column":30,"nodeType":"185","messageId":"186","endLine":3,"endColumn":37},{"ruleId":"183","severity":1,"message":"234","line":3,"column":39,"nodeType":"185","messageId":"186","endLine":3,"endColumn":47},{"ruleId":"183","severity":1,"message":"235","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":19},{"ruleId":"183","severity":1,"message":"231","line":2,"column":20,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"195","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":8},{"ruleId":"183","severity":1,"message":"236","line":8,"column":3,"nodeType":"185","messageId":"186","endLine":8,"endColumn":9},{"ruleId":"183","severity":1,"message":"237","line":29,"column":9,"nodeType":"185","messageId":"186","endLine":29,"endColumn":12},{"ruleId":"183","severity":1,"message":"238","line":30,"column":9,"nodeType":"185","messageId":"186","endLine":30,"endColumn":12},{"ruleId":"239","severity":1,"message":"240","line":93,"column":19,"nodeType":"241","endLine":93,"endColumn":60},{"ruleId":"239","severity":1,"message":"240","line":271,"column":19,"nodeType":"241","endLine":271,"endColumn":60},{"ruleId":"183","severity":1,"message":"242","line":8,"column":3,"nodeType":"185","messageId":"186","endLine":8,"endColumn":17},{"ruleId":"183","severity":1,"message":"243","line":16,"column":3,"nodeType":"185","messageId":"186","endLine":16,"endColumn":10},{"ruleId":"183","severity":1,"message":"244","line":22,"column":10,"nodeType":"185","messageId":"186","endLine":22,"endColumn":14},{"ruleId":"183","severity":1,"message":"245","line":22,"column":16,"nodeType":"185","messageId":"186","endLine":22,"endColumn":23},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useFocusOnHide' is defined but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'useColorModeValue' is defined but never used.","'Textarea' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'Flex' is defined but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'chakra' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Particles' is defined but never used.","'tsParticles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["248"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Text' is defined but never used.","'CarouselDemo' is defined but never used.","'giphyFetch' is assigned a value but never used.","'SearchTheme' is defined but never used.","'Card' is defined but never used.","'ChatBubble' is defined but never used.","'Message' is defined but never used.","'client' is assigned a value but never used.","'CountdownTimer' is defined but never used.","'Tasks' is defined but never used.","'Stack' is defined but never used.","'Icon' is defined but never used.","'Badge' is defined but never used.","'topBg' is assigned a value but never used.","'bottomBgHex' is assigned a value but never used.","'Alert' is defined but never used.","'timerSecs' is defined but never used.","'React' is defined but never used.","'Checkbox' is defined but never used.","'CheckboxGroup' is defined but never used.","'Box' is defined but never used.","'Heading' is defined but never used.","'Progress' is defined but never used.","'CheckList' is defined but never used.","'HStack' is defined but never used.","'bg1' is assigned a value but never used.","'bg2' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'VisuallyHidden' is defined but never used.","'Divider' is defined but never used.","'todo' is assigned a value but never used.","'setTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},"Update the dependencies array to be: [user]",{"range":"251","text":"252"},[1205,1207],"[user]"]