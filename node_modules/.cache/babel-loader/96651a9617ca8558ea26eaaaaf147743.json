{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/flow/src/components/ChatBox.js\";\nimport { Card } from \"./Card\";\nimport { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { StreamChat } from \"stream-chat\";\nimport { ChatBubble, Message } from 'react-chat-ui';\nimport \"stream-chat-react/dist/css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatBox = ({\n  humanMessages,\n  aiMessages\n}) => {\n  const client = StreamChat.getInstance(\"2mfepnmrh4rw\");\n  let allMessages = [];\n\n  if (humanMessages.length > 0) {\n    for (let i = 0; i < humanMessages.length; i++) {\n      allMessages.push([new Message(i, humanMessages[i]), new Message(i, aiMessages[i])]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), allMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ChatBubble, {\n          message: message[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatBubble, {\n          message: message[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/ChatBox.js"],"names":["Card","Center","Heading","Text","StreamChat","ChatBubble","Message","ChatBox","humanMessages","aiMessages","client","getInstance","allMessages","length","i","push","map","message"],"mappings":";AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,kBAAtC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,eAApC;AACA,OAAO,sCAAP;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AACxD,QAAMC,MAAM,GAAGN,UAAU,CAACO,WAAX,CAAuB,cAAvB,CAAf;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIJ,aAAa,CAACK,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,aAAa,CAACK,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC7CF,MAAAA,WAAW,CAACG,IAAZ,CAAiB,CAAC,IAAIT,OAAJ,CAAYQ,CAAZ,EAAeN,aAAa,CAACM,CAAD,CAA5B,CAAD,EAAmC,IAAIR,OAAJ,CAAYQ,CAAZ,EAAeL,UAAU,CAACK,CAAD,CAAzB,CAAnC,CAAjB;AACD;AACF;;AACD,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,MAAD;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGF,WAAW,CAACI,GAAZ,CAAiBC,OAAD,iBACf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBM;KAAMV,O","sourcesContent":["import { Card } from \"./Card\";\nimport { Center, Heading, Text } from \"@chakra-ui/react\";\nimport { StreamChat } from \"stream-chat\";\nimport { ChatBubble, Message } from 'react-chat-ui';\nimport \"stream-chat-react/dist/css/index.css\";\n\nexport const ChatBox = ({ humanMessages, aiMessages }) => {\n  const client = StreamChat.getInstance(\"2mfepnmrh4rw\");\n  let allMessages = [];\n  if (humanMessages.length > 0) {\n    for (let i = 0; i < humanMessages.length; i++) {\n      allMessages.push([new Message(i, humanMessages[i]), new Message(i, aiMessages[i])]);\n    }\n  }\n  return (\n    <div>\n      <Card>\n        <Center>\n          <Heading>Chat</Heading>\n        </Center>\n        {allMessages.map((message) => (\n          <div>\n            <ChatBubble message={message[0]}></ChatBubble>\n            <ChatBubble message={message[1]}></ChatBubble>\n            {/* <Text>Human: {message[0]}</Text>\n            <Text>{message[1]}</Text> */}\n          </div>\n        ))}\n      </Card>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}