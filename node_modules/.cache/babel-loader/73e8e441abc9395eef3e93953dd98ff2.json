{"ast":null,"code":"import _objectSpread from\"/Users/zeeshanpatel/flow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{CountdownCircleTimer}from\"react-countdown-circle-timer\";import\"./timer.css\";import{Alert}from\"./Alert.js\";import{SliderInput}from\"./SliderInput.js\";import{Card}from\"./Card\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var minuteSeconds=60;var hourSeconds=3600;var daySeconds=86400;var timerSecs;var timerProps={isPlaying:true,size:120,strokeWidth:6};var renderTime=function renderTime(dimension,time){return/*#__PURE__*/_jsxs(\"div\",{className:\"time-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:time}),/*#__PURE__*/_jsx(\"div\",{children:dimension})]});};var getTimeSeconds=function getTimeSeconds(time){return minuteSeconds-time|0;};var getTimeMinutes=function getTimeMinutes(time){return time%hourSeconds/minuteSeconds|0;};var getTimeHours=function getTimeHours(time){return time%daySeconds/hourSeconds|0;};export function CountdownTimer(){var stratTime=Date.now()/1000;var endTime=stratTime+1000;var remainingTime=endTime-stratTime;return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"CountdownTimer\",children:[/*#__PURE__*/_jsx(CountdownCircleTimer,_objectSpread(_objectSpread({},timerProps),{},{colors:[[\"#D14081\"]],duration:daySeconds,initialRemainingTime:remainingTime%daySeconds,onComplete:function onComplete(totalElapsedTime){return[remainingTime-totalElapsedTime>hourSeconds];},children:function children(_ref){var elapsedTime=_ref.elapsedTime;return renderTime(\"hours\",getTimeHours(daySeconds-elapsedTime));}})),/*#__PURE__*/_jsx(CountdownCircleTimer,_objectSpread(_objectSpread({},timerProps),{},{colors:[[\"#EF798A\"]],duration:hourSeconds,initialRemainingTime:remainingTime%hourSeconds,onComplete:function onComplete(totalElapsedTime){return[remainingTime-totalElapsedTime>minuteSeconds];},children:function children(_ref2){var elapsedTime=_ref2.elapsedTime;return renderTime(\"minutes\",getTimeMinutes(hourSeconds-elapsedTime));}})),/*#__PURE__*/_jsx(CountdownCircleTimer,_objectSpread(_objectSpread({},timerProps),{},{colors:[[\"#218380\"]],duration:minuteSeconds,initialRemainingTime:remainingTime%minuteSeconds,onComplete:function onComplete(totalElapsedTime){return[remainingTime-totalElapsedTime>0];},children:function children(_ref3){var elapsedTime=_ref3.elapsedTime;return renderTime(\"seconds\",getTimeSeconds(elapsedTime));}}))]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(SliderInput,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(SliderInput,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(SliderInput,{})]});}","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/CountdownTimer.js"],"names":["React","CountdownCircleTimer","Alert","SliderInput","Card","minuteSeconds","hourSeconds","daySeconds","timerSecs","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","CountdownTimer","stratTime","Date","now","endTime","remainingTime","totalElapsedTime","elapsedTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./timer.css\";\nimport { Alert } from \"./Alert.js\";\nimport { SliderInput } from \"./SliderInput.js\";\nimport { Card } from \"./Card\";\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\nlet timerSecs;\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6,\n};\n\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\n\nexport function CountdownTimer() {\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + 1000;\n\n  const remainingTime = endTime - stratTime;\n\n  return (\n    <Card>\n      <div className=\"CountdownTimer\">\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#D14081\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\n          }\n        </CountdownCircleTimer>\n        {/* <Alert /> */}\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#EF798A\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n      <br />\n      <br />\n\n      <SliderInput></SliderInput>\n\n      <br />\n      <SliderInput></SliderInput>\n      <br />\n      <SliderInput></SliderInput>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}