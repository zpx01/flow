{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/flow/src/components/CarouselDemo.js\",\n    _s = $RefreshSig$();\n\nimport { Grid // our UI Component to display the results\n, SearchBar // the search bar the user will type into\n, SearchContext // the context that wraps and connects our components\n, SearchContextManager // the context manager, includes the Context.Provider\n, SuggestionBar // an optional UI component that displays trending searches and channel / username results\n, SearchTheme } from '@giphy/react-components';\nimport { useContext } from 'react'; // the search experience consists of the manager and its child components that use SearchContext\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CarouselDemo = () => /*#__PURE__*/_jsxDEV(SearchContextManager, {\n  apiKey: \"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\",\n  theme: \"dark\",\n  children: /*#__PURE__*/_jsxDEV(Components, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this); // define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\n\n_c = CarouselDemo;\n\nconst Components = () => {\n  _s();\n\n  const {\n    fetchGifs,\n    searchKey\n  } = useContext(SearchContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      theme: \"dark\",\n      searchbarHeight: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SuggestionBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 2,\n      width: 450,\n      fetchGifs: fetchGifs\n    }, searchKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Components, \"YwFvHI1RaZl5S42Y5VWUv72IM2E=\");\n\n_c2 = Components;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarouselDemo\");\n$RefreshReg$(_c2, \"Components\");","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/CarouselDemo.js"],"names":["Grid","SearchBar","SearchContext","SearchContextManager","SuggestionBar","SearchTheme","useContext","CarouselDemo","Components","fetchGifs","searchKey"],"mappings":";;;AAAA,SACIA,IADJ,CACU;AADV,EAEIC,SAFJ,CAEe;AAFf,EAGIC,aAHJ,CAGmB;AAHnB,EAIIC,oBAJJ,CAI0B;AAJ1B,EAKIC,aALJ,CAKmB;AALnB,EAMIC,WANJ,QAOO,yBAPP;AAQA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;;;AACA,OAAO,MAAMC,YAAY,GAAG,mBACxB,QAAC,oBAAD;AAAsB,EAAA,MAAM,EAAE,kCAA9B;AAAkE,EAAA,KAAK,EAAE,MAAzE;AAAA,yBACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADG,C,CAMP;AACA;;KAPaA,Y;;AAQb,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BJ,UAAU,CAACJ,aAAD,CAA3C;AACA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE,MAAlB;AAA0B,MAAA,eAAe,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAsB,MAAA,OAAO,EAAE,CAA/B;AAAkC,MAAA,KAAK,EAAE,GAAzC;AAA8C,MAAA,SAAS,EAAEO;AAAzD,OAAWC,SAAX;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH,CAVD;;GAAMF,U;;MAAAA,U","sourcesContent":["import {\n    Grid, // our UI Component to display the results\n    SearchBar, // the search bar the user will type into\n    SearchContext, // the context that wraps and connects our components\n    SearchContextManager, // the context manager, includes the Context.Provider\n    SuggestionBar, // an optional UI component that displays trending searches and channel / username results\n    SearchTheme,\n} from '@giphy/react-components'\nimport { useContext } from 'react'\n// the search experience consists of the manager and its child components that use SearchContext\nexport const CarouselDemo = () => (\n    <SearchContextManager apiKey={\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\"} theme={\"dark\"}>\n        <Components />\n    </SearchContextManager>\n)\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n    const { fetchGifs, searchKey } = useContext(SearchContext)\n    return (\n        <>\n            <SearchBar theme={\"dark\"} searchbarHeight={200}/>\n            <br />\n            <SuggestionBar />\n            <Grid key={searchKey} columns={2} width={450} fetchGifs={fetchGifs} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}