{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/flow/src/components/CountdownTimer.js\";\nimport React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./timer.css\";\nimport { Alert } from \"./Alert.js\";\nimport { SliderInput } from \"./SliderInput.js\";\nimport { Card } from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\nlet timerSecs;\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6\n};\n\nconst renderTime = (dimension, time) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dimension\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nconst getTimeSeconds = time => minuteSeconds - time | 0;\n\nconst getTimeMinutes = time => time % hourSeconds / minuteSeconds | 0;\n\nconst getTimeHours = time => time % daySeconds / hourSeconds | 0;\n\nexport function CountdownTimer() {\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + 1000;\n  const remainingTime = endTime - stratTime;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CountdownTimer\",\n      children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n        colors: [[\"#D14081\"]],\n        duration: daySeconds,\n        initialRemainingTime: remainingTime % daySeconds,\n        onComplete: totalElapsedTime => [remainingTime - totalElapsedTime > hourSeconds],\n        children: ({\n          elapsedTime\n        }) => renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n        colors: [[\"#EF798A\"]],\n        duration: hourSeconds,\n        initialRemainingTime: remainingTime % hourSeconds,\n        onComplete: totalElapsedTime => [remainingTime - totalElapsedTime > minuteSeconds],\n        children: ({\n          elapsedTime\n        }) => renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n        colors: [[\"#218380\"]],\n        duration: minuteSeconds,\n        initialRemainingTime: remainingTime % minuteSeconds,\n        onComplete: totalElapsedTime => [remainingTime - totalElapsedTime > 0],\n        children: ({\n          elapsedTime\n        }) => renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = CountdownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/CountdownTimer.js"],"names":["React","CountdownCircleTimer","Alert","SliderInput","Card","minuteSeconds","hourSeconds","daySeconds","timerSecs","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","CountdownTimer","stratTime","Date","now","endTime","remainingTime","totalElapsedTime","elapsedTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./timer.css\";\nimport { Alert } from \"./Alert.js\";\nimport { SliderInput } from \"./SliderInput.js\";\nimport { Card } from \"./Card\";\n\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\nlet timerSecs;\nconst timerProps = {\n  isPlaying: true,\n  size: 120,\n  strokeWidth: 6,\n};\n\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\n\nexport function CountdownTimer() {\n  const stratTime = Date.now() / 1000;\n  const endTime = stratTime + 1000;\n\n  const remainingTime = endTime - stratTime;\n\n  return (\n    <Card>\n      <div className=\"CountdownTimer\">\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#D14081\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\n          }\n        </CountdownCircleTimer>\n        {/* <Alert /> */}\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#EF798A\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n      <br />\n      <br />\n\n      <SliderInput></SliderInput>\n\n      <br />\n      <SliderInput></SliderInput>\n      <br />\n      <SliderInput></SliderInput>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}