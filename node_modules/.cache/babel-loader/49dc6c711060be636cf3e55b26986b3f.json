{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar js_util_1 = require(\"@giphy/js-util\");\n\nvar throttle_debounce_1 = require(\"throttle-debounce\");\n\nvar global_1 = __importDefault(require(\"./global\"));\n\nvar send_pingback_1 = require(\"./send-pingback\");\n\nvar queuedPingbackEvents = [];\nglobal_1.default.giphyRandomId = js_util_1.getPingbackId();\nvar loggedInUserId = '';\n\nfunction sendPingbacks() {\n  var sendEvents = __spreadArrays(queuedPingbackEvents);\n\n  queuedPingbackEvents = [];\n  send_pingback_1.sendPingback(sendEvents);\n}\n\nvar debouncedPingbackEvent = throttle_debounce_1.debounce(1000, sendPingbacks);\n(_a = global_1.default.addEventListener) === null || _a === void 0 ? void 0 : _a.call(global_1.default, 'beforeunload', sendPingbacks);\n\nvar pingback = function (_a) {\n  var userId = _a.userId,\n      eventType = _a.eventType,\n      actionType = _a.actionType,\n      attributes = _a.attributes,\n      _b = _a.queueEvents,\n      queueEvents = _b === void 0 ? true : _b,\n      analyticsResponsePayload = _a.analyticsResponsePayload; // save the user id for whenever create session is invoked\n\n  loggedInUserId = userId ? String(userId) : loggedInUserId;\n  var newEvent = {\n    ts: Date.now(),\n    attributes: attributes,\n    action_type: actionType,\n    user_id: js_util_1.getPingbackId(),\n    analytics_response_payload: analyticsResponsePayload\n  };\n\n  if (loggedInUserId) {\n    newEvent.logged_in_user_id = loggedInUserId;\n  } // add verification mode\n\n\n  if (newEvent.analytics_response_payload) {\n    newEvent.analytics_response_payload = \"\" + newEvent.analytics_response_payload + (js_util_1.Logger.ENABLED ? '&mode=verification' : '');\n  }\n\n  if (eventType) {\n    newEvent.event_type = eventType;\n  }\n\n  queuedPingbackEvents.push(newEvent);\n  queueEvents ? debouncedPingbackEvent() : sendPingbacks();\n};\n\nexports.default = pingback;","map":{"version":3,"sources":["../src/pingback.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,IAAI,oBAAoB,GAAoB,EAA5C;AAEA,QAAA,CAAA,OAAA,CAAG,aAAH,GAAmB,SAAA,CAAA,aAAA,EAAnB;AAEA,IAAI,cAAc,GAAG,EAArB;;AAEA,SAAS,aAAT,GAAsB;AAClB,MAAM,UAAU,GAAA,cAAA,CAAO,oBAAP,CAAhB;;AACA,EAAA,oBAAoB,GAAG,EAAvB;AACA,EAAA,eAAA,CAAA,YAAA,CAAa,UAAb;AACH;;AAED,IAAM,sBAAsB,GAAG,mBAAA,CAAA,QAAA,CAAS,IAAT,EAAe,aAAf,CAA/B;AAEA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAG,gBAAH,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAA,IAAA,CAAnB,QAAA,CAAA,OAAmB,EAAG,cAAH,EAAmB,aAAnB,CAAnB;;AAEA,IAAM,QAAQ,GAAG,UAAC,EAAD,EAON;MANP,MAAM,GAAA,EAAA,CAAA,M;MACN,SAAS,GAAA,EAAA,CAAA,S;MACT,UAAU,GAAA,EAAA,CAAA,U;MACV,UAAU,GAAA,EAAA,CAAA,U;MACV,EAAA,GAAA,EAAA,CAAA,W;MAAA,WAAW,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;MAClB,wBAAwB,GAAA,EAAA,CAAA,wB,CACjB,CACP;;AACA,EAAA,cAAc,GAAG,MAAM,GAAG,MAAM,CAAC,MAAD,CAAT,GAAoB,cAA3C;AAEA,MAAM,QAAQ,GAAkB;AAC5B,IAAA,EAAE,EAAE,IAAI,CAAC,GAAL,EADwB;AAE5B,IAAA,UAAU,EAAA,UAFkB;AAG5B,IAAA,WAAW,EAAE,UAHe;AAI5B,IAAA,OAAO,EAAE,SAAA,CAAA,aAAA,EAJmB;AAK5B,IAAA,0BAA0B,EAAE;AALA,GAAhC;;AAQA,MAAI,cAAJ,EAAoB;AAChB,IAAA,QAAQ,CAAC,iBAAT,GAA6B,cAA7B;AACH,GAdM,CAgBP;;;AACA,MAAI,QAAQ,CAAC,0BAAb,EAAyC;AACrC,IAAA,QAAQ,CAAC,0BAAT,GAAsC,KAAG,QAAQ,CAAC,0BAAZ,IAClC,SAAA,CAAA,MAAA,CAAO,OAAP,GAAiB,oBAAjB,GAAwC,EADN,CAAtC;AAGH;;AAED,MAAI,SAAJ,EAAe;AACX,IAAA,QAAQ,CAAC,UAAT,GAAsB,SAAtB;AACH;;AAED,EAAA,oBAAoB,CAAC,IAArB,CAA0B,QAA1B;AAEA,EAAA,WAAW,GAAG,sBAAsB,EAAzB,GAA8B,aAAa,EAAtD;AACH,CArCD;;AAuCA,OAAA,CAAA,OAAA,GAAe,QAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar js_util_1 = require(\"@giphy/js-util\");\nvar throttle_debounce_1 = require(\"throttle-debounce\");\nvar global_1 = __importDefault(require(\"./global\"));\nvar send_pingback_1 = require(\"./send-pingback\");\nvar queuedPingbackEvents = [];\nglobal_1.default.giphyRandomId = js_util_1.getPingbackId();\nvar loggedInUserId = '';\nfunction sendPingbacks() {\n    var sendEvents = __spreadArrays(queuedPingbackEvents);\n    queuedPingbackEvents = [];\n    send_pingback_1.sendPingback(sendEvents);\n}\nvar debouncedPingbackEvent = throttle_debounce_1.debounce(1000, sendPingbacks);\n(_a = global_1.default.addEventListener) === null || _a === void 0 ? void 0 : _a.call(global_1.default, 'beforeunload', sendPingbacks);\nvar pingback = function (_a) {\n    var userId = _a.userId, eventType = _a.eventType, actionType = _a.actionType, attributes = _a.attributes, _b = _a.queueEvents, queueEvents = _b === void 0 ? true : _b, analyticsResponsePayload = _a.analyticsResponsePayload;\n    // save the user id for whenever create session is invoked\n    loggedInUserId = userId ? String(userId) : loggedInUserId;\n    var newEvent = {\n        ts: Date.now(),\n        attributes: attributes,\n        action_type: actionType,\n        user_id: js_util_1.getPingbackId(),\n        analytics_response_payload: analyticsResponsePayload,\n    };\n    if (loggedInUserId) {\n        newEvent.logged_in_user_id = loggedInUserId;\n    }\n    // add verification mode\n    if (newEvent.analytics_response_payload) {\n        newEvent.analytics_response_payload = \"\" + newEvent.analytics_response_payload + (js_util_1.Logger.ENABLED ? '&mode=verification' : '');\n    }\n    if (eventType) {\n        newEvent.event_type = eventType;\n    }\n    queuedPingbackEvents.push(newEvent);\n    queueEvents ? debouncedPingbackEvent() : sendPingbacks();\n};\nexports.default = pingback;\n//# sourceMappingURL=pingback.js.map"]},"metadata":{},"sourceType":"script"}