{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/flow/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\";\nimport { Input, Button, Box, Heading, Progress } from \"@chakra-ui/react\";\nimport { CheckList } from \"./CheckList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tasks = () => {\n  _s();\n\n  let handleChange = event => setTask(event.target.value);\n\n  let [task, setTask] = React.useState(\"\");\n  let [tasks, setTasks] = React.useState([]);\n  let count = 0;\n  let progress = count / tasks.length * 100;\n\n  let addTask = e => {\n    setTask(task);\n    setTasks([...tasks, task]);\n  };\n\n  let handleCheckbox = e => {\n    let val = e.target.value;\n\n    if (val === true) {\n      count = count + 1;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Enter a task\",\n      variant: \"filled\",\n      value: task,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"facebook\",\n      onClick: addTask,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          value: true,\n          default: true,\n          IsUnchecked: true,\n          onChange: handleCheckbox,\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tasks, \"xgJRP4S5U+1h+stMRYbjgD6Sspw=\");\n\n_c = Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/Tasks.js"],"names":["React","Checkbox","CheckboxGroup","Input","Button","Box","Heading","Progress","CheckList","Tasks","handleChange","event","setTask","target","value","task","useState","tasks","setTasks","count","progress","length","addTask","e","handleCheckbox","val","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,kBAAxC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,kBAAtD;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,MAAIC,YAAY,GAAIC,KAAD,IAAWC,OAAO,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAArC;;AACA,MAAI,CAACC,IAAD,EAAOH,OAAP,IAAkBZ,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAtB;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxB;AACA,MAAIG,KAAK,GAAG,CAAZ;AACA,MAAIC,QAAQ,GAAID,KAAK,GAACF,KAAK,CAACI,MAAb,GAAuB,GAAtC;;AACA,MAAIC,OAAO,GAAIC,CAAD,IAAO;AACnBX,IAAAA,OAAO,CAACG,IAAD,CAAP;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWF,IAAX,CAAD,CAAR;AACD,GAHD;;AAKA,MAAIS,cAAc,GAAID,CAAD,IAAO;AAC1B,QAAIE,GAAG,GAAGF,CAAC,CAACV,MAAF,CAASC,KAAnB;;AACA,QAAIW,GAAG,KAAK,IAAZ,EAAiB;AACfN,MAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACD;AACF,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,OAAO,EAAC,QAFV;AAGE,MAAA,KAAK,EAAEL,IAHT;AAIE,MAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA,YALF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,UAApB;AAA+B,MAAA,OAAO,EAAEY,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE;AAAA,gBACGL,KAAK,CAACS,GAAN,CAAWX,IAAD,iBACT;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,IAAjB;AAAuB,UAAA,OAAO,MAA9B;AAA+B,UAAA,WAAW,MAA1C;AAA2C,UAAA,QAAQ,EAAES,cAArD;AAAA,oBACGT;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjDM;;GAAMN,K;;KAAAA,K","sourcesContent":["import React from \"react\";\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\";\nimport { Input, Button, Box, Heading, Progress } from \"@chakra-ui/react\";\nimport { CheckList } from \"./CheckList\";\n\nexport const Tasks = () => {\n  let handleChange = (event) => setTask(event.target.value);\n  let [task, setTask] = React.useState(\"\");\n  let [tasks, setTasks] = React.useState([]);\n  let count = 0\n  let progress = (count/tasks.length) * 100\n  let addTask = (e) => {\n    setTask(task);\n    setTasks([...tasks, task]);\n  };\n  \n  let handleCheckbox = (e) => {\n    let val = e.target.value\n    if (val === true){\n      count = count + 1\n    }\n  }\n\n  return (\n    <div>\n      <Heading>Task List</Heading>\n      <br />\n      <Progress value={progress} />\n      <br />\n      <Input\n        placeholder=\"Enter a task\"\n        variant=\"filled\"\n        value={task}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <Button colorScheme=\"facebook\" onClick={addTask}>\n        Submit\n      </Button>\n      <br />\n      <br />\n      <div>\n        {tasks.map((task) => (\n          <div>\n            <Checkbox value={true} default IsUnchecked onChange={handleCheckbox}>\n              {task}\n            </Checkbox>\n            <br />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}