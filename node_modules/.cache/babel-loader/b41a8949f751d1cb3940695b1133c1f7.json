{"ast":null,"code":"import{Grid// our UI Component to display the results\n,SearchBar// the search bar the user will type into\n,SearchContext// the context that wraps and connects our components\n,SearchContextManager// the context manager, includes the Context.Provider\n,SuggestionBar// an optional UI component that displays trending searches and channel / username results\n,SearchTheme}from'@giphy/react-components';import{useContext}from'react';// the search experience consists of the manager and its child components that use SearchContext\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CarouselDemo=function CarouselDemo(){return/*#__PURE__*/_jsx(SearchContextManager,{apiKey:\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\",theme:\"dark\",children:/*#__PURE__*/_jsx(Components,{})});};// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nvar Components=function Components(){var _useContext=useContext(SearchContext),fetchGifs=_useContext.fetchGifs,searchKey=_useContext.searchKey;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SearchBar,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(SuggestionBar,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Grid,{columns:2,width:525,fetchGifs:fetchGifs},searchKey)]});};","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/CarouselDemo.js"],"names":["Grid","SearchBar","SearchContext","SearchContextManager","SuggestionBar","SearchTheme","useContext","CarouselDemo","Components","fetchGifs","searchKey"],"mappings":"AAAA,OACIA,IAAM;AADV,CAEIC,SAAW;AAFf,CAGIC,aAAe;AAHnB,CAIIC,oBAAsB;AAJ1B,CAKIC,aAAe;AALnB,CAMIC,WANJ,KAOO,yBAPP,CAQA,OAASC,UAAT,KAA2B,OAA3B,CACA;6IACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBACxB,KAAC,oBAAD,EAAsB,MAAM,CAAE,kCAA9B,CAAkE,KAAK,CAAE,MAAzE,uBACI,KAAC,UAAD,IADJ,EADwB,EAArB,CAMP;AACA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,iBACYF,UAAU,CAACJ,aAAD,CADtB,CACbO,SADa,aACbA,SADa,CACFC,SADE,aACFA,SADE,CAErB,mBACI,wCACI,KAAC,SAAD,IADJ,cAEI,aAFJ,cAGI,KAAC,aAAD,IAHJ,cAII,aAJJ,cAKI,KAAC,IAAD,EAAsB,OAAO,CAAE,CAA/B,CAAkC,KAAK,CAAE,GAAzC,CAA8C,SAAS,CAAED,SAAzD,EAAWC,SAAX,CALJ,GADJ,CASH,CAXD","sourcesContent":["import {\n    Grid, // our UI Component to display the results\n    SearchBar, // the search bar the user will type into\n    SearchContext, // the context that wraps and connects our components\n    SearchContextManager, // the context manager, includes the Context.Provider\n    SuggestionBar, // an optional UI component that displays trending searches and channel / username results\n    SearchTheme,\n} from '@giphy/react-components'\nimport { useContext } from 'react'\n// the search experience consists of the manager and its child components that use SearchContext\nexport const CarouselDemo = () => (\n    <SearchContextManager apiKey={\"T8n3iMoLUOguSsK56GgLJRYhh9lyrAWL\"} theme={\"dark\"}>\n        <Components />\n    </SearchContextManager>\n)\n\n// define the components in a separate function so we can\n// use the context hook. You could also use the render props pattern\nconst Components = () => {\n    const { fetchGifs, searchKey } = useContext(SearchContext)\n    return (\n        <>\n            <SearchBar />\n            <br />\n            <SuggestionBar />\n            <br />\n            <Grid key={searchKey} columns={2} width={525} fetchGifs={fetchGifs} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}