{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/zeeshanpatel/flow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/zeeshanpatel/flow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zeeshanpatel/flow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Attractor = /*#__PURE__*/function () {\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n\n    this.container = container;\n  }\n\n  _createClass(Attractor, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container;\n      var options = container.actualOptions;\n      var mouse = container.interactivity.mouse;\n      var events = options.interactivity.events;\n\n      if (!(events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var container = this.container;\n      var options = container.actualOptions;\n      var mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n      var events = options.interactivity.events;\n      var hoverEnabled = events.onHover.enable;\n      var hoverMode = events.onHover.mode;\n      var clickEnabled = events.onClick.enable;\n      var clickMode = events.onClick.mode;\n\n      if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n        this.hoverAttract();\n      } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n        this.clickAttract();\n      }\n    }\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var container = this.container;\n      var attractOptions = container.actualOptions.interactivity.modes.attract;\n      var query = container.particles.quadTree.query(area);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          var _Utils_1$NumberUtils$ = Utils_1.NumberUtils.getDistances(particle.position, position),\n              dx = _Utils_1$NumberUtils$.dx,\n              dy = _Utils_1$NumberUtils$.dy,\n              distance = _Utils_1$NumberUtils$.distance;\n\n          var normVec = {\n            x: dx / distance,\n            y: dy / distance\n          };\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = Utils_1.NumberUtils.clamp(Utils_1.NumberUtils.calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n          particle.position.x -= normVec.x * attractFactor;\n          particle.position.y -= normVec.y * attractFactor;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition;\n\n        if (!mousePos) {\n          return;\n        }\n\n        var attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n  }]);\n\n  return Attractor;\n}();\n\nexports.Attractor = Attractor;","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/node_modules/tsparticles/dist/Interactions/External/Attractor.js"],"names":["Object","defineProperty","exports","value","Attractor","Enums_1","require","Utils_1","container","options","actualOptions","mouse","interactivity","events","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","Utils","isInArray","HoverMode","attract","ClickMode","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","Circle","x","y","area","attractOptions","modes","query","particles","quadTree","particle","NumberUtils","getDistances","dx","dy","distance","normVec","velocity","speed","factor","attractFactor","clamp","calcEasing","easing","maxSpeed","finish","count","clicking"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Attractor = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Attractor {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        if (!((events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.attract, hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.attract, clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = Utils_1.NumberUtils.clamp(Utils_1.NumberUtils.calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            particle.position.x -= normVec.x * attractFactor;\n            particle.position.y -= normVec.y * attractFactor;\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Utils_1.Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\nexports.Attractor = Attractor;\n"]},"metadata":{},"sourceType":"script"}