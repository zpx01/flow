{"ast":null,"code":"import React, { useRef } from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { truncate } from '../../utils';\n\nvar UnMemoizedChannelPreviewLastMessage = function (props) {\n  var active = props.active,\n      _a = props.Avatar,\n      Avatar = _a === void 0 ? DefaultAvatar : _a,\n      channel = props.channel,\n      displayImage = props.displayImage,\n      displayTitle = props.displayTitle,\n      latestMessage = props.latestMessage,\n      _b = props.latestMessageLength,\n      latestMessageLength = _b === void 0 ? 20 : _b,\n      setActiveChannel = props.setActiveChannel,\n      unread = props.unread,\n      watchers = props.watchers;\n  var channelPreviewButton = useRef(null);\n\n  var onSelectChannel = function () {\n    if (setActiveChannel) {\n      setActiveChannel(channel, watchers);\n    }\n\n    if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n      channelPreviewButton.current.blur();\n    }\n  };\n\n  var unreadClass = unread && unread >= 1 ? 'str-chat__channel-preview--unread' : '';\n  var activeClass = active ? 'str-chat__channel-preview--active' : '';\n  return React.createElement(\"div\", {\n    className: \"str-chat__channel-preview \" + unreadClass + \" \" + activeClass\n  }, React.createElement(\"button\", {\n    \"data-testid\": 'channel-preview-button',\n    onClick: onSelectChannel,\n    ref: channelPreviewButton\n  }, unread && unread >= 1 ? React.createElement(\"div\", {\n    className: 'str-chat__channel-preview--dot'\n  }) : null, React.createElement(Avatar, {\n    image: displayImage,\n    name: displayTitle\n  }), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-info'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__channel-preview-title'\n  }, displayTitle), React.createElement(\"span\", {\n    className: 'str-chat__channel-preview-last-message'\n  }, truncate(latestMessage, latestMessageLength)), unread && unread >= 1 ? React.createElement(\"span\", {\n    className: 'str-chat__channel-preview-unread-count'\n  }, unread) : null)));\n};\n/**\n * @deprecated - This UI component will be removed in the next major release.\n *\n * Used as preview component for channel item in [ChannelList](#channellist) component\n */\n\n\nexport var ChannelPreviewLastMessage = React.memo(UnMemoizedChannelPreviewLastMessage);","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewLastMessage.js"],"names":["React","useRef","Avatar","DefaultAvatar","truncate","UnMemoizedChannelPreviewLastMessage","props","active","_a","channel","displayImage","displayTitle","latestMessage","_b","latestMessageLength","setActiveChannel","unread","watchers","channelPreviewButton","onSelectChannel","current","blur","unreadClass","activeClass","createElement","className","onClick","ref","image","name","ChannelPreviewLastMessage","memo"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { truncate } from '../../utils';\nvar UnMemoizedChannelPreviewLastMessage = function (props) {\n    var active = props.active, _a = props.Avatar, Avatar = _a === void 0 ? DefaultAvatar : _a, channel = props.channel, displayImage = props.displayImage, displayTitle = props.displayTitle, latestMessage = props.latestMessage, _b = props.latestMessageLength, latestMessageLength = _b === void 0 ? 20 : _b, setActiveChannel = props.setActiveChannel, unread = props.unread, watchers = props.watchers;\n    var channelPreviewButton = useRef(null);\n    var onSelectChannel = function () {\n        if (setActiveChannel) {\n            setActiveChannel(channel, watchers);\n        }\n        if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n            channelPreviewButton.current.blur();\n        }\n    };\n    var unreadClass = unread && unread >= 1 ? 'str-chat__channel-preview--unread' : '';\n    var activeClass = active ? 'str-chat__channel-preview--active' : '';\n    return (React.createElement(\"div\", { className: \"str-chat__channel-preview \" + unreadClass + \" \" + activeClass },\n        React.createElement(\"button\", { \"data-testid\": 'channel-preview-button', onClick: onSelectChannel, ref: channelPreviewButton },\n            unread && unread >= 1 ? React.createElement(\"div\", { className: 'str-chat__channel-preview--dot' }) : null,\n            React.createElement(Avatar, { image: displayImage, name: displayTitle }),\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-info' },\n                React.createElement(\"span\", { className: 'str-chat__channel-preview-title' }, displayTitle),\n                React.createElement(\"span\", { className: 'str-chat__channel-preview-last-message' }, truncate(latestMessage, latestMessageLength)),\n                unread && unread >= 1 ? (React.createElement(\"span\", { className: 'str-chat__channel-preview-unread-count' }, unread)) : null))));\n};\n/**\n * @deprecated - This UI component will be removed in the next major release.\n *\n * Used as preview component for channel item in [ChannelList](#channellist) component\n */\nexport var ChannelPreviewLastMessage = React.memo(UnMemoizedChannelPreviewLastMessage);\n"]},"metadata":{},"sourceType":"module"}