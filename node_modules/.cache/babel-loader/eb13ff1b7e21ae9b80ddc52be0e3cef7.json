{"ast":null,"code":"import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nexport var useEnrichedMessages = function (args) {\n  var channel = args.channel,\n      disableDateSeparator = args.disableDateSeparator,\n      headerPosition = args.headerPosition,\n      hideDeletedMessages = args.hideDeletedMessages,\n      hideNewMessageSeparator = args.hideNewMessageSeparator,\n      messages = args.messages,\n      noGroupByUser = args.noGroupByUser,\n      threadList = args.threadList;\n  var client = useChatContext().client;\n  var HeaderComponent = useComponentContext().HeaderComponent;\n  var lastRead = useMemo(function () {\n    var _a;\n\n    return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel);\n  }, [channel]);\n  var messagesWithDates = threadList || disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator ? messages : processMessages(messages, lastRead, client.userID, hideDeletedMessages, disableDateSeparator, hideNewMessageSeparator);\n\n  if (HeaderComponent) {\n    messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n  }\n\n  var messageGroupStyles = useMemo(function () {\n    return messagesWithDates.reduce(function (acc, message, i) {\n      var style = getGroupStyles(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);\n      if (style) acc[message.id] = style;\n      return acc;\n    }, {});\n  }, [messagesWithDates, noGroupByUser]);\n  return {\n    messageGroupStyles: messageGroupStyles,\n    messages: messagesWithDates\n  };\n};","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/node_modules/stream-chat-react/dist/components/MessageList/hooks/useEnrichedMessages.js"],"names":["useMemo","getGroupStyles","insertIntro","processMessages","useChatContext","useComponentContext","useEnrichedMessages","args","channel","disableDateSeparator","headerPosition","hideDeletedMessages","hideNewMessageSeparator","messages","noGroupByUser","threadList","client","HeaderComponent","lastRead","_a","call","messagesWithDates","userID","messageGroupStyles","reduce","acc","message","i","style","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA6D,UAA7D;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,IAAV,EAAgB;AAC7C,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MAA4BC,oBAAoB,GAAGF,IAAI,CAACE,oBAAxD;AAAA,MAA8EC,cAAc,GAAGH,IAAI,CAACG,cAApG;AAAA,MAAoHC,mBAAmB,GAAGJ,IAAI,CAACI,mBAA/I;AAAA,MAAoKC,uBAAuB,GAAGL,IAAI,CAACK,uBAAnM;AAAA,MAA4NC,QAAQ,GAAGN,IAAI,CAACM,QAA5O;AAAA,MAAsPC,aAAa,GAAGP,IAAI,CAACO,aAA3Q;AAAA,MAA0RC,UAAU,GAAGR,IAAI,CAACQ,UAA5S;AACA,MAAIC,MAAM,GAAGZ,cAAc,GAAGY,MAA9B;AACA,MAAIC,eAAe,GAAGZ,mBAAmB,GAAGY,eAA5C;AACA,MAAIC,QAAQ,GAAGlB,OAAO,CAAC,YAAY;AAAE,QAAImB,EAAJ;;AAAQ,WAAO,CAACA,EAAE,GAAGX,OAAO,CAACU,QAAd,MAA4B,IAA5B,IAAoCC,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACC,IAAH,CAAQZ,OAAR,CAApE;AAAuF,GAA9G,EAAgH,CAACA,OAAD,CAAhH,CAAtB;AACA,MAAIa,iBAAiB,GAAGN,UAAU,IAAKN,oBAAoB,IAAI,CAACE,mBAAzB,IAAgDC,uBAA/D,GAClBC,QADkB,GAElBV,eAAe,CAACU,QAAD,EAAWK,QAAX,EAAqBF,MAAM,CAACM,MAA5B,EAAoCX,mBAApC,EAAyDF,oBAAzD,EAA+EG,uBAA/E,CAFrB;;AAGA,MAAIK,eAAJ,EAAqB;AACjBI,IAAAA,iBAAiB,GAAGnB,WAAW,CAACmB,iBAAD,EAAoBX,cAApB,CAA/B;AACH;;AACD,MAAIa,kBAAkB,GAAGvB,OAAO,CAAC,YAAY;AACzC,WAAOqB,iBAAiB,CAACG,MAAlB,CAAyB,UAAUC,GAAV,EAAeC,OAAf,EAAwBC,CAAxB,EAA2B;AACvD,UAAIC,KAAK,GAAG3B,cAAc,CAACyB,OAAD,EAAUL,iBAAiB,CAACM,CAAC,GAAG,CAAL,CAA3B,EAAoCN,iBAAiB,CAACM,CAAC,GAAG,CAAL,CAArD,EAA8Db,aAA9D,CAA1B;AACA,UAAIc,KAAJ,EACIH,GAAG,CAACC,OAAO,CAACG,EAAT,CAAH,GAAkBD,KAAlB;AACJ,aAAOH,GAAP;AACH,KALM,EAKJ,EALI,CAAP;AAMH,GAP+B,EAO7B,CAACJ,iBAAD,EAAoBP,aAApB,CAP6B,CAAhC;AAQA,SAAO;AAAES,IAAAA,kBAAkB,EAAEA,kBAAtB;AAA0CV,IAAAA,QAAQ,EAAEQ;AAApD,GAAP;AACH,CApBM","sourcesContent":["import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../utils';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useComponentContext } from '../../../context/ComponentContext';\nexport var useEnrichedMessages = function (args) {\n    var channel = args.channel, disableDateSeparator = args.disableDateSeparator, headerPosition = args.headerPosition, hideDeletedMessages = args.hideDeletedMessages, hideNewMessageSeparator = args.hideNewMessageSeparator, messages = args.messages, noGroupByUser = args.noGroupByUser, threadList = args.threadList;\n    var client = useChatContext().client;\n    var HeaderComponent = useComponentContext().HeaderComponent;\n    var lastRead = useMemo(function () { var _a; return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel); }, [channel]);\n    var messagesWithDates = threadList || (disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator)\n        ? messages\n        : processMessages(messages, lastRead, client.userID, hideDeletedMessages, disableDateSeparator, hideNewMessageSeparator);\n    if (HeaderComponent) {\n        messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n    }\n    var messageGroupStyles = useMemo(function () {\n        return messagesWithDates.reduce(function (acc, message, i) {\n            var style = getGroupStyles(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);\n            if (style)\n                acc[message.id] = style;\n            return acc;\n        }, {});\n    }, [messagesWithDates, noGroupByUser]);\n    return { messageGroupStyles: messageGroupStyles, messages: messagesWithDates };\n};\n"]},"metadata":{},"sourceType":"module"}