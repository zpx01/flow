{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/flow/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport { Box, Heading, Center, Input, Button, Text, SimpleGrid } from \"@chakra-ui/react\";\nimport { Card } from \"./Card\";\nimport { ChatBox } from \"./ChatBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = () => {\n  _s();\n\n  let [humanMessages, setHumanMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [aiMessages, setAiMessages] = useState([]);\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: firebase.auth().currentUser.getIdToken(),\n    email: firebase.auth().currentUser.email\n  };\n\n  let handleMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  let sendMessage = e => {\n    let messageText = {\n      header: \"Access-Control-Allow-Origin\",\n      text: message\n    };\n    setHumanMessages([...humanMessages, message]);\n    axios.post(\"http://localhost:5000/home\", user).then(response => {\n      axios.post(\"http://localhost:5000/chat\", messageText).then(res => {\n        setAiMessages([...aiMessages, res.data.data]);\n      });\n    });\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      minH: \"100vh\",\n      py: \"12\",\n      px: {\n        base: \"4\",\n        lg: \"8\"\n      },\n      bgGradient: \"linear(to-l, #7928CA, #FF0080)\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxW: \"md\",\n        mx: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            color: \"white\",\n            fontSize: \"5xl\",\n            fontWeight: \"extrabold\",\n            children: \"AI Chat Therapy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          columns: [1, 2],\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n              humanMessages: humanMessages,\n              aiMessages: aiMessages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: message,\n              onChange: handleMessage,\n              variant: \"filled\",\n              placeholder: \"Write a message to our AI Therapist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: sendMessage,\n                colorScheme: \"teal\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"KtTOftITKc4XrwFYnpZcPM/lTNg=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/Chat.js"],"names":["useState","useEffect","axios","firebase","Box","Heading","Center","Input","Button","Text","SimpleGrid","Card","ChatBox","Chat","humanMessages","setHumanMessages","message","setMessage","aiMessages","setAiMessages","user","header","token","auth","currentUser","getIdToken","email","handleMessage","e","target","value","sendMessage","messageText","text","post","then","response","res","data","base","lg"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SACEC,GADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,IANF,EAOEC,UAPF,QAQO,kBARP;AASA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AACA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAI,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAIoB,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,6BADC;AAETC,IAAAA,KAAK,EAAEnB,QAAQ,CAACoB,IAAT,GAAgBC,WAAhB,CAA4BC,UAA5B,EAFE;AAGTC,IAAAA,KAAK,EAAEvB,QAAQ,CAACoB,IAAT,GAAgBC,WAAhB,CAA4BE;AAH1B,GAAX;;AAKA,MAAIC,aAAa,GAAIC,CAAD,IAAO;AACzBX,IAAAA,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAGA,MAAIC,WAAW,GAAIH,CAAD,IAAO;AACvB,QAAII,WAAW,GAAG;AAChBX,MAAAA,MAAM,EAAE,6BADQ;AAEhBY,MAAAA,IAAI,EAAEjB;AAFU,KAAlB;AAIAD,IAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBE,OAAnB,CAAD,CAAhB;AACAd,IAAAA,KAAK,CAACgC,IAAN,CAAW,4BAAX,EAAyCd,IAAzC,EAA+Ce,IAA/C,CAAqDC,QAAD,IAAc;AAChElC,MAAAA,KAAK,CAACgC,IAAN,CAAW,4BAAX,EAAyCF,WAAzC,EAAsDG,IAAtD,CAA4DE,GAAD,IAAS;AAClElB,QAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBmB,GAAG,CAACC,IAAJ,CAASA,IAAzB,CAAD,CAAb;AACD,OAFD;AAGD,KAJD;AAKArB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAZD;;AAcA,sBACE;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,IAFL;AAGE,MAAA,EAAE,EAAE;AACFsB,QAAAA,IAAI,EAAE,GADJ;AAEFC,QAAAA,EAAE,EAAE;AAFF,OAHN;AAOE,MAAA,UAAU,EAAC,gCAPb;AAAA,6BASE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,IAAV;AAAe,QAAA,EAAE,EAAC,MAAlB;AAAA,gCACE,QAAC,MAAD;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,OAAf;AAAuB,YAAA,QAAQ,EAAC,KAAhC;AAAsC,YAAA,UAAU,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,CAAC,CAAD,EAAG,CAAH,CAArB;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,aAAa,EAAE1B,aAAxB;AAAuC,cAAA,UAAU,EAAEI;AAAnD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,KAAD;AACE,cAAA,KAAK,EAAEF,OADT;AAEE,cAAA,QAAQ,EAAEW,aAFZ;AAGE,cAAA,OAAO,EAAC,QAHV;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBANF,eAYE;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE,QAAC,MAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEI,WAAjB;AAA8B,gBAAA,WAAW,EAAE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF,eAmBE;AAAA;AAAA;AAAA;AAAA,oBAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAuBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CA5EM;;GAAMlB,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"firebase\";\nimport {\n  Box,\n  Heading,\n  Center,\n  Input,\n  Button,\n  Text,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { Card } from \"./Card\";\nimport { ChatBox } from \"./ChatBox\";\nexport const Chat = () => {\n  let [humanMessages, setHumanMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [aiMessages, setAiMessages] = useState([]);\n  let user = {\n    header: \"Access-Control-Allow-Origin\",\n    token: firebase.auth().currentUser.getIdToken(),\n    email: firebase.auth().currentUser.email,\n  };\n  let handleMessage = (e) => {\n    setMessage(e.target.value);\n  };\n  let sendMessage = (e) => {\n    let messageText = {\n      header: \"Access-Control-Allow-Origin\",\n      text: message,\n    };\n    setHumanMessages([...humanMessages, message]);\n    axios.post(\"http://localhost:5000/home\", user).then((response) => {\n      axios.post(\"http://localhost:5000/chat\", messageText).then((res) => {\n        setAiMessages([...aiMessages, res.data.data]);\n      });\n    });\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <Box\n        minH=\"100vh\"\n        py=\"12\"\n        px={{\n          base: \"4\",\n          lg: \"8\",\n        }}\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n      >\n        <Box maxW=\"md\" mx=\"auto\">\n          <Center>\n            <Heading color=\"white\" fontSize=\"5xl\" fontWeight=\"extrabold\">\n              AI Chat Therapy\n            </Heading>\n          </Center>\n          <br />\n          <br />\n          <SimpleGrid columns={[1,2]}>\n            <Card>\n              <ChatBox humanMessages={humanMessages} aiMessages={aiMessages} />\n              <br />\n              <br />\n              <br />\n              <br />\n              <Input\n                value={message}\n                onChange={handleMessage}\n                variant=\"filled\"\n                placeholder=\"Write a message to our AI Therapist\"\n              />\n              <br />\n              <br />\n              <Center>\n                <Button onClick={sendMessage} colorScheme={\"teal\"}>\n                  Send\n                </Button>\n              </Center>\n              <br />\n              <br />\n            </Card>\n            <Card>\n                Hello\n            </Card>\n          </SimpleGrid>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}