{"ast":null,"code":"import _objectSpread from\"/Users/zeeshanpatel/flow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zeeshanpatel/flow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{HStack,VStack,Text,Flex,Badge,Modal,ModalOverlay,ModalContent,ModalHeader,ModalFooter,ModalBody,ModalCloseButton,Button,Input,Divider}from\"@chakra-ui/react\";import{DeleteIcon,EditIcon}from\"@chakra-ui/icons\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function TodoList(_ref){var todos=_ref.todos,deleteTodo=_ref.deleteTodo,editTodo=_ref.editTodo;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),modalValue=_useState4[0],setModalValue=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isOpen=_useState6[0],setIsOpen=_useState6[1];function onClose(){setIsOpen(false);}function handleEditClick(todo){setIsOpen(true);// we've set the passed todo to modal value\nsetModalValue(todo);console.log(todo);}function handleEditInputChange(e,id){setModalValue(_objectSpread(_objectSpread({},modalValue),{},{text:e.target.value}));console.log(modalValue,id);}function handleEditSubmit(e){e.preventDefault();editTodo(modalValue.id,modalValue);setModalValue(\"\");setIsOpen(false);}return!todos.length?/*#__PURE__*/_jsx(Badge,{colorScheme:\"purple\",variant:\"outline\",borderRadius:\"4\",p:\"4\",m:\"5\",children:\"No tasks for Today!!\"}):/*#__PURE__*/_jsx(VStack,{children:todos.map(function(todo){return/*#__PURE__*/_jsx(HStack,{spacing:\"24px\",w:\"320px\",children:/*#__PURE__*/_jsxs(Flex,{p:6,w:\"300px\",h:\"50px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{children:todo.text}),/*#__PURE__*/_jsxs(Flex,{w:\"10px\",children:[/*#__PURE__*/_jsx(DeleteIcon,{color:\"red.500\",mr:\"2\",onClick:function onClick(){return deleteTodo(todo.id);}}),/*#__PURE__*/_jsx(EditIcon,{onClick:function onClick(){return handleEditClick(todo);}})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"Edit Your Task\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEditSubmit,children:[/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(Input,{value:modalValue.text,variant:\"outline\",type:\"text\",placeholder:\"Update your todo...\",onChange:handleEditInputChange},modalValue.id)}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{colorScheme:\"facebook\",mr:3,onClick:onClose,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",colorScheme:\"facebook\",mr:3,children:\"Update\"})]})]})]})]})]})});})});}","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/TodoList.js"],"names":["HStack","VStack","Text","Flex","Badge","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","Input","Divider","DeleteIcon","EditIcon","React","useState","TodoList","todos","deleteTodo","editTodo","todo","setTodo","modalValue","setModalValue","isOpen","setIsOpen","onClose","handleEditClick","console","log","handleEditInputChange","e","id","text","target","value","handleEditSubmit","preventDefault","length","map"],"mappings":"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","sourcesContent":["import {\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  Badge,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Input,\n  Divider,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React, { useState } from \"react\";\n\nexport function TodoList({ todos, deleteTodo, editTodo }) {\n  const [todo, setTodo] = useState(\"\");\n  const [modalValue, setModalValue] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  function onClose() {\n    setIsOpen(false);\n  }\n\n  function handleEditClick(todo) {\n    setIsOpen(true);\n    // we've set the passed todo to modal value\n    setModalValue(todo);\n    console.log(todo);\n  }\n\n  function handleEditInputChange(e, id) {\n    setModalValue({ ...modalValue, text: e.target.value });\n    console.log(modalValue, id);\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n\n    editTodo(modalValue.id, modalValue);\n    setModalValue(\"\");\n    setIsOpen(false);\n  }\n\n  return !todos.length ? (\n    <Badge colorScheme=\"purple\" variant=\"outline\" borderRadius=\"4\" p=\"4\" m=\"5\">\n      No tasks for Today!!\n    </Badge>\n  ) : (\n    <VStack>\n      {todos.map((todo) => (\n        <HStack spacing=\"24px\" w=\"320px\">\n          <Flex p={6} w=\"300px\" h=\"50px\" justifyContent=\"space-between\">\n\n            <Text>{todo.text}</Text>\n            <Flex w=\"10px\">\n              <DeleteIcon\n                color=\"red.500\"\n                mr=\"2\"\n                onClick={() => deleteTodo(todo.id)}\n              />\n              <EditIcon onClick={() => handleEditClick(todo)} />\n            </Flex>\n            {/* modal for editing a todo */}\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Edit Your Task</ModalHeader>\n                <ModalCloseButton />\n                <form onSubmit={handleEditSubmit}>\n                  <ModalBody>\n                    <Input\n                      value={modalValue.text}\n                      key={modalValue.id}\n                      variant=\"outline\"\n                      type=\"text\"\n                      placeholder=\"Update your todo...\"\n                      onChange={handleEditInputChange}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button colorScheme=\"facebook\" mr={3} onClick={onClose}>\n                      Close\n                    </Button>\n                    <Button type=\"submit\" colorScheme=\"facebook\" mr={3}>\n                      Update\n                    </Button>\n                  </ModalFooter>\n                </form>\n              </ModalContent>\n            </Modal>\n          </Flex>\n        </HStack>\n      ))}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}