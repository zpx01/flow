{"ast":null,"code":"import React from 'react';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\n\nvar filterEmoji = function (emoji) {\n  if (emoji.name === 'White Smiling Face' || emoji.name === 'White Frowning Face') {\n    return false;\n  }\n\n  return true;\n};\n\nexport var EmojiPicker = function (props) {\n  var small = props.small;\n  var emojiConfig = useChannelStateContext().emojiConfig;\n  var EmojiPickerComponent = useComponentContext().EmojiPicker;\n  var t = useTranslationContext().t;\n  var messageInput = useMessageInputContext();\n  var emojiData = (emojiConfig || {}).emojiData;\n\n  if (messageInput.emojiPickerIsOpen && emojiData) {\n    var className = small ? 'str-chat__small-message-input-emojipicker' : 'str-chat__input--emojipicker';\n    return React.createElement(\"div\", {\n      className: className,\n      ref: messageInput.emojiPickerRef\n    }, EmojiPickerComponent && React.createElement(EmojiPickerComponent, {\n      color: '#006CFF',\n      data: emojiData,\n      emoji: 'point_up',\n      emojisToShowFilter: filterEmoji,\n      native: true,\n      onSelect: messageInput.onSelectEmoji,\n      set: 'facebook',\n      showPreview: false,\n      showSkinTones: false,\n      title: t('Pick your emoji'),\n      useButton: true\n    }));\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/node_modules/stream-chat-react/dist/components/MessageInput/EmojiPicker.js"],"names":["React","useChannelStateContext","useComponentContext","useTranslationContext","useMessageInputContext","filterEmoji","emoji","name","EmojiPicker","props","small","emojiConfig","EmojiPickerComponent","t","messageInput","emojiData","emojiPickerIsOpen","className","createElement","ref","emojiPickerRef","color","data","emojisToShowFilter","native","onSelect","onSelectEmoji","set","showPreview","showSkinTones","title","useButton"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,sBAAT,QAAuC,mCAAvC;;AACA,IAAIC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAC/B,MAAIA,KAAK,CAACC,IAAN,KAAe,oBAAf,IAAuCD,KAAK,CAACC,IAAN,KAAe,qBAA1D,EAAiF;AAC7E,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CALD;;AAMA,OAAO,IAAIC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AACtC,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AACA,MAAIC,WAAW,GAAGV,sBAAsB,GAAGU,WAA3C;AACA,MAAIC,oBAAoB,GAAGV,mBAAmB,GAAGM,WAAjD;AACA,MAAIK,CAAC,GAAGV,qBAAqB,GAAGU,CAAhC;AACA,MAAIC,YAAY,GAAGV,sBAAsB,EAAzC;AACA,MAAIW,SAAS,GAAG,CAACJ,WAAW,IAAI,EAAhB,EAAoBI,SAApC;;AACA,MAAID,YAAY,CAACE,iBAAb,IAAkCD,SAAtC,EAAiD;AAC7C,QAAIE,SAAS,GAAGP,KAAK,GACf,2CADe,GAEf,8BAFN;AAGA,WAAQV,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AAAED,MAAAA,SAAS,EAAEA,SAAb;AAAwBE,MAAAA,GAAG,EAAEL,YAAY,CAACM;AAA1C,KAA3B,EAAuFR,oBAAoB,IAAKZ,KAAK,CAACkB,aAAN,CAAoBN,oBAApB,EAA0C;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAEP,SAA1B;AAAqCT,MAAAA,KAAK,EAAE,UAA5C;AAAwDiB,MAAAA,kBAAkB,EAAElB,WAA5E;AAAyFmB,MAAAA,MAAM,EAAE,IAAjG;AAAuGC,MAAAA,QAAQ,EAAEX,YAAY,CAACY,aAA9H;AAA6IC,MAAAA,GAAG,EAAE,UAAlJ;AAA8JC,MAAAA,WAAW,EAAE,KAA3K;AAAkLC,MAAAA,aAAa,EAAE,KAAjM;AAAwMC,MAAAA,KAAK,EAAEjB,CAAC,CAAC,iBAAD,CAAhN;AAAqOkB,MAAAA,SAAS,EAAE;AAAhP,KAA1C,CAAhH,CAAR;AACH;;AACD,SAAO,IAAP;AACH,CAdM","sourcesContent":["import React from 'react';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nvar filterEmoji = function (emoji) {\n    if (emoji.name === 'White Smiling Face' || emoji.name === 'White Frowning Face') {\n        return false;\n    }\n    return true;\n};\nexport var EmojiPicker = function (props) {\n    var small = props.small;\n    var emojiConfig = useChannelStateContext().emojiConfig;\n    var EmojiPickerComponent = useComponentContext().EmojiPicker;\n    var t = useTranslationContext().t;\n    var messageInput = useMessageInputContext();\n    var emojiData = (emojiConfig || {}).emojiData;\n    if (messageInput.emojiPickerIsOpen && emojiData) {\n        var className = small\n            ? 'str-chat__small-message-input-emojipicker'\n            : 'str-chat__input--emojipicker';\n        return (React.createElement(\"div\", { className: className, ref: messageInput.emojiPickerRef }, EmojiPickerComponent && (React.createElement(EmojiPickerComponent, { color: '#006CFF', data: emojiData, emoji: 'point_up', emojisToShowFilter: filterEmoji, native: true, onSelect: messageInput.onSelectEmoji, set: 'facebook', showPreview: false, showSkinTones: false, title: t('Pick your emoji'), useButton: true }))));\n    }\n    return null;\n};\n"]},"metadata":{},"sourceType":"module"}