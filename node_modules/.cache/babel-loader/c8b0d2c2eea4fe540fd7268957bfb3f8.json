{"ast":null,"code":"var _jsxFileName = \"/Users/zeeshanpatel/flow/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { HStack, VStack, Text, Flex, Badge, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, Input, Divider } from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoList({\n  todos,\n  deleteTodo,\n  editTodo\n}) {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n  const [modalValue, setModalValue] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  function onClose() {\n    setIsOpen(false);\n  }\n\n  function handleEditClick(todo) {\n    setIsOpen(true); // we've set the passed todo to modal value\n\n    setModalValue(todo);\n    console.log(todo);\n  }\n\n  function handleEditInputChange(e, id) {\n    setModalValue({ ...modalValue,\n      text: e.target.value\n    });\n    console.log(modalValue, id);\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n    editTodo(modalValue.id, modalValue);\n    setModalValue(\"\");\n    setIsOpen(false);\n  }\n\n  return !todos.length ? /*#__PURE__*/_jsxDEV(Badge, {\n    colorScheme: \"purple\",\n    variant: \"outline\",\n    borderRadius: \"4\",\n    p: \"4\",\n    m: \"5\",\n    children: \"No tasks for Today!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(VStack, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: \"24px\",\n      w: \"320px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        p: 6,\n        w: \"300px\",\n        h: \"50px\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            w: \"10px\",\n            children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n              color: \"red.500\",\n              mr: \"2\",\n              onClick: () => deleteTodo(todo.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n              onClick: () => handleEditClick(todo)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isOpen,\n          onClose: onClose,\n          children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n            children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n              children: \"Edit Your Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleEditSubmit,\n              children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  value: modalValue.text,\n                  variant: \"outline\",\n                  type: \"text\",\n                  placeholder: \"Update your todo...\",\n                  onChange: handleEditInputChange\n                }, modalValue.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"facebook\",\n                  mr: 3,\n                  onClick: onClose,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  colorScheme: \"facebook\",\n                  mr: 3,\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"Yz1AE/bMS1gBrHbJpxHWbxWp0EI=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/zeeshanpatel/flow/src/components/TodoList.js"],"names":["HStack","VStack","Text","Flex","Badge","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","Input","Divider","DeleteIcon","EditIcon","React","useState","TodoList","todos","deleteTodo","editTodo","todo","setTodo","modalValue","setModalValue","isOpen","setIsOpen","onClose","handleEditClick","console","log","handleEditInputChange","e","id","text","target","value","handleEditSubmit","preventDefault","length","map"],"mappings":"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","sourcesContent":["import {\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  Badge,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Input,\n  Divider,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React, { useState } from \"react\";\n\nexport function TodoList({ todos, deleteTodo, editTodo }) {\n  const [todo, setTodo] = useState(\"\");\n  const [modalValue, setModalValue] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n\n  function onClose() {\n    setIsOpen(false);\n  }\n\n  function handleEditClick(todo) {\n    setIsOpen(true);\n    // we've set the passed todo to modal value\n    setModalValue(todo);\n    console.log(todo);\n  }\n\n  function handleEditInputChange(e, id) {\n    setModalValue({ ...modalValue, text: e.target.value });\n    console.log(modalValue, id);\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n\n    editTodo(modalValue.id, modalValue);\n    setModalValue(\"\");\n    setIsOpen(false);\n  }\n\n  return !todos.length ? (\n    <Badge colorScheme=\"purple\" variant=\"outline\" borderRadius=\"4\" p=\"4\" m=\"5\">\n      No tasks for Today!!\n    </Badge>\n  ) : (\n    <VStack>\n      {todos.map((todo) => (\n        <HStack spacing=\"24px\" w=\"320px\">\n          <Flex p={6} w=\"300px\" h=\"50px\" justifyContent=\"space-between\">\n            <Box>\n              <Text>{todo.text}</Text>\n              <Flex w=\"10px\">\n                <DeleteIcon\n                  color=\"red.500\"\n                  mr=\"2\"\n                  onClick={() => deleteTodo(todo.id)}\n                />\n                <EditIcon onClick={() => handleEditClick(todo)} />\n              </Flex>\n            </Box>\n            {/* modal for editing a todo */}\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Edit Your Task</ModalHeader>\n                <ModalCloseButton />\n                <form onSubmit={handleEditSubmit}>\n                  <ModalBody>\n                    <Input\n                      value={modalValue.text}\n                      key={modalValue.id}\n                      variant=\"outline\"\n                      type=\"text\"\n                      placeholder=\"Update your todo...\"\n                      onChange={handleEditInputChange}\n                    />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button colorScheme=\"facebook\" mr={3} onClick={onClose}>\n                      Close\n                    </Button>\n                    <Button type=\"submit\" colorScheme=\"facebook\" mr={3}>\n                      Update\n                    </Button>\n                  </ModalFooter>\n                </form>\n              </ModalContent>\n            </Modal>\n          </Flex>\n        </HStack>\n      ))}\n    </VStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}